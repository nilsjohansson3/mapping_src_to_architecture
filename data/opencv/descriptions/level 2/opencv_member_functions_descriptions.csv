Module,Text
calib3d,Public Member Functions
calib3d,virtual
calib3d,virtual void
calib3d,virtual void
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual bool
calib3d,Return true if detector object is empty.
calib3d,virtual String
calib3d,virtual void
calib3d,Reads algorithm parameters from a file storage.
calib3d,void
calib3d,void
calib3d,void
calib3d,virtual void
calib3d,Stores algorithm parameters in a file storage.
calib3d,void
calib3d,Public Member Functions inherited from cv::Algorithm
calib3d,virtual
calib3d,virtual void
calib3d,Clears the algorithm state.
calib3d,virtual void
calib3d,void
calib3d,void
calib3d,Public Member Functions
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,"template<typename _Tp , int m, int n>"
calib3d,"template<typename _Tp , std::size_t _Nm>"
calib3d,template<std::size_t _Nm>
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,"template<typename _Tp , int m, int n>"
calib3d,"template<typename _Tp , std::size_t _Nm>"
calib3d,template<std::size_t _Nm>
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,"template<typename _Tp , std::size_t _Nm>"
calib3d,_InputOutputArray
calib3d,Public Member Functions inherited from cv::_OutputArray
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,"template<typename _Tp , int m, int n>"
calib3d,"template<typename _Tp , std::size_t _Nm>"
calib3d,template<std::size_t _Nm>
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,"template<typename _Tp , int m, int n>"
calib3d,"template<typename _Tp , std::size_t _Nm>"
calib3d,template<std::size_t _Nm>
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,void
calib3d,void
calib3d,void
calib3d,void
calib3d,void
calib3d,void
calib3d,void
calib3d,void
calib3d,void
calib3d,bool
calib3d,bool
calib3d,cuda::GpuMat &
calib3d,std::vector< cuda::GpuMat > &
calib3d,cuda::HostMem &
calib3d,Mat &
calib3d,ogl::Buffer &
calib3d,UMat &
calib3d,void
calib3d,void
calib3d,bool
calib3d,void
calib3d,void
calib3d,Public Member Functions inherited from cv::_InputArray
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,"template<typename _Tp , int m, int n>"
calib3d,"template<typename _Tp , std::size_t _Nm>"
calib3d,template<std::size_t _Nm>
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,template<typename _Tp >
calib3d,int
calib3d,int
calib3d,void
calib3d,void
calib3d,int
calib3d,int
calib3d,bool
calib3d,int
calib3d,cuda::GpuMat
calib3d,void
calib3d,Mat
calib3d,Mat
calib3d,void
calib3d,void *
calib3d,ogl::Buffer
calib3d,Size
calib3d,UMat
calib3d,void
calib3d,bool
calib3d,bool
calib3d,bool
calib3d,bool
calib3d,bool
calib3d,bool
calib3d,bool
calib3d,bool
calib3d,bool
calib3d,bool
calib3d,_InputArray::KindFlag
calib3d,size_t
calib3d,int
calib3d,bool
calib3d,Size
calib3d,int
calib3d,size_t
calib3d,size_t
calib3d,int
calib3d,Public Member Functions
calib3d,MatExpr
calib3d,Mat
calib3d,MatExpr
calib3d,double
calib3d,MatExpr
calib3d,MatExpr
calib3d,MatExpr
calib3d,template<typename _Tp >
calib3d,MatExpr
calib3d,MatExpr
calib3d,MatExpr
calib3d,Size
calib3d,void
calib3d,MatExpr
calib3d,int
calib3d,Public Member Functions
calib3d,virtual
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual bool
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual Size
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual int
calib3d,Public Member Functions
calib3d,default constructor
calib3d,"template<typename _Tp2 , int cn>"
calib3d,Scalar_< _Tp >
calib3d,bool
calib3d,returns true iff v1 == v2 == v3 == 0
calib3d,Scalar_< _Tp >
calib3d,per-element product
calib3d,template<typename T2 >
calib3d,conversion to another data type
calib3d,Scalar_ &
calib3d,Scalar_ &
calib3d,"Public Member Functions inherited from cv::Vec< _Tp, 4 >"
calib3d,default constructor
calib3d,1-element vector constructor
calib3d,2-element vector constructor
calib3d,3-element vector constructor
calib3d,4-element vector constructor
calib3d,5-element vector constructor
calib3d,6-element vector constructor
calib3d,7-element vector constructor
calib3d,8-element vector constructor
calib3d,9-element vector constructor
calib3d,10-element vector constructor
calib3d,14-element vector constructor
calib3d,Vec
calib3d,Vec
calib3d,Vec
calib3d,per-element multiplication
calib3d,conversion to another data type
calib3d,_Tp &
calib3d,const _Tp &
calib3d,"Vec< _Tp, cn > &"
calib3d,_Tp &
calib3d,const _Tp &
calib3d,"Public Member Functions inherited from cv::Matx< _Tp, cn, 1 >"
calib3d,default constructor
calib3d,1x1 matrix
calib3d,1x2 or 2x1 matrix
calib3d,1x3 or 3x1 matrix
calib3d,"1x4, 2x2 or 4x1 matrix"
calib3d,1x5 or 5x1 matrix
calib3d,"1x6, 2x3, 3x2 or 6x1 matrix"
calib3d,1x7 or 7x1 matrix
calib3d,"1x8, 2x4, 4x2 or 8x1 matrix"
calib3d,"1x9, 3x3 or 9x1 matrix"
calib3d,"1x10, 2x5 or 5x2 or 10x1 matrix"
calib3d,"1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix"
calib3d,"1x14, 2x7, 7x2 or 14x1 matrix"
calib3d,"1x16, 4x4 or 16x1 matrix"
calib3d,initialize from a plain array
calib3d,initialize from an initializer list
calib3d,"Matx< _Tp, m, 1 >"
calib3d,extract the matrix column
calib3d,double
calib3d,dot product computed in double-precision arithmetics
calib3d,diag_type
calib3d,extract the matrix diagonal
calib3d,"Matx< _Tp, m, n >"
calib3d,divide two matrices element-wise
calib3d,_Tp
calib3d,dot product computed with the default precision
calib3d,"Matx< _Tp, m1, n1 >"
calib3d,extract part of the matrix
calib3d,"Matx< _Tp, n, m >"
calib3d,invert the matrix
calib3d,"Matx< _Tp, m, n >"
calib3d,multiply two matrices element-wise
calib3d,conversion to another data type
calib3d,_Tp &
calib3d,const _Tp &
calib3d,1D element access
calib3d,_Tp &
calib3d,const _Tp &
calib3d,element access
calib3d,"Matx< _Tp, m1, n1 >"
calib3d,change the matrix shape
calib3d,"Matx< _Tp, 1, n >"
calib3d,extract the matrix row
calib3d,"Matx< _Tp, n, l >"
calib3d,solve linear system
calib3d,"Vec< _Tp, n >"
calib3d,"Matx< _Tp, n, m >"
calib3d,transpose the matrix
calib3d,Public Member Functions
calib3d,virtual void
calib3d,Computes disparity map for the specified stereo pair.
calib3d,virtual void
calib3d,Computes disparity map with specified CUDA Stream.
calib3d,Public Member Functions inherited from cv::StereoSGBM
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,Public Member Functions inherited from cv::StereoMatcher
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,Public Member Functions inherited from cv::Algorithm
calib3d,virtual
calib3d,virtual void
calib3d,Clears the algorithm state.
calib3d,virtual bool
calib3d,virtual String
calib3d,virtual void
calib3d,Reads algorithm parameters from a file storage.
calib3d,virtual void
calib3d,void
calib3d,virtual void
calib3d,Stores algorithm parameters in a file storage.
calib3d,void
calib3d,Public Member Functions
calib3d,the default constructor
calib3d,size_t
calib3d,Public Member Functions
calib3d,virtual void
calib3d,Detect MSER regions.
calib3d,virtual double
calib3d,virtual String
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual double
calib3d,virtual int
calib3d,virtual double
calib3d,virtual double
calib3d,virtual bool
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,Public Member Functions inherited from cv::Feature2D
calib3d,virtual
calib3d,virtual void
calib3d,virtual void
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual bool
calib3d,Return true if detector object is empty.
calib3d,virtual void
calib3d,Reads algorithm parameters from a file storage.
calib3d,void
calib3d,void
calib3d,void
calib3d,virtual void
calib3d,Stores algorithm parameters in a file storage.
calib3d,void
calib3d,Public Member Functions inherited from cv::Algorithm
calib3d,virtual
calib3d,virtual void
calib3d,Clears the algorithm state.
calib3d,virtual void
calib3d,void
calib3d,void
calib3d,Public Member Functions
calib3d,virtual
calib3d,virtual void
calib3d,Clears the algorithm state.
calib3d,virtual bool
calib3d,virtual String
calib3d,virtual void
calib3d,Reads algorithm parameters from a file storage.
calib3d,virtual void
calib3d,void
calib3d,virtual void
calib3d,Stores algorithm parameters in a file storage.
calib3d,void
calib3d,Public Member Functions
calib3d,MatStep &
calib3d,const size_t &
calib3d,size_t &
calib3d,Public Member Functions
calib3d,bool
calib3d,Public Member Functions
calib3d,virtual
calib3d,virtual const char *
calib3d,virtual void
calib3d,Public Member Functions
calib3d,the default constructor
calib3d,the copy constructor
calib3d,the full constructor setting the iterator to the first sparse matrix element
calib3d,the full constructor setting the iterator to the specified sparse matrix element
calib3d,SparseMat::Node *
calib3d,SparseMatIterator &
calib3d,moves iterator to the next element
calib3d,SparseMatIterator
calib3d,moves iterator to the next element
calib3d,SparseMatIterator &
calib3d,the assignment operator
calib3d,template<typename _Tp >
calib3d,_Tp &
calib3d,returns read-write reference to the current sparse matrix element
calib3d,Public Member Functions inherited from cv::SparseMatConstIterator
calib3d,the default constructor
calib3d,the full constructor setting the iterator to the first sparse matrix element
calib3d,the copy constructor
calib3d,const SparseMat::Node *
calib3d,returns the current node of the sparse matrix. it.node->idx is the current element index
calib3d,SparseMatConstIterator &
calib3d,moves iterator to the next element
calib3d,SparseMatConstIterator
calib3d,moves iterator to the next element
calib3d,SparseMatConstIterator &
calib3d,moves iterator to the previous element
calib3d,SparseMatConstIterator
calib3d,moves iterator to the previous element
calib3d,SparseMatConstIterator &
calib3d,the assignment operator
calib3d,void
calib3d,moves iterator to the element after the last element
calib3d,template<typename _Tp >
calib3d,const _Tp &
calib3d,template method returning the current matrix element
calib3d,Public Member Functions
calib3d,the default constructor
calib3d,the full constructor taking arbitrary number of n-dim matrices
calib3d,the full constructor taking arbitrary number of n-dim matrices
calib3d,void
calib3d,the separate iterator initialization method
calib3d,NAryMatIterator &
calib3d,proceeds to the next plane of every iterated matrix
calib3d,NAryMatIterator
calib3d,Public Member Functions
calib3d,"the constructor, created by ""matrix << firstValue"" operator, where matrix is cv::Mat"
calib3d,another form of conversion operator
calib3d,template<typename T2 >
calib3d,MatCommaInitializer_< _Tp > &
calib3d,the operator that takes the next value and put it to the matrix
calib3d,Public Member Functions
calib3d,virtual void
calib3d,Equalizes the histogram of a grayscale image using Contrast Limited Adaptive Histogram Equalization.
calib3d,virtual void
calib3d,virtual double
calib3d,Returns threshold value for contrast limiting.
calib3d,virtual Size
calib3d,Returns Size defines the number of tiles in row and column.
calib3d,virtual void
calib3d,Sets threshold for contrast limiting.
calib3d,virtual void
calib3d,Sets size of grid for histogram equalization. Input image will be divided into equally sized rectangular tiles.
calib3d,Public Member Functions inherited from cv::Algorithm
calib3d,virtual
calib3d,virtual void
calib3d,Clears the algorithm state.
calib3d,virtual bool
calib3d,virtual String
calib3d,virtual void
calib3d,Reads algorithm parameters from a file storage.
calib3d,virtual void
calib3d,void
calib3d,virtual void
calib3d,Stores algorithm parameters in a file storage.
calib3d,void
calib3d,Public Member Functions
calib3d,Public Member Functions
calib3d,virtual double
calib3d,virtual String
calib3d,virtual double
calib3d,virtual int
calib3d,virtual int
calib3d,virtual double
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,Public Member Functions inherited from cv::Feature2D
calib3d,virtual
calib3d,virtual void
calib3d,virtual void
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual bool
calib3d,Return true if detector object is empty.
calib3d,virtual void
calib3d,Reads algorithm parameters from a file storage.
calib3d,void
calib3d,void
calib3d,void
calib3d,virtual void
calib3d,Stores algorithm parameters in a file storage.
calib3d,void
calib3d,Public Member Functions inherited from cv::Algorithm
calib3d,virtual
calib3d,virtual void
calib3d,Clears the algorithm state.
calib3d,virtual void
calib3d,void
calib3d,void
calib3d,Public Member Functions
calib3d,virtual
calib3d,virtual bool
calib3d,Public Member Functions
calib3d,void
calib3d,void
calib3d,Public Member Functions
calib3d,virtual String
calib3d,virtual void
calib3d,virtual void
calib3d,Public Member Functions inherited from cv::Feature2D
calib3d,virtual
calib3d,virtual void
calib3d,virtual void
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual bool
calib3d,Return true if detector object is empty.
calib3d,virtual void
calib3d,Reads algorithm parameters from a file storage.
calib3d,void
calib3d,void
calib3d,void
calib3d,virtual void
calib3d,Stores algorithm parameters in a file storage.
calib3d,void
calib3d,Public Member Functions inherited from cv::Algorithm
calib3d,virtual
calib3d,virtual void
calib3d,Clears the algorithm state.
calib3d,virtual void
calib3d,void
calib3d,void
calib3d,Public Member Functions
calib3d,bool
calib3d,int
calib3d,Public Member Functions
calib3d,default constructor
calib3d,Complex
calib3d,conjugation
calib3d,template<typename T2 >
calib3d,conversion to another data type
calib3d,Public Member Functions
calib3d,unsigned
calib3d,unsigned
calib3d,unsigned
calib3d,void
calib3d,double
calib3d,"returns uniformly distributed double-precision floating-point random number from [a,b) range"
calib3d,float
calib3d,"returns uniformly distributed floating-point random number from [a,b) range"
calib3d,int
calib3d,"returns uniformly distributed integer random number from [a,b) range"
calib3d,Public Member Functions
calib3d,void
calib3d,Mat
calib3d,Mat
calib3d,void
calib3d,void
calib3d,Mat
calib3d,Mat
calib3d,void
calib3d,void
calib3d,Public Member Functions
calib3d,virtual
calib3d,virtual int
calib3d,virtual void
calib3d,Finds lines in the input image.
calib3d,virtual void
calib3d,Draws the line segments on a given image.
calib3d,Public Member Functions inherited from cv::Algorithm
calib3d,virtual
calib3d,virtual void
calib3d,Clears the algorithm state.
calib3d,virtual bool
calib3d,virtual String
calib3d,virtual void
calib3d,Reads algorithm parameters from a file storage.
calib3d,virtual void
calib3d,void
calib3d,virtual void
calib3d,Stores algorithm parameters in a file storage.
calib3d,void
calib3d,Public Member Functions
calib3d,default constructor
calib3d,Rect
calib3d,returns the minimal up-right integer rectangle containing the rotated rectangle
calib3d,Rect2f
calib3d,void
calib3d,void
calib3d,Public Member Functions
calib3d,Public Member Functions
calib3d,virtual String
calib3d,virtual int
calib3d,virtual float
calib3d,virtual int
calib3d,virtual void
calib3d,Set detection octaves.
calib3d,virtual void
calib3d,Set detection patternScale.
calib3d,virtual void
calib3d,Set detection threshold.
calib3d,Public Member Functions inherited from cv::Feature2D
calib3d,virtual
calib3d,virtual void
calib3d,virtual void
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual bool
calib3d,Return true if detector object is empty.
calib3d,virtual void
calib3d,Reads algorithm parameters from a file storage.
calib3d,void
calib3d,void
calib3d,void
calib3d,virtual void
calib3d,Stores algorithm parameters in a file storage.
calib3d,void
calib3d,Public Member Functions inherited from cv::Algorithm
calib3d,virtual
calib3d,virtual void
calib3d,Clears the algorithm state.
calib3d,virtual void
calib3d,void
calib3d,void
calib3d,Public Member Functions
calib3d,virtual int
calib3d,virtual String
calib3d,virtual int
calib3d,virtual bool
calib3d,virtual double
calib3d,virtual int
calib3d,virtual double
calib3d,virtual double
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,Public Member Functions inherited from cv::Feature2D
calib3d,virtual
calib3d,virtual void
calib3d,virtual void
calib3d,virtual int
calib3d,virtual int
calib3d,virtual int
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual bool
calib3d,Return true if detector object is empty.
calib3d,virtual void
calib3d,Reads algorithm parameters from a file storage.
calib3d,void
calib3d,void
calib3d,void
calib3d,virtual void
calib3d,Stores algorithm parameters in a file storage.
calib3d,void
calib3d,Public Member Functions inherited from cv::Algorithm
calib3d,virtual
calib3d,virtual void
calib3d,Clears the algorithm state.
calib3d,virtual void
calib3d,void
calib3d,void
calib3d,Public Member Functions
calib3d,virtual
calib3d,virtual UMatData *
calib3d,virtual bool
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,virtual BufferPoolController *
calib3d,virtual void
calib3d,virtual void
calib3d,virtual void
calib3d,Public Member Functions
calib3d,int
calib3d,bool
calib3d,Size
calib3d,bool
calib3d,int &
calib3d,const int &
calib3d,Public Member Functions
calib3d,the default constructor
calib3d,the full constructor setting the iterator to the first sparse matrix element
calib3d,the copy constructor
calib3d,const SparseMat::Node *
calib3d,returns the current node of the sparse matrix. it.node->idx is the current element index
calib3d,SparseMatConstIterator &
calib3d,moves iterator to the next element
calib3d,SparseMatConstIterator
calib3d,moves iterator to the next element
calib3d,SparseMatConstIterator &
calib3d,moves iterator to the previous element
calib3d,SparseMatConstIterator
calib3d,moves iterator to the previous element
calib3d,SparseMatConstIterator &
calib3d,the assignment operator
calib3d,void
calib3d,moves iterator to the element after the last element
calib3d,template<typename _Tp >
calib3d,const _Tp &
calib3d,template method returning the current matrix element
core,Static Public Member Functions
core,static Ptr< ConjGradSolver >
core,This function returns the reference to the ready-to-use ConjGradSolver object.
core,Static Public Member Functions inherited from cv::Algorithm
core,template<typename _Tp >
core,static Ptr< _Tp >
core,Loads algorithm from the file.
core,template<typename _Tp >
core,static Ptr< _Tp >
core,Loads algorithm from a String.
core,template<typename _Tp >
core,static Ptr< _Tp >
core,Reads algorithm from the file node.
core,Public Member Functions
core,Copy constructor.
core,Constructor.
core,Destructor.
core,void
core,Set the about message.
core,bool
core,Check for parsing errors.
core,template<typename T >
core,T
core,Access arguments by name.
core,template<typename T >
core,T
core,Access positional arguments by index.
core,String
core,Returns application path.
core,bool
core,Check if field was provided in the command line.
core,CommandLineParser &
core,Assignment operator.
core,void
core,Print list of errors occurred.
core,void
core,Print help message.
core,Public Member Functions
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,"template<typename _Tp , int m, int n>"
core,"template<typename _Tp , std::size_t _Nm>"
core,template<std::size_t _Nm>
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,"template<typename _Tp , int m, int n>"
core,"template<typename _Tp , std::size_t _Nm>"
core,template<std::size_t _Nm>
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,"template<typename _Tp , std::size_t _Nm>"
core,_InputOutputArray
core,Public Member Functions inherited from cv::_OutputArray
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,"template<typename _Tp , int m, int n>"
core,"template<typename _Tp , std::size_t _Nm>"
core,template<std::size_t _Nm>
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,"template<typename _Tp , int m, int n>"
core,"template<typename _Tp , std::size_t _Nm>"
core,template<std::size_t _Nm>
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,void
core,void
core,void
core,void
core,void
core,void
core,void
core,void
core,void
core,bool
core,bool
core,cuda::GpuMat &
core,std::vector< cuda::GpuMat > &
core,cuda::HostMem &
core,Mat &
core,ogl::Buffer &
core,UMat &
core,void
core,void
core,bool
core,void
core,void
core,Public Member Functions inherited from cv::_InputArray
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,"template<typename _Tp , int m, int n>"
core,"template<typename _Tp , std::size_t _Nm>"
core,template<std::size_t _Nm>
core,template<typename _Tp >
core,template<typename _Tp >
core,template<typename _Tp >
core,int
core,int
core,void
core,void
core,int
core,int
core,bool
core,int
core,cuda::GpuMat
core,void
core,Mat
core,Mat
core,void
core,void *
core,ogl::Buffer
core,Size
core,UMat
core,void
core,bool
core,bool
core,bool
core,bool
core,bool
core,bool
core,bool
core,bool
core,bool
core,bool
core,_InputArray::KindFlag
core,size_t
core,int
core,bool
core,Size
core,int
core,size_t
core,size_t
core,int
core,Public Member Functions
core,Image2D &
core,Image2D &
core,void *
core,Public Member Functions
core,MatExpr
core,Mat
core,MatExpr
core,double
core,MatExpr
core,MatExpr
core,MatExpr
core,template<typename _Tp >
core,MatExpr
core,MatExpr
core,MatExpr
core,Size
core,void
core,MatExpr
core,int
core,Public Member Functions
core,virtual
core,virtual void
core,virtual void
core,virtual void
core,virtual void
core,virtual void
core,virtual void
core,virtual void
core,virtual void
core,virtual void
core,virtual void
core,virtual void
core,virtual void
core,virtual void
core,virtual void
core,virtual bool
core,virtual void
core,virtual void
core,virtual void
core,virtual void
core,virtual void
core,virtual Size
core,virtual void
core,virtual void
core,virtual void
core,virtual int
core,Public Member Functions
core,default constructor
core,"template<typename _Tp2 , int cn>"
core,Scalar_< _Tp >
core,bool
core,returns true iff v1 == v2 == v3 == 0
core,Scalar_< _Tp >
core,per-element product
core,template<typename T2 >
core,conversion to another data type
core,Scalar_ &
core,Scalar_ &
core,"Public Member Functions inherited from cv::Vec< _Tp, 4 >"
core,default constructor
core,1-element vector constructor
core,2-element vector constructor
core,3-element vector constructor
core,4-element vector constructor
core,5-element vector constructor
core,6-element vector constructor
core,7-element vector constructor
core,8-element vector constructor
core,9-element vector constructor
core,10-element vector constructor
core,14-element vector constructor
core,Vec
core,Vec
core,Vec
core,per-element multiplication
core,conversion to another data type
core,_Tp &
core,const _Tp &
core,"Vec< _Tp, cn > &"
core,_Tp &
core,const _Tp &
core,"Public Member Functions inherited from cv::Matx< _Tp, cn, 1 >"
core,default constructor
core,1x1 matrix
core,1x2 or 2x1 matrix
core,1x3 or 3x1 matrix
core,"1x4, 2x2 or 4x1 matrix"
core,1x5 or 5x1 matrix
core,"1x6, 2x3, 3x2 or 6x1 matrix"
core,1x7 or 7x1 matrix
core,"1x8, 2x4, 4x2 or 8x1 matrix"
core,"1x9, 3x3 or 9x1 matrix"
core,"1x10, 2x5 or 5x2 or 10x1 matrix"
core,"1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix"
core,"1x14, 2x7, 7x2 or 14x1 matrix"
core,"1x16, 4x4 or 16x1 matrix"
core,initialize from a plain array
core,initialize from an initializer list
core,"Matx< _Tp, m, 1 >"
core,extract the matrix column
core,double
core,dot product computed in double-precision arithmetics
core,diag_type
core,extract the matrix diagonal
core,"Matx< _Tp, m, n >"
core,divide two matrices element-wise
core,_Tp
core,dot product computed with the default precision
core,"Matx< _Tp, m1, n1 >"
core,extract part of the matrix
core,"Matx< _Tp, n, m >"
core,invert the matrix
core,"Matx< _Tp, m, n >"
core,multiply two matrices element-wise
core,conversion to another data type
core,_Tp &
core,const _Tp &
core,1D element access
core,_Tp &
core,const _Tp &
core,element access
core,"Matx< _Tp, m1, n1 >"
core,change the matrix shape
core,"Matx< _Tp, 1, n >"
core,extract the matrix row
core,"Matx< _Tp, n, l >"
core,solve linear system
core,"Vec< _Tp, n >"
core,"Matx< _Tp, n, m >"
core,transpose the matrix
core,Public Member Functions
core,virtual
core,void
core,virtual const char *
core,Public Member Functions
core,the default constructor
core,size_t
core,Public Member Functions
core,virtual
core,virtual void
core,Public Member Functions
core,bool
core,bool
core,void
core,Query device-specific program binary.
core,Impl *
core,String
core,Program &
core,Program &
core,void *
core,bool
core,const ProgramSource &
core,bool
core,Public Member Functions
core,virtual
core,virtual void
core,Clears the algorithm state.
core,virtual bool
core,virtual String
core,virtual void
core,Reads algorithm parameters from a file storage.
core,virtual void
core,void
core,virtual void
core,Stores algorithm parameters in a file storage.
core,void
core,Public Member Functions
core,virtual void
core,Public Member Functions inherited from cv::ParallelLoopBody
core,virtual
core,Public Member Functions
core,void
core,int
core,Node< OBJECT > *
core,int
core,void
core,Public Member Functions
core,void *
core,void
core,"template<typename _Rep , typename _Period >"
core,bool
core,bool
core,bool
core,AsyncArray &
core,AsyncArray &
core,void
core,bool
core,"template<typename _Rep , typename _Period >"
core,bool
core,bool
core,bool
core,Public Member Functions
core,MatStep &
core,const size_t &
core,size_t &
core,Public Member Functions
core,virtual void
core,Returns the initial step that will be used in downhill simplex algorithm.
core,virtual void
core,Sets the initial step that will be used in downhill simplex algorithm.
core,Public Member Functions inherited from cv::MinProblemSolver
core,virtual Ptr< Function >
core,Getter for the optimized function.
core,virtual TermCriteria
core,Getter for the previously set terminal criteria for this algorithm.
core,virtual double
core,actually runs the algorithm and performs the minimization.
core,virtual void
core,Setter for the optimized function.
core,virtual void
core,Set terminal criteria for solver.
core,Public Member Functions inherited from cv::Algorithm
core,virtual
core,virtual void
core,Clears the algorithm state.
core,virtual bool
core,virtual String
core,virtual void
core,Reads algorithm parameters from a file storage.
core,virtual void
core,void
core,virtual void
core,Stores algorithm parameters in a file storage.
core,void
core,Public Member Functions
core,Public Member Functions
core,virtual void
core,virtual size_t
core,virtual size_t
core,virtual void
core,Public Member Functions
core,create from eight same type numbers.
core,create from a double or float vector.
core,DualQuat< _Tp >
core,return the conjugate of a dual quaternion.
core,_Tp
core,return the dot product of two dual quaternion.
core,DualQuat< _Tp >
core,return the value of exponential function value
core,Quat< _Tp >
core,Quat< _Tp >
core,Quat< _Tp >
core,return the rotation in quaternion form.
core,"Vec< _Tp, 3 >"
core,DualQuat< _Tp >
core,DualQuat< _Tp >
core,return the value of logarithm function value
core,DualQuat< _Tp >
core,DualQuat< _Tp >
core,return a normalized dual quaternion. A dual quaternion can be expressed as
core,DualQuat< _Tp >
core,Multiplication operator of two dual quaternions q and p. Multiplies values on either side of the operator.
core,DualQuat< _Tp >
core,Multiplication assignment operator of a quaternions and a scalar. It multiplies right operand with the left operand and assign the result to left operand.
core,DualQuat< _Tp > &
core,Multiplication assignment operator of two quaternions. It multiplies right operand with the left operand and assign the result to left operand.
core,DualQuat< _Tp >
core,DualQuat< _Tp > &
core,Addition assignment operator of two dual quaternions p and q. It adds right operand to the left operand and assign the result to left operand.
core,DualQuat< _Tp >
core,DualQuat< _Tp >
core,DualQuat< _Tp > &
core,Subtraction assignment operator of two dual quaternions p and q. It subtracts right operand from the left operand and assign the result to left operand.
core,DualQuat< _Tp >
core,Division operator of a dual quaternions and a scalar. It divides left operand with the right operand and assign the result to left operand.
core,DualQuat< _Tp >
core,Division operator of two dual quaternions p and q. Divides left hand operand by right hand operand.
core,Quat< _Tp > &
core,Division assignment operator of a dual quaternions and a scalar. It divides left operand with the right operand and assign the result to left operand.
core,DualQuat< _Tp > &
core,Division assignment operator of two dual quaternions p and q; It divides left operand with the right operand and assign the result to left operand.
core,bool
core,DualQuat< _Tp >
core,DualQuat< _Tp >
core,Affine3< _Tp >
core,Transform this dual quaternion to a instance of Affine3.
core,"Matx< _Tp, 4, 4 >"
core,"Vec< _Tp, 8 >"
core,Transform this dual quaternion to a vector.
core,Public Member Functions
core,bool
core,Public Member Functions
core,virtual
core,virtual const char *
core,virtual void
core,Public Member Functions
core,the default constructor
core,the copy constructor
core,the full constructor setting the iterator to the first sparse matrix element
core,the full constructor setting the iterator to the specified sparse matrix element
core,SparseMat::Node *
core,SparseMatIterator &
core,moves iterator to the next element
core,SparseMatIterator
core,moves iterator to the next element
core,SparseMatIterator &
core,the assignment operator
core,template<typename _Tp >
core,_Tp &
core,returns read-write reference to the current sparse matrix element
core,Public Member Functions inherited from cv::SparseMatConstIterator
core,the default constructor
core,the full constructor setting the iterator to the first sparse matrix element
core,the copy constructor
core,const SparseMat::Node *
core,returns the current node of the sparse matrix. it.node->idx is the current element index
core,SparseMatConstIterator &
core,moves iterator to the next element
core,SparseMatConstIterator
core,moves iterator to the next element
core,SparseMatConstIterator &
core,moves iterator to the previous element
core,SparseMatConstIterator
core,moves iterator to the previous element
core,SparseMatConstIterator &
core,the assignment operator
core,void
core,moves iterator to the element after the last element
core,template<typename _Tp >
core,const _Tp &
core,template method returning the current matrix element
core,Public Member Functions
core,the default constructor
core,the full constructor taking arbitrary number of n-dim matrices
core,the full constructor taking arbitrary number of n-dim matrices
core,void
core,the separate iterator initialization method
core,NAryMatIterator &
core,proceeds to the next plane of every iterated matrix
core,NAryMatIterator
core,Public Member Functions
core,Default constructor.
core,void
core,Binds all vertex arrays.
core,bool
core,void
core,Releases all inner buffers.
core,void
core,Resets vertex colors.
core,void
core,Resets vertex normals.
core,void
core,Resets vertex texture coordinates.
core,void
core,Resets vertex coordinates.
core,void
core,Sets auto release mode all inner buffers.
core,void
core,Sets an array of vertex colors.
core,void
core,Sets an array of vertex normals.
core,void
core,Sets an array of vertex texture coordinates.
core,void
core,Sets an array of vertex coordinates.
core,int
core,Returns the vertex count.
core,Public Member Functions
core,int
core,bool
core,void
core,String
core,PlatformInfo &
core,PlatformInfo &
core,String
core,String
core,See CL_PLATFORM_VERSION.
core,int
core,int
core,Public Member Functions
core,"the constructor, created by ""matrix << firstValue"" operator, where matrix is cv::Mat"
core,another form of conversion operator
core,template<typename T2 >
core,MatCommaInitializer_< _Tp > &
core,the operator that takes the next value and put it to the matrix
core,Public Member Functions
core,The constructors.
core,bool
core,FileNode
core,returns the currently observed element
core,FileNodeIterator &
core,moves iterator to the next node
core,FileNodeIterator
core,moves iterator to the next node
core,FileNodeIterator &
core,FileNodeIterator &
core,FileNodeIterator &
core,Reads node elements to the buffer with the specified format.
core,size_t
core,Public Member Functions
core,void
core,OpenCLExecutionContext
core,OpenCLExecutionContext
core,bool
core,Context &
core,Device &
core,Queue &
core,OpenCLExecutionContext &
core,OpenCLExecutionContext &
core,void
core,void
core,bool
core,Public Member Functions
core,Class constructor.
core,Class destructor.
core,template<typename T >
core,void
core,Bind a pointer to local area.
core,void
core,Allocate memory and initialize all bound pointers.
core,void
core,Release all memory and unbind all pointers.
core,void
core,Fill all buffers with zeroes.
core,template<typename T >
core,void
core,Fill one of buffers with zeroes.
core,Public Member Functions
core,bool
core,Impl *
core,Platform &
core,Platform &
core,void *
core,Public Member Functions
core,the default constructor
core,double
core,returns average time in milliseconds
core,double
core,returns average time in seconds
core,int64
core,returns internal counter value.
core,double
core,double
core,returns passed time of the last iteration in microseconds.
core,double
core,returns passed time of the last iteration in milliseconds.
core,double
core,returns passed time of the last iteration in seconds.
core,int64
core,returns counted ticks of the last iteration.
core,double
core,returns passed time in microseconds.
core,double
core,returns passed time in milliseconds.
core,double
core,returns passed time in seconds.
core,int64
core,returns counted ticks.
core,void
core,resets internal values.
core,void
core,starts counting ticks.
core,void
core,stops counting ticks.
core,Public Member Functions
core,void
core,Release associated thread data.
core,T *
core,Get data associated with key.
core,T &
core,Get data associated with key.
core,Public Member Functions
core,bool
core,int
core,Public Member Functions
core,from four numbers.
core,From Vec4d or Vec4f.
core,Quat< _Tp >
core,"return arccos value of this quaternion, arccos could be calculated as:"
core,Quat< _Tp >
core,"return arccosh value of this quaternion, arccosh could be calculated as:"
core,Quat< _Tp >
core,"return arcsin value of this quaternion, arcsin could be calculated as:"
core,Quat< _Tp >
core,"return arcsinh value of this quaternion, arcsinh could be calculated as:"
core,void
core,to throw an error if this quaternion is not a unit quaternion.
core,_Tp
core,a way to get element.
core,Quat< _Tp >
core,"return arctan value of this quaternion, arctan could be calculated as:"
core,Quat< _Tp >
core,"return arctanh value of this quaternion, arctanh could be calculated as:"
core,Quat< _Tp >
core,return the conjugate of this quaternion.
core,Quat< _Tp >
core,"return cos value of this quaternion, cos could be calculated as:"
core,Quat< _Tp >
core,"return cosh value of this quaternion, cosh could be calculated as:"
core,Quat< _Tp >
core,_Tp
core,Quat< _Tp >
core,return the value of exponential value.
core,_Tp
core,"get the angle of quaternion, it returns the rotation angle."
core,"Vec< _Tp, 3 >"
core,"get the axis of quaternion, it returns a vector of length 3."
core,Quat< _Tp >
core,bool
core,return true if this quaternion is a unit quaternion.
core,Quat< _Tp >
core,return the value of logarithm function.
core,_Tp
core,return the norm of quaternion.
core,Quat< _Tp >
core,Quat< _Tp >
core,Multiplication operator of two quaternions q and p. Multiplies values on either side of the operator.
core,Quat< _Tp > &
core,Multiplication assignment operator of a quaternions and a scalar. It multiplies right operand with the left operand and assign the result to left operand.
core,Quat< _Tp > &
core,Multiplication assignment operator of two quaternions q and p. It multiplies right operand with the left operand and assign the result to left operand.
core,Quat< _Tp >
core,Quat< _Tp > &
core,Addition assignment operator of two quaternions p and q. It adds right operand to the left operand and assign the result to left operand.
core,Quat< _Tp >
core,Quat< _Tp >
core,Quat< _Tp > &
core,Subtraction assignment operator of two quaternions p and q. It subtracts right operand from the left operand and assign the result to left operand.
core,Quat< _Tp >
core,Division operator of a quaternions and a scalar. It divides left operand with the right operand and assign the result to left operand.
core,Quat< _Tp >
core,Division operator of two quaternions p and q. Divides left hand operand by right hand operand.
core,Quat< _Tp > &
core,Division assignment operator of a quaternions and a scalar. It divides left operand with the right operand and assign the result to left operand.
core,Quat< _Tp > &
core,Division assignment operator of two quaternions p and q; It divides left operand with the right operand and assign the result to left operand.
core,bool
core,_Tp &
core,const _Tp &
core,Quat< _Tp >
core,Quat< _Tp >
core,Quat< _Tp >
core,"return sin value of this quaternion, sin could be calculated as:"
core,Quat< _Tp >
core,Quat< _Tp >
core,Quat< _Tp >
core,"return tan value of this quaternion, tan could be calculated as:"
core,Quat< _Tp >
core,"return tanh value of this quaternion, tanh could be calculated as:"
core,"Vec< _Tp, 3 >"
core,Transform a quaternion q to Euler angles.
core,"Matx< _Tp, 3, 3 >"
core,transform a quaternion to a 3x3 rotation matrix.
core,"Matx< _Tp, 4, 4 >"
core,transform a quaternion to a 4x4 rotation matrix.
core,"Vec< _Tp, 3 >"
core,transform this quaternion to a Rotation vector.
core,"Vec< _Tp, 4 >"
core,"transform the this quaternion to a Vec<T, 4>."
core,Public Member Functions
core,default constructor
core,Complex
core,conjugation
core,template<typename T2 >
core,conversion to another data type
core,Public Member Functions
core,unsigned
core,unsigned
core,unsigned
core,void
core,double
core,"returns uniformly distributed double-precision floating-point random number from [a,b) range"
core,float
core,"returns uniformly distributed floating-point random number from [a,b) range"
core,int
core,"returns uniformly distributed integer random number from [a,b) range"
core,Public Member Functions
core,void
core,Mat
core,Mat
core,void
core,void
core,Mat
core,Mat
core,void
core,void
core,Public Member Functions
core,default constructor
core,Rect
core,returns the minimal up-right integer rectangle containing the rotated rectangle
core,Rect2f
core,void
core,void
core,Public Member Functions
core,void
core,Release associated thread data.
core,void
core,std::vector< T * > &
core,Get and detach data from all threads.
core,void
core,Get data from all threads.
core,void
core,Release associated thread data and free TLS key.
core,Public Member Functions inherited from cv::TLSData< T >
core,void
core,Release associated thread data.
core,T *
core,Get data associated with key.
core,T &
core,Get data associated with key.
core,Public Member Functions
core,Public Member Functions
core,template<typename... _Tps>
core,Kernel &
core,bool
core,bool
core,bool
core,bool
core,size_t
core,Kernel &
core,Kernel &
core,size_t
core,void *
core,bool
core,bool
core,Run the OpenCL kernel.
core,int64
core,bool
core,template<typename _Tp >
core,int
core,int
core,int
core,int
core,int
core,size_t
core,Public Member Functions
core,bool
core,bool
core,void
core,Impl *
core,const Queue &
core,Returns OpenCL command queue with enable profiling mode support.
core,Queue &
core,Queue &
core,void *
core,Public Member Functions
core,void
core,Public Member Functions
core,uint64
core,duration in nanoseconds
core,void
core,void
core,Public Member Functions
core,virtual
core,virtual UMatData *
core,virtual bool
core,virtual void
core,virtual void
core,virtual void
core,virtual BufferPoolController *
core,virtual void
core,virtual void
core,virtual void
core,Public Member Functions
core,int
core,bool
core,Size
core,bool
core,int &
core,const int &
core,Public Member Functions
core,the default constructor
core,the full constructor setting the iterator to the first sparse matrix element
core,the copy constructor
core,const SparseMat::Node *
core,returns the current node of the sparse matrix. it.node->idx is the current element index
core,SparseMatConstIterator &
core,moves iterator to the next element
core,SparseMatConstIterator
core,moves iterator to the next element
core,SparseMatConstIterator &
core,moves iterator to the previous element
core,SparseMatConstIterator
core,moves iterator to the previous element
core,SparseMatConstIterator &
core,the assignment operator
core,void
core,moves iterator to the element after the last element
core,template<typename _Tp >
core,const _Tp &
core,template method returning the current matrix element
dnn,Public Member Functions
dnn,Copy constructor.
dnn,Constructor.
dnn,Destructor.
dnn,void
dnn,Set the about message.
dnn,bool
dnn,Check for parsing errors.
dnn,template<typename T >
dnn,T
dnn,Access arguments by name.
dnn,template<typename T >
dnn,T
dnn,Access positional arguments by index.
dnn,String
dnn,Returns application path.
dnn,bool
dnn,Check if field was provided in the command line.
dnn,CommandLineParser &
dnn,Assignment operator.
dnn,void
dnn,Print list of errors occurred.
dnn,void
dnn,Print help message.
dnn,Public Member Functions
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,"template<typename _Tp , int m, int n>"
dnn,"template<typename _Tp , std::size_t _Nm>"
dnn,template<std::size_t _Nm>
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,"template<typename _Tp , int m, int n>"
dnn,"template<typename _Tp , std::size_t _Nm>"
dnn,template<std::size_t _Nm>
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,"template<typename _Tp , std::size_t _Nm>"
dnn,_InputOutputArray
dnn,Public Member Functions inherited from cv::_OutputArray
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,"template<typename _Tp , int m, int n>"
dnn,"template<typename _Tp , std::size_t _Nm>"
dnn,template<std::size_t _Nm>
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,"template<typename _Tp , int m, int n>"
dnn,"template<typename _Tp , std::size_t _Nm>"
dnn,template<std::size_t _Nm>
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,void
dnn,void
dnn,void
dnn,void
dnn,void
dnn,void
dnn,void
dnn,void
dnn,void
dnn,bool
dnn,bool
dnn,cuda::GpuMat &
dnn,std::vector< cuda::GpuMat > &
dnn,cuda::HostMem &
dnn,Mat &
dnn,ogl::Buffer &
dnn,UMat &
dnn,void
dnn,void
dnn,bool
dnn,void
dnn,void
dnn,Public Member Functions inherited from cv::_InputArray
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,"template<typename _Tp , int m, int n>"
dnn,"template<typename _Tp , std::size_t _Nm>"
dnn,template<std::size_t _Nm>
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,template<typename _Tp >
dnn,int
dnn,int
dnn,void
dnn,void
dnn,int
dnn,int
dnn,bool
dnn,int
dnn,cuda::GpuMat
dnn,void
dnn,Mat
dnn,Mat
dnn,void
dnn,void *
dnn,ogl::Buffer
dnn,Size
dnn,UMat
dnn,void
dnn,bool
dnn,bool
dnn,bool
dnn,bool
dnn,bool
dnn,bool
dnn,bool
dnn,bool
dnn,bool
dnn,bool
dnn,_InputArray::KindFlag
dnn,size_t
dnn,int
dnn,bool
dnn,Size
dnn,int
dnn,size_t
dnn,size_t
dnn,int
dnn,Static Public Member Functions
dnn,static Ptr< QuantizeLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< SoftplusLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< LogLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< BNLLLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< EltwiseLayerInt8 >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ScatterNDLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< InnerProductLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< NotLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,Create model from deep learning network.
dnn,Create classification model from network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,"std::pair< int, float >"
dnn,"Given the input frame, create input blob, run net and return top-1 prediction."
dnn,void
dnn,bool
dnn,Get enable/disable softmax post processing option.
dnn,ClassificationModel &
dnn,Set enable/disable softmax post processing option.
dnn,Public Member Functions inherited from cv::dnn::Model
dnn,Create model from deep learning network.
dnn,Create model from deep learning network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,Model &
dnn,Impl *
dnn,Impl &
dnn,Net &
dnn,Net &
dnn,Model &
dnn,Model &
dnn,void
dnn,"Given the input frame, create input blob, run net and return the output blobs."
dnn,Model &
dnn,Set flag crop for frame.
dnn,Model &
dnn,Set mean value for frame.
dnn,void
dnn,Set preprocessing parameters for frame.
dnn,Model &
dnn,Set scalefactor value for frame.
dnn,Model &
dnn,Set input size for frame.
dnn,Model &
dnn,Model &
dnn,Set flag swapRB for frame.
dnn,Model &
dnn,Set output names for frame.
dnn,Model &
dnn,Model &
dnn,Static Public Member Functions
dnn,static Ptr< InnerProductLayerInt8 >
dnn,Static Public Member Functions inherited from cv::dnn::InnerProductLayer
dnn,static Ptr< InnerProductLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,MatExpr
dnn,Mat
dnn,MatExpr
dnn,double
dnn,MatExpr
dnn,MatExpr
dnn,MatExpr
dnn,template<typename _Tp >
dnn,MatExpr
dnn,MatExpr
dnn,MatExpr
dnn,Size
dnn,void
dnn,MatExpr
dnn,int
dnn,Static Public Member Functions
dnn,static Ptr< RegionLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< MaxUnpoolLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< AtanLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< SeluLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,virtual
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual bool
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual Size
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual int
dnn,Public Member Functions
dnn,default constructor
dnn,"template<typename _Tp2 , int cn>"
dnn,Scalar_< _Tp >
dnn,bool
dnn,returns true iff v1 == v2 == v3 == 0
dnn,Scalar_< _Tp >
dnn,per-element product
dnn,template<typename T2 >
dnn,conversion to another data type
dnn,Scalar_ &
dnn,Scalar_ &
dnn,"Public Member Functions inherited from cv::Vec< _Tp, 4 >"
dnn,default constructor
dnn,1-element vector constructor
dnn,2-element vector constructor
dnn,3-element vector constructor
dnn,4-element vector constructor
dnn,5-element vector constructor
dnn,6-element vector constructor
dnn,7-element vector constructor
dnn,8-element vector constructor
dnn,9-element vector constructor
dnn,10-element vector constructor
dnn,14-element vector constructor
dnn,Vec
dnn,Vec
dnn,Vec
dnn,per-element multiplication
dnn,conversion to another data type
dnn,_Tp &
dnn,const _Tp &
dnn,"Vec< _Tp, cn > &"
dnn,_Tp &
dnn,const _Tp &
dnn,"Public Member Functions inherited from cv::Matx< _Tp, cn, 1 >"
dnn,default constructor
dnn,1x1 matrix
dnn,1x2 or 2x1 matrix
dnn,1x3 or 3x1 matrix
dnn,"1x4, 2x2 or 4x1 matrix"
dnn,1x5 or 5x1 matrix
dnn,"1x6, 2x3, 3x2 or 6x1 matrix"
dnn,1x7 or 7x1 matrix
dnn,"1x8, 2x4, 4x2 or 8x1 matrix"
dnn,"1x9, 3x3 or 9x1 matrix"
dnn,"1x10, 2x5 or 5x2 or 10x1 matrix"
dnn,"1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix"
dnn,"1x14, 2x7, 7x2 or 14x1 matrix"
dnn,"1x16, 4x4 or 16x1 matrix"
dnn,initialize from a plain array
dnn,initialize from an initializer list
dnn,"Matx< _Tp, m, 1 >"
dnn,extract the matrix column
dnn,double
dnn,dot product computed in double-precision arithmetics
dnn,diag_type
dnn,extract the matrix diagonal
dnn,"Matx< _Tp, m, n >"
dnn,divide two matrices element-wise
dnn,_Tp
dnn,dot product computed with the default precision
dnn,"Matx< _Tp, m1, n1 >"
dnn,extract part of the matrix
dnn,"Matx< _Tp, n, m >"
dnn,invert the matrix
dnn,"Matx< _Tp, m, n >"
dnn,multiply two matrices element-wise
dnn,conversion to another data type
dnn,_Tp &
dnn,const _Tp &
dnn,1D element access
dnn,_Tp &
dnn,const _Tp &
dnn,element access
dnn,"Matx< _Tp, m1, n1 >"
dnn,change the matrix shape
dnn,"Matx< _Tp, 1, n >"
dnn,extract the matrix row
dnn,"Matx< _Tp, n, l >"
dnn,solve linear system
dnn,"Vec< _Tp, n >"
dnn,"Matx< _Tp, n, m >"
dnn,transpose the matrix
dnn,Static Public Member Functions
dnn,static Ptr< CumSumLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< NaryEltwiseLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< GeluApproximationLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,virtual
dnn,void
dnn,virtual const char *
dnn,Static Public Member Functions
dnn,static Ptr< AccumLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< CoshLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,the default constructor
dnn,size_t
dnn,Static Public Member Functions
dnn,static Ptr< PermuteLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,virtual
dnn,virtual void
dnn,Static Public Member Functions
dnn,static Ptr< PowerLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,virtual
dnn,Virtual destructor to make polymorphism.
dnn,Static Public Member Functions
dnn,static Ptr< GRULayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,virtual
dnn,virtual void
dnn,Clears the algorithm state.
dnn,virtual bool
dnn,virtual String
dnn,virtual void
dnn,Reads algorithm parameters from a file storage.
dnn,virtual void
dnn,void
dnn,virtual void
dnn,Stores algorithm parameters in a file storage.
dnn,void
dnn,Public Member Functions
dnn,"Initializes only name, type and blobs fields."
dnn,virtual
dnn,virtual void
dnn,Automatic Halide scheduling based on layer hyper-parameters.
dnn,virtual void
dnn,"Computes and sets internal parameters according to inputs, outputs and blobs."
dnn,std::vector< Mat >
dnn,void
dnn,virtual void
dnn,"Computes and sets internal parameters according to inputs, outputs and blobs."
dnn,virtual void
dnn,"Given the input blobs, computes the output blobs."
dnn,virtual void
dnn,"Given the input blobs, computes the output blobs."
dnn,void
dnn,"Given the input blobs, computes the output blobs."
dnn,virtual int64
dnn,virtual bool
dnn,virtual void
dnn,Returns parameters of layers with channel-wise multiplication and addition.
dnn,virtual void
dnn,Returns scale and zeropoint of layers.
dnn,virtual Ptr< BackendNode >
dnn,Returns a CANN backend node.
dnn,virtual Ptr< BackendNode >
dnn,Returns a CUDA backend node.
dnn,virtual Ptr< BackendNode >
dnn,Returns Halide backend node.
dnn,virtual Ptr< BackendNode >
dnn,virtual Ptr< BackendNode >
dnn,Returns a TimVX backend node.
dnn,virtual Ptr< BackendNode >
dnn,virtual Ptr< BackendNode >
dnn,virtual int
dnn,Returns index of input blob into the input array.
dnn,virtual int
dnn,Returns index of output blob in output array.
dnn,void
dnn,Allocates layer and computes output.
dnn,virtual bool
dnn,"Tries to attach to the layer the subsequent activation layer, i.e. do the layer fusion in a partial case."
dnn,void
dnn,"Initializes only name, type and blobs fields."
dnn,virtual bool
dnn,Ask layer if it support specific backend for doing computations.
dnn,virtual Ptr< BackendNode >
dnn,Implement layers fusing.
dnn,virtual bool
dnn,Try to fuse current layer with a next one.
dnn,virtual bool
dnn,Tries to quantize the given layer and compute the quantization parameters required for fixed point implementation.
dnn,virtual void
dnn,"""Detaches"" all the layers, attached to particular layer."
dnn,virtual bool
dnn,Public Member Functions inherited from cv::Algorithm
dnn,virtual
dnn,virtual void
dnn,Clears the algorithm state.
dnn,virtual bool
dnn,virtual String
dnn,virtual void
dnn,Reads algorithm parameters from a file storage.
dnn,virtual void
dnn,void
dnn,virtual void
dnn,Stores algorithm parameters in a file storage.
dnn,void
dnn,Public Member Functions
dnn,virtual void
dnn,Public Member Functions inherited from cv::ParallelLoopBody
dnn,virtual
dnn,Static Public Member Functions
dnn,static Ptr< TileLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< DataAugmentationLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< CeilLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< Layer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,Create model from deep learning network.
dnn,Create model from deep learning network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,Model &
dnn,Impl *
dnn,Impl &
dnn,Net &
dnn,Net &
dnn,Model &
dnn,Model &
dnn,void
dnn,"Given the input frame, create input blob, run net and return the output blobs."
dnn,Model &
dnn,Set flag crop for frame.
dnn,Model &
dnn,Set mean value for frame.
dnn,void
dnn,Set preprocessing parameters for frame.
dnn,Model &
dnn,Set scalefactor value for frame.
dnn,Model &
dnn,Set input size for frame.
dnn,Model &
dnn,Model &
dnn,Set flag swapRB for frame.
dnn,Model &
dnn,Set output names for frame.
dnn,Model &
dnn,Model &
dnn,Public Member Functions
dnn,Create model from deep learning network.
dnn,Create detection model from network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,void
dnn,"Given the input frame, create input blob, run net and return result detections."
dnn,bool
dnn,DetectionModel &
dnn,Public Member Functions inherited from cv::dnn::Model
dnn,Create model from deep learning network.
dnn,Create model from deep learning network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,Model &
dnn,Impl *
dnn,Impl &
dnn,Net &
dnn,Net &
dnn,Model &
dnn,Model &
dnn,void
dnn,"Given the input frame, create input blob, run net and return the output blobs."
dnn,Model &
dnn,Set flag crop for frame.
dnn,Model &
dnn,Set mean value for frame.
dnn,void
dnn,Set preprocessing parameters for frame.
dnn,Model &
dnn,Set scalefactor value for frame.
dnn,Model &
dnn,Set input size for frame.
dnn,Model &
dnn,Model &
dnn,Set flag swapRB for frame.
dnn,Model &
dnn,Set output names for frame.
dnn,Model &
dnn,Model &
dnn,Public Member Functions
dnn,void *
dnn,void
dnn,"template<typename _Rep , typename _Period >"
dnn,bool
dnn,bool
dnn,bool
dnn,AsyncArray &
dnn,AsyncArray &
dnn,void
dnn,bool
dnn,"template<typename _Rep , typename _Period >"
dnn,bool
dnn,bool
dnn,bool
dnn,Public Member Functions
dnn,MatStep &
dnn,const size_t &
dnn,size_t &
dnn,Static Public Member Functions
dnn,static Ptr< DepthToSpaceLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,Static Public Member Functions
dnn,static Ptr< FloorLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< GroupNormLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ScaleLayerInt8 >
dnn,Static Public Member Functions inherited from cv::dnn::ScaleLayer
dnn,static Ptr< ScaleLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< CorrelationLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< Layer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< GeluLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< MishLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< FlattenLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< PaddingLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,Constructs integer scalar.
dnn,Constructs string scalar.
dnn,Constructs floating point scalar.
dnn,Constructs integer scalar.
dnn,Constructs integer scalar.
dnn,Constructs integer scalar.
dnn,template<typename T >
dnn,T
dnn,Tries to convert array element with specified index to requested type and returns its.
dnn,int
dnn,double
dnn,String
dnn,bool
dnn,bool
dnn,bool
dnn,DictValue &
dnn,int
dnn,Static Public Member Functions
dnn,static Ptr< MVNLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< BatchNormLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ScatterLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,bool
dnn,Public Member Functions
dnn,void
dnn,void
dnn,Performs detection.
dnn,void
dnn,void
dnn,Performs detection.
dnn,Public Member Functions inherited from cv::dnn::Model
dnn,Create model from deep learning network.
dnn,Create model from deep learning network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,Model &
dnn,Impl *
dnn,Impl &
dnn,Net &
dnn,Net &
dnn,Model &
dnn,Model &
dnn,void
dnn,"Given the input frame, create input blob, run net and return the output blobs."
dnn,Model &
dnn,Set flag crop for frame.
dnn,Model &
dnn,Set mean value for frame.
dnn,void
dnn,Set preprocessing parameters for frame.
dnn,Model &
dnn,Set scalefactor value for frame.
dnn,Model &
dnn,Set input size for frame.
dnn,Model &
dnn,Model &
dnn,Set flag swapRB for frame.
dnn,Model &
dnn,Set output names for frame.
dnn,Model &
dnn,Model &
dnn,Public Member Functions
dnn,virtual
dnn,virtual const char *
dnn,virtual void
dnn,Static Public Member Functions
dnn,static Ptr< ThresholdedReluLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< DequantizeLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ReciprocalLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,the default constructor
dnn,the copy constructor
dnn,the full constructor setting the iterator to the first sparse matrix element
dnn,the full constructor setting the iterator to the specified sparse matrix element
dnn,SparseMat::Node *
dnn,SparseMatIterator &
dnn,moves iterator to the next element
dnn,SparseMatIterator
dnn,moves iterator to the next element
dnn,SparseMatIterator &
dnn,the assignment operator
dnn,template<typename _Tp >
dnn,_Tp &
dnn,returns read-write reference to the current sparse matrix element
dnn,Public Member Functions inherited from cv::SparseMatConstIterator
dnn,the default constructor
dnn,the full constructor setting the iterator to the first sparse matrix element
dnn,the copy constructor
dnn,const SparseMat::Node *
dnn,returns the current node of the sparse matrix. it.node->idx is the current element index
dnn,SparseMatConstIterator &
dnn,moves iterator to the next element
dnn,SparseMatConstIterator
dnn,moves iterator to the next element
dnn,SparseMatConstIterator &
dnn,moves iterator to the previous element
dnn,SparseMatConstIterator
dnn,moves iterator to the previous element
dnn,SparseMatConstIterator &
dnn,the assignment operator
dnn,void
dnn,moves iterator to the element after the last element
dnn,template<typename _Tp >
dnn,const _Tp &
dnn,template method returning the current matrix element
dnn,Static Public Member Functions
dnn,static Ptr< AcosLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< SinhLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< BaseConvolutionLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,the default constructor
dnn,the full constructor taking arbitrary number of n-dim matrices
dnn,the full constructor taking arbitrary number of n-dim matrices
dnn,void
dnn,the separate iterator initialization method
dnn,NAryMatIterator &
dnn,proceeds to the next plane of every iterated matrix
dnn,NAryMatIterator
dnn,Static Public Member Functions
dnn,static Ptr< AsinLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< EltwiseLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,"the constructor, created by ""matrix << firstValue"" operator, where matrix is cv::Mat"
dnn,another form of conversion operator
dnn,template<typename T2 >
dnn,MatCommaInitializer_< _Tp > &
dnn,the operator that takes the next value and put it to the matrix
dnn,Static Public Member Functions
dnn,static Ptr< ReorgLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< AcoshLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< SpaceToDepthLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< Layer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ErfLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< AtanhLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< Layer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< SoftmaxLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< Layer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,Class constructor.
dnn,Class destructor.
dnn,template<typename T >
dnn,void
dnn,Bind a pointer to local area.
dnn,void
dnn,Allocate memory and initialize all bound pointers.
dnn,void
dnn,Release all memory and unbind all pointers.
dnn,void
dnn,Fill all buffers with zeroes.
dnn,template<typename T >
dnn,void
dnn,Fill one of buffers with zeroes.
dnn,Static Public Member Functions
dnn,static Ptr< AbsLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< Layer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< LRNLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< BatchNormLayerInt8 >
dnn,Static Public Member Functions inherited from cv::dnn::BatchNormLayer
dnn,static Ptr< BatchNormLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,Create text detection algorithm from deep learning network.
dnn,Create text detection model from network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,float
dnn,Get the detection confidence threshold.
dnn,float
dnn,Get the detection confidence threshold.
dnn,TextDetectionModel_EAST &
dnn,Set the detection confidence threshold.
dnn,TextDetectionModel_EAST &
dnn,Set the detection NMS filter threshold.
dnn,Public Member Functions inherited from cv::dnn::TextDetectionModel
dnn,void
dnn,void
dnn,Performs detection.
dnn,void
dnn,void
dnn,Performs detection.
dnn,Public Member Functions inherited from cv::dnn::Model
dnn,Create model from deep learning network.
dnn,Create model from deep learning network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,Model &
dnn,Impl *
dnn,Impl &
dnn,Net &
dnn,Net &
dnn,Model &
dnn,Model &
dnn,void
dnn,"Given the input frame, create input blob, run net and return the output blobs."
dnn,Model &
dnn,Set flag crop for frame.
dnn,Model &
dnn,Set mean value for frame.
dnn,void
dnn,Set preprocessing parameters for frame.
dnn,Model &
dnn,Set scalefactor value for frame.
dnn,Model &
dnn,Set input size for frame.
dnn,Model &
dnn,Model &
dnn,Set flag swapRB for frame.
dnn,Model &
dnn,Set output names for frame.
dnn,Model &
dnn,Model &
dnn,Static Public Member Functions
dnn,static Ptr< ArgLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< TanLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,"std::map< String, DictValue >::const_iterator"
dnn,"std::map< String, DictValue >::const_iterator"
dnn,void
dnn,Erase key from the dictionary.
dnn,const DictValue &
dnn,"If the key in the dictionary then returns its value, else an error will be generated."
dnn,template<typename T >
dnn,T
dnn,template<typename T >
dnn,T
dnn,"If the key in the dictionary then returns its value, else returns defaultValue."
dnn,bool
dnn,Checks a presence of the key in the dictionary.
dnn,DictValue *
dnn,"If the key in the dictionary then returns pointer to its value, else returns NULL."
dnn,const DictValue *
dnn,template<typename T >
dnn,const T &
dnn,"Sets new value for the key, or adds new key-value pair into the dictionary."
dnn,Public Member Functions
dnn,void
dnn,Get rectangle coordinates in original image system from rectangle in blob coordinates.
dnn,Rect
dnn,Get rectangle coordinates in original image system from rectangle in blob coordinates.
dnn,Static Public Member Functions
dnn,static Ptr< SwishLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,the default constructor
dnn,double
dnn,returns average time in milliseconds
dnn,double
dnn,returns average time in seconds
dnn,int64
dnn,returns internal counter value.
dnn,double
dnn,double
dnn,returns passed time of the last iteration in microseconds.
dnn,double
dnn,returns passed time of the last iteration in milliseconds.
dnn,double
dnn,returns passed time of the last iteration in seconds.
dnn,int64
dnn,returns counted ticks of the last iteration.
dnn,double
dnn,returns passed time in microseconds.
dnn,double
dnn,returns passed time in milliseconds.
dnn,double
dnn,returns passed time in seconds.
dnn,int64
dnn,returns counted ticks.
dnn,void
dnn,resets internal values.
dnn,void
dnn,starts counting ticks.
dnn,void
dnn,stops counting ticks.
dnn,Public Member Functions
dnn,void
dnn,Release associated thread data.
dnn,T *
dnn,Get data associated with key.
dnn,T &
dnn,Get data associated with key.
dnn,Static Public Member Functions
dnn,static Ptr< PriorBoxLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< RequantizeLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,bool
dnn,int
dnn,Static Public Member Functions
dnn,static Ptr< ActivationLayerInt8 >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ConcatLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ProposalLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< SignLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< DetectionOutputLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,Create model from deep learning network.
dnn,Create segmentation model from network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,void
dnn,"Given the input frame, create input blob, run net."
dnn,Public Member Functions inherited from cv::dnn::Model
dnn,Create model from deep learning network.
dnn,Create model from deep learning network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,Model &
dnn,Impl *
dnn,Impl &
dnn,Net &
dnn,Net &
dnn,Model &
dnn,Model &
dnn,void
dnn,"Given the input frame, create input blob, run net and return the output blobs."
dnn,Model &
dnn,Set flag crop for frame.
dnn,Model &
dnn,Set mean value for frame.
dnn,void
dnn,Set preprocessing parameters for frame.
dnn,Model &
dnn,Set scalefactor value for frame.
dnn,Model &
dnn,Set input size for frame.
dnn,Model &
dnn,Model &
dnn,Set flag swapRB for frame.
dnn,Model &
dnn,Set output names for frame.
dnn,Model &
dnn,Model &
dnn,Public Member Functions
dnn,default constructor
dnn,Complex
dnn,conjugation
dnn,template<typename T2 >
dnn,conversion to another data type
dnn,Public Member Functions
dnn,Create text detection algorithm from deep learning network.
dnn,Create text detection model from network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,float
dnn,int
dnn,float
dnn,double
dnn,TextDetectionModel_DB &
dnn,TextDetectionModel_DB &
dnn,TextDetectionModel_DB &
dnn,TextDetectionModel_DB &
dnn,Public Member Functions inherited from cv::dnn::TextDetectionModel
dnn,void
dnn,void
dnn,Performs detection.
dnn,void
dnn,void
dnn,Performs detection.
dnn,Public Member Functions inherited from cv::dnn::Model
dnn,Create model from deep learning network.
dnn,Create model from deep learning network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,Model &
dnn,Impl *
dnn,Impl &
dnn,Net &
dnn,Net &
dnn,Model &
dnn,Model &
dnn,void
dnn,"Given the input frame, create input blob, run net and return the output blobs."
dnn,Model &
dnn,Set flag crop for frame.
dnn,Model &
dnn,Set mean value for frame.
dnn,void
dnn,Set preprocessing parameters for frame.
dnn,Model &
dnn,Set scalefactor value for frame.
dnn,Model &
dnn,Set input size for frame.
dnn,Model &
dnn,Model &
dnn,Set flag swapRB for frame.
dnn,Model &
dnn,Set output names for frame.
dnn,Model &
dnn,Model &
dnn,Static Public Member Functions
dnn,static Ptr< ReshapeLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< CeluLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ResizeLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,int
dnn,Returns index of input blob into the input array.
dnn,int
dnn,Returns index of output blob in output array.
dnn,virtual void
dnn,"Specifies shape of output blob which will be [[T], N] + outTailShape."
dnn,virtual void
dnn,virtual void
dnn,Specifies either interpret first dimension of input blob as timestamp dimension either as sample.
dnn,virtual void
dnn,Set trained weights for LSTM layer.
dnn,Public Member Functions inherited from cv::dnn::Layer
dnn,"Initializes only name, type and blobs fields."
dnn,virtual
dnn,virtual void
dnn,Automatic Halide scheduling based on layer hyper-parameters.
dnn,virtual void
dnn,"Computes and sets internal parameters according to inputs, outputs and blobs."
dnn,std::vector< Mat >
dnn,void
dnn,virtual void
dnn,"Computes and sets internal parameters according to inputs, outputs and blobs."
dnn,virtual void
dnn,"Given the input blobs, computes the output blobs."
dnn,virtual void
dnn,"Given the input blobs, computes the output blobs."
dnn,void
dnn,"Given the input blobs, computes the output blobs."
dnn,virtual int64
dnn,virtual bool
dnn,virtual void
dnn,Returns parameters of layers with channel-wise multiplication and addition.
dnn,virtual void
dnn,Returns scale and zeropoint of layers.
dnn,virtual Ptr< BackendNode >
dnn,Returns a CANN backend node.
dnn,virtual Ptr< BackendNode >
dnn,Returns a CUDA backend node.
dnn,virtual Ptr< BackendNode >
dnn,Returns Halide backend node.
dnn,virtual Ptr< BackendNode >
dnn,virtual Ptr< BackendNode >
dnn,Returns a TimVX backend node.
dnn,virtual Ptr< BackendNode >
dnn,virtual Ptr< BackendNode >
dnn,void
dnn,Allocates layer and computes output.
dnn,virtual bool
dnn,"Tries to attach to the layer the subsequent activation layer, i.e. do the layer fusion in a partial case."
dnn,void
dnn,"Initializes only name, type and blobs fields."
dnn,virtual bool
dnn,Ask layer if it support specific backend for doing computations.
dnn,virtual Ptr< BackendNode >
dnn,Implement layers fusing.
dnn,virtual bool
dnn,Try to fuse current layer with a next one.
dnn,virtual bool
dnn,Tries to quantize the given layer and compute the quantization parameters required for fixed point implementation.
dnn,virtual void
dnn,"""Detaches"" all the layers, attached to particular layer."
dnn,virtual bool
dnn,Public Member Functions inherited from cv::Algorithm
dnn,virtual
dnn,virtual void
dnn,Clears the algorithm state.
dnn,virtual bool
dnn,virtual String
dnn,virtual void
dnn,Reads algorithm parameters from a file storage.
dnn,virtual void
dnn,void
dnn,virtual void
dnn,Stores algorithm parameters in a file storage.
dnn,void
dnn,Public Member Functions
dnn,unsigned
dnn,unsigned
dnn,unsigned
dnn,void
dnn,double
dnn,"returns uniformly distributed double-precision floating-point random number from [a,b) range"
dnn,float
dnn,"returns uniformly distributed floating-point random number from [a,b) range"
dnn,int
dnn,"returns uniformly distributed integer random number from [a,b) range"
dnn,Public Member Functions
dnn,void
dnn,Mat
dnn,Mat
dnn,void
dnn,void
dnn,Mat
dnn,Mat
dnn,void
dnn,void
dnn,Static Public Member Functions
dnn,static Ptr< BaseConvolutionLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< SqrtLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< GatherLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,default constructor
dnn,Rect
dnn,returns the minimal up-right integer rectangle containing the rotated rectangle
dnn,Rect2f
dnn,void
dnn,void
dnn,Public Member Functions
dnn,Create model from deep learning network.
dnn,Create keypoints model from network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,std::vector< Point2f >
dnn,"Given the input frame, create input blob, run net."
dnn,Public Member Functions inherited from cv::dnn::Model
dnn,Create model from deep learning network.
dnn,Create model from deep learning network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,Model &
dnn,Impl *
dnn,Impl &
dnn,Net &
dnn,Net &
dnn,Model &
dnn,Model &
dnn,void
dnn,"Given the input frame, create input blob, run net and return the output blobs."
dnn,Model &
dnn,Set flag crop for frame.
dnn,Model &
dnn,Set mean value for frame.
dnn,void
dnn,Set preprocessing parameters for frame.
dnn,Model &
dnn,Set scalefactor value for frame.
dnn,Model &
dnn,Set input size for frame.
dnn,Model &
dnn,Model &
dnn,Set flag swapRB for frame.
dnn,Model &
dnn,Set output names for frame.
dnn,Model &
dnn,Model &
dnn,Static Public Member Functions
dnn,static Ptr< FlowWarpLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< SigmoidLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< SoftsignLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ShrinkLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< SoftmaxLayerInt8 >
dnn,Static Public Member Functions inherited from cv::dnn::SoftmaxLayer
dnn,static Ptr< SoftmaxLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< GemmLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,void
dnn,Release associated thread data.
dnn,void
dnn,std::vector< T * > &
dnn,Get and detach data from all threads.
dnn,void
dnn,Get data from all threads.
dnn,void
dnn,Release associated thread data and free TLS key.
dnn,Public Member Functions inherited from cv::TLSData< T >
dnn,void
dnn,Release associated thread data.
dnn,T *
dnn,Get data associated with key.
dnn,T &
dnn,Get data associated with key.
dnn,Public Member Functions
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,Public Member Functions inherited from cv::dnn::Layer
dnn,"Initializes only name, type and blobs fields."
dnn,virtual
dnn,virtual void
dnn,Automatic Halide scheduling based on layer hyper-parameters.
dnn,virtual void
dnn,"Computes and sets internal parameters according to inputs, outputs and blobs."
dnn,std::vector< Mat >
dnn,void
dnn,virtual void
dnn,"Computes and sets internal parameters according to inputs, outputs and blobs."
dnn,virtual void
dnn,"Given the input blobs, computes the output blobs."
dnn,virtual void
dnn,"Given the input blobs, computes the output blobs."
dnn,void
dnn,"Given the input blobs, computes the output blobs."
dnn,virtual int64
dnn,virtual bool
dnn,virtual void
dnn,Returns parameters of layers with channel-wise multiplication and addition.
dnn,virtual void
dnn,Returns scale and zeropoint of layers.
dnn,virtual Ptr< BackendNode >
dnn,Returns a CANN backend node.
dnn,virtual Ptr< BackendNode >
dnn,Returns a CUDA backend node.
dnn,virtual Ptr< BackendNode >
dnn,Returns Halide backend node.
dnn,virtual Ptr< BackendNode >
dnn,virtual Ptr< BackendNode >
dnn,Returns a TimVX backend node.
dnn,virtual Ptr< BackendNode >
dnn,virtual Ptr< BackendNode >
dnn,virtual int
dnn,Returns index of input blob into the input array.
dnn,virtual int
dnn,Returns index of output blob in output array.
dnn,void
dnn,Allocates layer and computes output.
dnn,virtual bool
dnn,"Tries to attach to the layer the subsequent activation layer, i.e. do the layer fusion in a partial case."
dnn,void
dnn,"Initializes only name, type and blobs fields."
dnn,virtual bool
dnn,Ask layer if it support specific backend for doing computations.
dnn,virtual Ptr< BackendNode >
dnn,Implement layers fusing.
dnn,virtual bool
dnn,Try to fuse current layer with a next one.
dnn,virtual bool
dnn,Tries to quantize the given layer and compute the quantization parameters required for fixed point implementation.
dnn,virtual void
dnn,"""Detaches"" all the layers, attached to particular layer."
dnn,virtual bool
dnn,Public Member Functions inherited from cv::Algorithm
dnn,virtual
dnn,virtual void
dnn,Clears the algorithm state.
dnn,virtual bool
dnn,virtual String
dnn,virtual void
dnn,Reads algorithm parameters from a file storage.
dnn,virtual void
dnn,void
dnn,virtual void
dnn,Stores algorithm parameters in a file storage.
dnn,void
dnn,Static Public Member Functions
dnn,static Ptr< MatMulLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ExpandLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ReLU6Layer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< NormalizeBBoxLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< SinLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< EinsumLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< TopKLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< BaseConvolutionLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< InstanceNormLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< AttentionLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< HardSigmoidLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< LayerNormLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ScaleLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ReLULayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< SplitLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,virtual void
dnn,virtual void
dnn,Public Member Functions inherited from cv::dnn::Layer
dnn,"Initializes only name, type and blobs fields."
dnn,virtual
dnn,virtual void
dnn,Automatic Halide scheduling based on layer hyper-parameters.
dnn,virtual void
dnn,"Computes and sets internal parameters according to inputs, outputs and blobs."
dnn,std::vector< Mat >
dnn,void
dnn,virtual void
dnn,"Computes and sets internal parameters according to inputs, outputs and blobs."
dnn,virtual void
dnn,"Given the input blobs, computes the output blobs."
dnn,virtual void
dnn,"Given the input blobs, computes the output blobs."
dnn,void
dnn,"Given the input blobs, computes the output blobs."
dnn,virtual int64
dnn,virtual bool
dnn,virtual void
dnn,Returns parameters of layers with channel-wise multiplication and addition.
dnn,virtual void
dnn,Returns scale and zeropoint of layers.
dnn,virtual Ptr< BackendNode >
dnn,Returns a CANN backend node.
dnn,virtual Ptr< BackendNode >
dnn,Returns a CUDA backend node.
dnn,virtual Ptr< BackendNode >
dnn,Returns Halide backend node.
dnn,virtual Ptr< BackendNode >
dnn,virtual Ptr< BackendNode >
dnn,Returns a TimVX backend node.
dnn,virtual Ptr< BackendNode >
dnn,virtual Ptr< BackendNode >
dnn,virtual int
dnn,Returns index of input blob into the input array.
dnn,virtual int
dnn,Returns index of output blob in output array.
dnn,void
dnn,Allocates layer and computes output.
dnn,virtual bool
dnn,"Tries to attach to the layer the subsequent activation layer, i.e. do the layer fusion in a partial case."
dnn,void
dnn,"Initializes only name, type and blobs fields."
dnn,virtual bool
dnn,Ask layer if it support specific backend for doing computations.
dnn,virtual Ptr< BackendNode >
dnn,Implement layers fusing.
dnn,virtual bool
dnn,Try to fuse current layer with a next one.
dnn,virtual bool
dnn,Tries to quantize the given layer and compute the quantization parameters required for fixed point implementation.
dnn,virtual void
dnn,"""Detaches"" all the layers, attached to particular layer."
dnn,virtual bool
dnn,Public Member Functions inherited from cv::Algorithm
dnn,virtual
dnn,virtual void
dnn,Clears the algorithm state.
dnn,virtual bool
dnn,virtual String
dnn,virtual void
dnn,Reads algorithm parameters from a file storage.
dnn,virtual void
dnn,void
dnn,virtual void
dnn,Stores algorithm parameters in a file storage.
dnn,void
dnn,Static Public Member Functions
dnn,static Ptr< Layer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< Layer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< SliceLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< PoolingLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ExpLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< RoundLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< AsinhLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< CosLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,const std::string &
dnn,Get the decoding method.
dnn,const std::vector< std::string > &
dnn,Get the vocabulary for recognition.
dnn,std::string
dnn,"Given the input frame, create input blob, run net and return recognition result."
dnn,void
dnn,"Given the input frame, create input blob, run net and return recognition result."
dnn,TextRecognitionModel &
dnn,"Set the decoding method options for ""CTC-prefix-beam-search"" decode usage."
dnn,TextRecognitionModel &
dnn,Set the decoding method of translating the network output into string.
dnn,TextRecognitionModel &
dnn,Set the vocabulary for recognition.
dnn,Public Member Functions inherited from cv::dnn::Model
dnn,Create model from deep learning network.
dnn,Create model from deep learning network represented in one of the supported formats. An order of model and config arguments does not matter.
dnn,Model &
dnn,Impl *
dnn,Impl &
dnn,Net &
dnn,Net &
dnn,Model &
dnn,Model &
dnn,void
dnn,"Given the input frame, create input blob, run net and return the output blobs."
dnn,Model &
dnn,Set flag crop for frame.
dnn,Model &
dnn,Set mean value for frame.
dnn,void
dnn,Set preprocessing parameters for frame.
dnn,Model &
dnn,Set scalefactor value for frame.
dnn,Model &
dnn,Set input size for frame.
dnn,Model &
dnn,Model &
dnn,Set flag swapRB for frame.
dnn,Model &
dnn,Set output names for frame.
dnn,Model &
dnn,Model &
dnn,Static Public Member Functions
dnn,static Ptr< Layer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,void
dnn,Static Public Member Functions
dnn,static Ptr< ReduceLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,virtual
dnn,virtual UMatData *
dnn,virtual bool
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,virtual BufferPoolController *
dnn,virtual void
dnn,virtual void
dnn,virtual void
dnn,Public Member Functions
dnn,int
dnn,bool
dnn,Size
dnn,bool
dnn,int &
dnn,const int &
dnn,Static Public Member Functions
dnn,static Ptr< TanHLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< Layer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,Make wrapper for reused cv::Mat.
dnn,Wrap cv::Mat for specific backend and target.
dnn,virtual
dnn,Virtual destructor to make polymorphism.
dnn,virtual void
dnn,Transfer data to CPU host memory.
dnn,virtual void
dnn,Indicate that an actual data is on CPU.
dnn,Static Public Member Functions
dnn,static Ptr< HardSwishLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< ELULayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Public Member Functions
dnn,the default constructor
dnn,the full constructor setting the iterator to the first sparse matrix element
dnn,the copy constructor
dnn,const SparseMat::Node *
dnn,returns the current node of the sparse matrix. it.node->idx is the current element index
dnn,SparseMatConstIterator &
dnn,moves iterator to the next element
dnn,SparseMatConstIterator
dnn,moves iterator to the next element
dnn,SparseMatConstIterator &
dnn,moves iterator to the previous element
dnn,SparseMatConstIterator
dnn,moves iterator to the previous element
dnn,SparseMatConstIterator &
dnn,the assignment operator
dnn,void
dnn,moves iterator to the element after the last element
dnn,template<typename _Tp >
dnn,const _Tp &
dnn,template method returning the current matrix element
dnn,Static Public Member Functions
dnn,static Ptr< PoolingLayerInt8 >
dnn,Static Public Member Functions inherited from cv::dnn::PoolingLayer
dnn,static Ptr< PoolingLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
dnn,Static Public Member Functions
dnn,static Ptr< GatherElementsLayer >
dnn,Static Public Member Functions inherited from cv::Algorithm
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from the file.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Loads algorithm from a String.
dnn,template<typename _Tp >
dnn,static Ptr< _Tp >
dnn,Reads algorithm from the file node.
features2d,Public Member Functions
features2d,virtual
features2d,virtual void
features2d,virtual void
features2d,virtual int
features2d,virtual int
features2d,virtual int
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual bool
features2d,Return true if detector object is empty.
features2d,virtual String
features2d,virtual void
features2d,Reads algorithm parameters from a file storage.
features2d,void
features2d,void
features2d,void
features2d,virtual void
features2d,Stores algorithm parameters in a file storage.
features2d,void
features2d,Public Member Functions inherited from cv::Algorithm
features2d,virtual
features2d,virtual void
features2d,Clears the algorithm state.
features2d,virtual void
features2d,void
features2d,void
features2d,Public Member Functions
features2d,default constructor
features2d,"template<typename _Tp2 , int cn>"
features2d,Scalar_< _Tp >
features2d,bool
features2d,returns true iff v1 == v2 == v3 == 0
features2d,Scalar_< _Tp >
features2d,per-element product
features2d,template<typename T2 >
features2d,conversion to another data type
features2d,Scalar_ &
features2d,Scalar_ &
features2d,"Public Member Functions inherited from cv::Vec< _Tp, 4 >"
features2d,default constructor
features2d,1-element vector constructor
features2d,2-element vector constructor
features2d,3-element vector constructor
features2d,4-element vector constructor
features2d,5-element vector constructor
features2d,6-element vector constructor
features2d,7-element vector constructor
features2d,8-element vector constructor
features2d,9-element vector constructor
features2d,10-element vector constructor
features2d,14-element vector constructor
features2d,Vec
features2d,Vec
features2d,Vec
features2d,per-element multiplication
features2d,conversion to another data type
features2d,_Tp &
features2d,const _Tp &
features2d,"Vec< _Tp, cn > &"
features2d,_Tp &
features2d,const _Tp &
features2d,"Public Member Functions inherited from cv::Matx< _Tp, cn, 1 >"
features2d,default constructor
features2d,1x1 matrix
features2d,1x2 or 2x1 matrix
features2d,1x3 or 3x1 matrix
features2d,"1x4, 2x2 or 4x1 matrix"
features2d,1x5 or 5x1 matrix
features2d,"1x6, 2x3, 3x2 or 6x1 matrix"
features2d,1x7 or 7x1 matrix
features2d,"1x8, 2x4, 4x2 or 8x1 matrix"
features2d,"1x9, 3x3 or 9x1 matrix"
features2d,"1x10, 2x5 or 5x2 or 10x1 matrix"
features2d,"1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix"
features2d,"1x14, 2x7, 7x2 or 14x1 matrix"
features2d,"1x16, 4x4 or 16x1 matrix"
features2d,initialize from a plain array
features2d,initialize from an initializer list
features2d,"Matx< _Tp, m, 1 >"
features2d,extract the matrix column
features2d,double
features2d,dot product computed in double-precision arithmetics
features2d,diag_type
features2d,extract the matrix diagonal
features2d,"Matx< _Tp, m, n >"
features2d,divide two matrices element-wise
features2d,_Tp
features2d,dot product computed with the default precision
features2d,"Matx< _Tp, m1, n1 >"
features2d,extract part of the matrix
features2d,"Matx< _Tp, n, m >"
features2d,invert the matrix
features2d,"Matx< _Tp, m, n >"
features2d,multiply two matrices element-wise
features2d,conversion to another data type
features2d,_Tp &
features2d,const _Tp &
features2d,1D element access
features2d,_Tp &
features2d,const _Tp &
features2d,element access
features2d,"Matx< _Tp, m1, n1 >"
features2d,change the matrix shape
features2d,"Matx< _Tp, 1, n >"
features2d,extract the matrix row
features2d,"Matx< _Tp, n, l >"
features2d,solve linear system
features2d,"Vec< _Tp, n >"
features2d,"Matx< _Tp, n, m >"
features2d,transpose the matrix
features2d,Public Member Functions
features2d,the default constructor
features2d,size_t
features2d,Public Member Functions
features2d,The constructor.
features2d,virtual
features2d,void
features2d,Computes an image descriptor using the set visual vocabulary.
features2d,void
features2d,void
features2d,int
features2d,"Returns an image descriptor size if the vocabulary is set. Otherwise, it returns 0."
features2d,int
features2d,Returns an image descriptor type.
features2d,const Mat &
features2d,Returns the set vocabulary.
features2d,void
features2d,Sets a visual vocabulary.
features2d,Public Member Functions
features2d,virtual void
features2d,Detect MSER regions.
features2d,virtual double
features2d,virtual String
features2d,virtual int
features2d,virtual int
features2d,virtual int
features2d,virtual int
features2d,virtual double
features2d,virtual int
features2d,virtual double
features2d,virtual double
features2d,virtual bool
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,Public Member Functions inherited from cv::Feature2D
features2d,virtual
features2d,virtual void
features2d,virtual void
features2d,virtual int
features2d,virtual int
features2d,virtual int
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual bool
features2d,Return true if detector object is empty.
features2d,virtual void
features2d,Reads algorithm parameters from a file storage.
features2d,void
features2d,void
features2d,void
features2d,virtual void
features2d,Stores algorithm parameters in a file storage.
features2d,void
features2d,Public Member Functions inherited from cv::Algorithm
features2d,virtual
features2d,virtual void
features2d,Clears the algorithm state.
features2d,virtual void
features2d,void
features2d,void
features2d,Public Member Functions
features2d,virtual
features2d,virtual CV_NODISCARD_STD Ptr< DescriptorMatcher >
features2d,Clones the matcher.
features2d,virtual bool
features2d,Returns true if the descriptor matcher supports masking permissible matches.
features2d,Public Member Functions inherited from cv::DescriptorMatcher
features2d,virtual
features2d,virtual void
features2d,virtual void
features2d,Clears the train descriptor collections.
features2d,virtual bool
features2d,Returns true if there are no train descriptors in the both collections.
features2d,const std::vector< Mat > &
features2d,Returns a constant link to the train descriptor collection trainDescCollection .
features2d,void
features2d,Finds the k best matches for each descriptor from a query set.
features2d,void
features2d,void
features2d,Finds the best match for each descriptor from a query set.
features2d,void
features2d,void
features2d,"For each query descriptor, finds the training descriptors not farther than the specified distance."
features2d,void
features2d,virtual void
features2d,Reads algorithm parameters from a file storage.
features2d,void
features2d,virtual void
features2d,Trains a descriptor matcher.
features2d,void
features2d,void
features2d,virtual void
features2d,Stores algorithm parameters in a file storage.
features2d,void
features2d,Public Member Functions inherited from cv::Algorithm
features2d,virtual
features2d,virtual String
features2d,virtual void
features2d,void
features2d,void
features2d,Public Member Functions
features2d,The constructor.
features2d,virtual
features2d,virtual Mat
features2d,virtual Mat
features2d,Clusters train descriptors.
features2d,Public Member Functions inherited from cv::BOWTrainer
features2d,virtual
features2d,void
features2d,Adds descriptors to a training set.
features2d,virtual void
features2d,int
features2d,Returns the count of all descriptors stored in the training set.
features2d,const std::vector< Mat > &
features2d,Returns a training set of descriptors.
features2d,Public Member Functions
features2d,bool
features2d,Public Member Functions
features2d,virtual
features2d,void
features2d,Adds descriptors to a training set.
features2d,virtual void
features2d,virtual Mat
features2d,virtual Mat
features2d,Clusters train descriptors.
features2d,int
features2d,Returns the count of all descriptors stored in the training set.
features2d,const std::vector< Mat > &
features2d,Returns a training set of descriptors.
features2d,Public Member Functions
features2d,virtual double
features2d,virtual String
features2d,virtual double
features2d,virtual int
features2d,virtual int
features2d,virtual double
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,Public Member Functions inherited from cv::Feature2D
features2d,virtual
features2d,virtual void
features2d,virtual void
features2d,virtual int
features2d,virtual int
features2d,virtual int
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual bool
features2d,Return true if detector object is empty.
features2d,virtual void
features2d,Reads algorithm parameters from a file storage.
features2d,void
features2d,void
features2d,void
features2d,virtual void
features2d,Stores algorithm parameters in a file storage.
features2d,void
features2d,Public Member Functions inherited from cv::Algorithm
features2d,virtual
features2d,virtual void
features2d,Clears the algorithm state.
features2d,virtual void
features2d,void
features2d,void
features2d,Public Member Functions
features2d,virtual String
features2d,virtual void
features2d,virtual void
features2d,Public Member Functions inherited from cv::Feature2D
features2d,virtual
features2d,virtual void
features2d,virtual void
features2d,virtual int
features2d,virtual int
features2d,virtual int
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual bool
features2d,Return true if detector object is empty.
features2d,virtual void
features2d,Reads algorithm parameters from a file storage.
features2d,void
features2d,void
features2d,void
features2d,virtual void
features2d,Stores algorithm parameters in a file storage.
features2d,void
features2d,Public Member Functions inherited from cv::Algorithm
features2d,virtual
features2d,virtual void
features2d,Clears the algorithm state.
features2d,virtual void
features2d,void
features2d,void
features2d,Public Member Functions
features2d,virtual void
features2d,virtual void
features2d,Clears the train descriptor collections.
features2d,virtual CV_NODISCARD_STD Ptr< DescriptorMatcher >
features2d,Clones the matcher.
features2d,virtual bool
features2d,Returns true if the descriptor matcher supports masking permissible matches.
features2d,virtual void
features2d,Reads algorithm parameters from a file storage.
features2d,virtual void
features2d,Trains a descriptor matcher.
features2d,virtual void
features2d,Stores algorithm parameters in a file storage.
features2d,Public Member Functions inherited from cv::DescriptorMatcher
features2d,virtual
features2d,virtual bool
features2d,Returns true if there are no train descriptors in the both collections.
features2d,const std::vector< Mat > &
features2d,Returns a constant link to the train descriptor collection trainDescCollection .
features2d,void
features2d,Finds the k best matches for each descriptor from a query set.
features2d,void
features2d,void
features2d,Finds the best match for each descriptor from a query set.
features2d,void
features2d,void
features2d,"For each query descriptor, finds the training descriptors not farther than the specified distance."
features2d,void
features2d,void
features2d,void
features2d,void
features2d,void
features2d,Public Member Functions inherited from cv::Algorithm
features2d,virtual
features2d,virtual String
features2d,virtual void
features2d,void
features2d,void
features2d,Public Member Functions
features2d,Public Member Functions
features2d,virtual String
features2d,virtual int
features2d,virtual float
features2d,virtual int
features2d,virtual void
features2d,Set detection octaves.
features2d,virtual void
features2d,Set detection patternScale.
features2d,virtual void
features2d,Set detection threshold.
features2d,Public Member Functions inherited from cv::Feature2D
features2d,virtual
features2d,virtual void
features2d,virtual void
features2d,virtual int
features2d,virtual int
features2d,virtual int
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual bool
features2d,Return true if detector object is empty.
features2d,virtual void
features2d,Reads algorithm parameters from a file storage.
features2d,void
features2d,void
features2d,void
features2d,virtual void
features2d,Stores algorithm parameters in a file storage.
features2d,void
features2d,Public Member Functions inherited from cv::Algorithm
features2d,virtual
features2d,virtual void
features2d,Clears the algorithm state.
features2d,virtual void
features2d,void
features2d,void
features2d,Public Member Functions
features2d,virtual int
features2d,virtual String
features2d,virtual int
features2d,virtual bool
features2d,virtual double
features2d,virtual int
features2d,virtual double
features2d,virtual double
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,Public Member Functions inherited from cv::Feature2D
features2d,virtual
features2d,virtual void
features2d,virtual void
features2d,virtual int
features2d,virtual int
features2d,virtual int
features2d,virtual void
features2d,virtual void
features2d,virtual void
features2d,virtual bool
features2d,Return true if detector object is empty.
features2d,virtual void
features2d,Reads algorithm parameters from a file storage.
features2d,void
features2d,void
features2d,void
features2d,virtual void
features2d,Stores algorithm parameters in a file storage.
features2d,void
features2d,Public Member Functions inherited from cv::Algorithm
features2d,virtual
features2d,virtual void
features2d,Clears the algorithm state.
features2d,virtual void
features2d,void
features2d,void
flann,Public Member Functions
flann,MatExpr
flann,Mat
flann,MatExpr
flann,double
flann,MatExpr
flann,MatExpr
flann,MatExpr
flann,template<typename _Tp >
flann,MatExpr
flann,MatExpr
flann,MatExpr
flann,Size
flann,void
flann,MatExpr
flann,int
flann,Public Member Functions
flann,default constructor
flann,"template<typename _Tp2 , int cn>"
flann,Scalar_< _Tp >
flann,bool
flann,returns true iff v1 == v2 == v3 == 0
flann,Scalar_< _Tp >
flann,per-element product
flann,template<typename T2 >
flann,conversion to another data type
flann,Scalar_ &
flann,Scalar_ &
flann,"Public Member Functions inherited from cv::Vec< _Tp, 4 >"
flann,default constructor
flann,1-element vector constructor
flann,2-element vector constructor
flann,3-element vector constructor
flann,4-element vector constructor
flann,5-element vector constructor
flann,6-element vector constructor
flann,7-element vector constructor
flann,8-element vector constructor
flann,9-element vector constructor
flann,10-element vector constructor
flann,14-element vector constructor
flann,Vec
flann,Vec
flann,Vec
flann,per-element multiplication
flann,conversion to another data type
flann,_Tp &
flann,const _Tp &
flann,"Vec< _Tp, cn > &"
flann,_Tp &
flann,const _Tp &
flann,"Public Member Functions inherited from cv::Matx< _Tp, cn, 1 >"
flann,default constructor
flann,1x1 matrix
flann,1x2 or 2x1 matrix
flann,1x3 or 3x1 matrix
flann,"1x4, 2x2 or 4x1 matrix"
flann,1x5 or 5x1 matrix
flann,"1x6, 2x3, 3x2 or 6x1 matrix"
flann,1x7 or 7x1 matrix
flann,"1x8, 2x4, 4x2 or 8x1 matrix"
flann,"1x9, 3x3 or 9x1 matrix"
flann,"1x10, 2x5 or 5x2 or 10x1 matrix"
flann,"1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix"
flann,"1x14, 2x7, 7x2 or 14x1 matrix"
flann,"1x16, 4x4 or 16x1 matrix"
flann,initialize from a plain array
flann,initialize from an initializer list
flann,"Matx< _Tp, m, 1 >"
flann,extract the matrix column
flann,double
flann,dot product computed in double-precision arithmetics
flann,diag_type
flann,extract the matrix diagonal
flann,"Matx< _Tp, m, n >"
flann,divide two matrices element-wise
flann,_Tp
flann,dot product computed with the default precision
flann,"Matx< _Tp, m1, n1 >"
flann,extract part of the matrix
flann,"Matx< _Tp, n, m >"
flann,invert the matrix
flann,"Matx< _Tp, m, n >"
flann,multiply two matrices element-wise
flann,conversion to another data type
flann,_Tp &
flann,const _Tp &
flann,1D element access
flann,_Tp &
flann,const _Tp &
flann,element access
flann,"Matx< _Tp, m1, n1 >"
flann,change the matrix shape
flann,"Matx< _Tp, 1, n >"
flann,extract the matrix row
flann,"Matx< _Tp, n, l >"
flann,solve linear system
flann,"Vec< _Tp, n >"
flann,"Matx< _Tp, n, m >"
flann,transpose the matrix
flann,Static Public Member Functions
flann,static int
flann,Public Member Functions
flann,MatStep &
flann,const size_t &
flann,size_t &
flann,Public Member Functions
flann,"the constructor, created by ""matrix << firstValue"" operator, where matrix is cv::Mat"
flann,another form of conversion operator
flann,template<typename T2 >
flann,MatCommaInitializer_< _Tp > &
flann,the operator that takes the next value and put it to the matrix
flann,Static Public Member Functions
flann,static int
flann,Static Public Member Functions
flann,static int
flann,Public Member Functions
flann,bool
flann,int
flann,Static Public Member Functions
flann,static int
flann,Static Public Member Functions
flann,static int
flann,Static Public Member Functions
flann,static int
flann,Public Member Functions
flann,virtual
flann,virtual UMatData *
flann,virtual bool
flann,virtual void
flann,virtual void
flann,virtual void
flann,virtual BufferPoolController *
flann,virtual void
flann,virtual void
flann,virtual void
flann,Public Member Functions
flann,int
flann,bool
flann,Size
flann,bool
flann,int &
flann,const int &
gapi,Public Member Functions
gapi,GAPI_WRAP
gapi,Mosaic constructor.
gapi,Public Member Functions
gapi,Copy constructor.
gapi,Constructor.
gapi,Destructor.
gapi,void
gapi,Set the about message.
gapi,bool
gapi,Check for parsing errors.
gapi,template<typename T >
gapi,T
gapi,Access arguments by name.
gapi,template<typename T >
gapi,T
gapi,Access positional arguments by index.
gapi,String
gapi,Returns application path.
gapi,bool
gapi,Check if field was provided in the command line.
gapi,CommandLineParser &
gapi,Assignment operator.
gapi,void
gapi,Print list of errors occurred.
gapi,void
gapi,Print help message.
gapi,Public Member Functions
gapi,GAPI_WRAP
gapi,GAPI_WRAP
gapi,GAPI_WRAP
gapi,GAPI_WRAP
gapi,GAPI_WRAP GMatDesc
gapi,GAPI_WRAP GMatDesc
gapi,GAPI_WRAP GMatDesc
gapi,bool
gapi,bool
gapi,bool
gapi,bool
gapi,bool
gapi,GAPI_WRAP GMatDesc
gapi,GAPI_WRAP GMatDesc
gapi,GAPI_WRAP GMatDesc
gapi,GAPI_WRAP GMatDesc
gapi,GAPI_WRAP GMatDesc
gapi,Public Member Functions
gapi,MatExpr
gapi,Mat
gapi,MatExpr
gapi,double
gapi,MatExpr
gapi,MatExpr
gapi,MatExpr
gapi,template<typename _Tp >
gapi,MatExpr
gapi,MatExpr
gapi,MatExpr
gapi,Size
gapi,void
gapi,MatExpr
gapi,int
gapi,Public Member Functions
gapi,GAPI_WRAP
gapi,const GMetaArgs &
gapi,Vector of metadata this graph was compiled for.
gapi,const GMetaArgs &
gapi,Vector of metadata descriptions of graph outputs.
gapi,bool
gapi,Get some next available data from the pipeline.
gapi,bool
gapi,Get the next processed frame from the pipeline.
gapi,GAPI_WRAP bool
gapi,Test if the pipeline is running.
gapi,"template<typename T , typename... Args>"
gapi,void
gapi,Constructs and specifies an input video stream for a single-input computation pipeline with the given parameters.
gapi,void
gapi,Specify an input video stream for a single-input computation pipeline.
gapi,void
gapi,"Specify the input data to GStreamingCompiled for processing, a generic version."
gapi,GAPI_WRAP void
gapi,Start the pipeline execution.
gapi,GAPI_WRAP void
gapi,bool
gapi,Try to get the next processed frame from the pipeline.
gapi,Public Member Functions
gapi,default constructor
gapi,"template<typename _Tp2 , int cn>"
gapi,Scalar_< _Tp >
gapi,bool
gapi,returns true iff v1 == v2 == v3 == 0
gapi,Scalar_< _Tp >
gapi,per-element product
gapi,template<typename T2 >
gapi,conversion to another data type
gapi,Scalar_ &
gapi,Scalar_ &
gapi,"Public Member Functions inherited from cv::Vec< _Tp, 4 >"
gapi,default constructor
gapi,1-element vector constructor
gapi,2-element vector constructor
gapi,3-element vector constructor
gapi,4-element vector constructor
gapi,5-element vector constructor
gapi,6-element vector constructor
gapi,7-element vector constructor
gapi,8-element vector constructor
gapi,9-element vector constructor
gapi,10-element vector constructor
gapi,14-element vector constructor
gapi,Vec
gapi,Vec
gapi,Vec
gapi,per-element multiplication
gapi,conversion to another data type
gapi,_Tp &
gapi,const _Tp &
gapi,"Vec< _Tp, cn > &"
gapi,_Tp &
gapi,const _Tp &
gapi,"Public Member Functions inherited from cv::Matx< _Tp, cn, 1 >"
gapi,default constructor
gapi,1x1 matrix
gapi,1x2 or 2x1 matrix
gapi,1x3 or 3x1 matrix
gapi,"1x4, 2x2 or 4x1 matrix"
gapi,1x5 or 5x1 matrix
gapi,"1x6, 2x3, 3x2 or 6x1 matrix"
gapi,1x7 or 7x1 matrix
gapi,"1x8, 2x4, 4x2 or 8x1 matrix"
gapi,"1x9, 3x3 or 9x1 matrix"
gapi,"1x10, 2x5 or 5x2 or 10x1 matrix"
gapi,"1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix"
gapi,"1x14, 2x7, 7x2 or 14x1 matrix"
gapi,"1x16, 4x4 or 16x1 matrix"
gapi,initialize from a plain array
gapi,initialize from an initializer list
gapi,"Matx< _Tp, m, 1 >"
gapi,extract the matrix column
gapi,double
gapi,dot product computed in double-precision arithmetics
gapi,diag_type
gapi,extract the matrix diagonal
gapi,"Matx< _Tp, m, n >"
gapi,divide two matrices element-wise
gapi,_Tp
gapi,dot product computed with the default precision
gapi,"Matx< _Tp, m1, n1 >"
gapi,extract part of the matrix
gapi,"Matx< _Tp, n, m >"
gapi,invert the matrix
gapi,"Matx< _Tp, m, n >"
gapi,multiply two matrices element-wise
gapi,conversion to another data type
gapi,_Tp &
gapi,const _Tp &
gapi,1D element access
gapi,_Tp &
gapi,const _Tp &
gapi,element access
gapi,"Matx< _Tp, m1, n1 >"
gapi,change the matrix shape
gapi,"Matx< _Tp, 1, n >"
gapi,extract the matrix row
gapi,"Matx< _Tp, n, l >"
gapi,solve linear system
gapi,"Vec< _Tp, n >"
gapi,"Matx< _Tp, n, m >"
gapi,transpose the matrix
gapi,Public Member Functions
gapi,virtual
gapi,void
gapi,virtual const char *
gapi,Public Member Functions
gapi,Constructs an empty object.
gapi,bool
gapi,Check if the underlying backends support reshape or not.
gapi,const GMetaArgs &
gapi,Vector of metadata this graph was compiled for.
gapi,void
gapi,Execute a computation with arbitrary number of inputs/outputs.
gapi,void
gapi,Execute an unary computation.
gapi,void
gapi,Execute an unary computation.
gapi,void
gapi,Execute a binary computation.
gapi,void
gapi,Execute an binary computation.
gapi,void
gapi,"Run the compiled computation, a generic version."
gapi,const GMetaArgs &
gapi,Vector of metadata descriptions of graph outputs.
gapi,void
gapi,Prepare inner kernels states for a new video-stream.
gapi,void
gapi,Reshape a compiled graph to support new image resolutions.
gapi,Public Member Functions
gapi,virtual
gapi,virtual void
gapi,Public Member Functions
gapi,Constructs an empty cv::GArray<T>
gapi,Constructs a value-initialized cv::GArray<T>
gapi,Constructs a value-initialized cv::GArray<T>
gapi,Public Member Functions
gapi,virtual
gapi,virtual void
gapi,Clears the algorithm state.
gapi,virtual bool
gapi,virtual String
gapi,virtual void
gapi,Reads algorithm parameters from a file storage.
gapi,virtual void
gapi,void
gapi,virtual void
gapi,Stores algorithm parameters in a file storage.
gapi,void
gapi,Public Member Functions
gapi,virtual void
gapi,Public Member Functions inherited from cv::ParallelLoopBody
gapi,virtual
gapi,Public Member Functions
gapi,MatStep &
gapi,const size_t &
gapi,size_t &
gapi,Public Member Functions
gapi,Public Member Functions
gapi,default constructor
gapi,Public Member Functions
gapi,GAPI_WRAP
gapi,Rect constructor.
gapi,Public Member Functions
gapi,"the constructor, created by ""matrix << firstValue"" operator, where matrix is cv::Mat"
gapi,another form of conversion operator
gapi,template<typename T2 >
gapi,MatCommaInitializer_< _Tp > &
gapi,the operator that takes the next value and put it to the matrix
gapi,Public Member Functions
gapi,bool
gapi,Public Member Functions
gapi,Class constructor.
gapi,Class destructor.
gapi,template<typename T >
gapi,void
gapi,Bind a pointer to local area.
gapi,void
gapi,Allocate memory and initialize all bound pointers.
gapi,void
gapi,Release all memory and unbind all pointers.
gapi,void
gapi,Fill all buffers with zeroes.
gapi,template<typename T >
gapi,void
gapi,Fill one of buffers with zeroes.
gapi,Public Member Functions
gapi,Default constructor.
gapi,Opens a video file or a capturing device or an IP video stream for video capturing with API Preference and parameters.
gapi,Opens a video file or a capturing device or an IP video stream for video capturing with API Preference.
gapi,Opens a camera for video capturing with API Preference and parameters.
gapi,Opens a camera for video capturing.
gapi,virtual
gapi,Default destructor.
gapi,virtual double
gapi,Returns the specified VideoCapture property.
gapi,String
gapi,Returns used backend API name.
gapi,bool
gapi,query if exception mode is active
gapi,virtual bool
gapi,Grabs the next frame from video file or capturing device.
gapi,virtual bool
gapi,Returns true if video capturing has been initialized already.
gapi,virtual bool
gapi,Opens a video file or a capturing device or an IP video stream for video capturing with API Preference and parameters.
gapi,virtual bool
gapi,Opens a video file or a capturing device or an IP video stream for video capturing.
gapi,virtual bool
gapi,Opens a camera for video capturing with API Preference and parameters.
gapi,virtual bool
gapi,Opens a camera for video capturing.
gapi,virtual VideoCapture &
gapi,Stream operator to read the next video frame.
gapi,virtual VideoCapture &
gapi,virtual bool
gapi,"Grabs, decodes and returns the next video frame."
gapi,virtual void
gapi,Closes video file or capturing device.
gapi,virtual bool
gapi,Decodes and returns the grabbed video frame.
gapi,virtual bool
gapi,Sets a property in the VideoCapture.
gapi,void
gapi,Public Member Functions
gapi,the default constructor
gapi,double
gapi,returns average time in milliseconds
gapi,double
gapi,returns average time in seconds
gapi,int64
gapi,returns internal counter value.
gapi,double
gapi,double
gapi,returns passed time of the last iteration in microseconds.
gapi,double
gapi,returns passed time of the last iteration in milliseconds.
gapi,double
gapi,returns passed time of the last iteration in seconds.
gapi,int64
gapi,returns counted ticks of the last iteration.
gapi,double
gapi,returns passed time in microseconds.
gapi,double
gapi,returns passed time in milliseconds.
gapi,double
gapi,returns passed time in seconds.
gapi,int64
gapi,returns counted ticks.
gapi,void
gapi,resets internal values.
gapi,void
gapi,starts counting ticks.
gapi,void
gapi,stops counting ticks.
gapi,Public Member Functions
gapi,GAPI_WRAP
gapi,Constructs an empty GFrame.
gapi,Public Member Functions
gapi,GAPI_WRAP
gapi,Constructs an empty GScalar.
gapi,GAPI_WRAP
gapi,Constructs a value-initialized GScalar.
gapi,Constructs a value-initialized GScalar.
gapi,Constructs a value-initialized GScalar.
gapi,Public Member Functions
gapi,void
gapi,Release associated thread data.
gapi,T *
gapi,Get data associated with key.
gapi,T &
gapi,Get data associated with key.
gapi,Public Member Functions
gapi,bool
gapi,int
gapi,Public Member Functions
gapi,default constructor
gapi,Rect
gapi,returns the minimal up-right integer rectangle containing the rotated rectangle
gapi,Rect2f
gapi,void
gapi,void
gapi,Public Member Functions
gapi,void
gapi,Release associated thread data.
gapi,void
gapi,std::vector< T * > &
gapi,Get and detach data from all threads.
gapi,void
gapi,Get data from all threads.
gapi,void
gapi,Release associated thread data and free TLS key.
gapi,Public Member Functions inherited from cv::TLSData< T >
gapi,void
gapi,Release associated thread data.
gapi,T *
gapi,Get data associated with key.
gapi,T &
gapi,Get data associated with key.
gapi,Public Member Functions
gapi,const Mat &
gapi,Updates the predicted state from the measurement.
gapi,void
gapi,Re-initializes Kalman filter. The previous content is destroyed.
gapi,const Mat &
gapi,Computes a predicted state.
gapi,Public Member Functions
gapi,Default constructors.
gapi,virtual
gapi,Default destructor.
gapi,virtual double
gapi,Returns the specified VideoWriter property.
gapi,String
gapi,Returns used backend API name.
gapi,virtual bool
gapi,Returns true if video writer has been successfully initialized.
gapi,bool
gapi,bool
gapi,bool
gapi,virtual bool
gapi,Initializes or reinitializes video writer.
gapi,virtual VideoWriter &
gapi,Stream operator to write the next video frame.
gapi,virtual VideoWriter &
gapi,virtual void
gapi,Closes the video writer.
gapi,virtual bool
gapi,Sets a property in the VideoWriter.
gapi,virtual void
gapi,Writes the next video frame.
gapi,Public Member Functions
gapi,GAPI_WRAP
gapi,Constructs an empty GMat.
gapi,GAPI_WRAP
gapi,Constructs a value-initialized GMat.
gapi,Public Member Functions inherited from cv::GMat
gapi,GAPI_WRAP
gapi,Constructs an empty GMat.
gapi,GAPI_WRAP
gapi,Constructs a value-initialized GMat.
gapi,Public Member Functions
gapi,Constructs an empty cv::GOpaque<T>
gapi,Public Member Functions
gapi,void
gapi,Public Member Functions
gapi,virtual
gapi,virtual UMatData *
gapi,virtual bool
gapi,virtual void
gapi,virtual void
gapi,virtual void
gapi,virtual BufferPoolController *
gapi,virtual void
gapi,virtual void
gapi,virtual void
gapi,Public Member Functions
gapi,int
gapi,bool
gapi,Size
gapi,bool
gapi,int &
gapi,const int &
gapi,Public Member Functions
gapi,GAPI_WRAP
gapi,Constructs an empty GMat.
gapi,GAPI_WRAP
gapi,Constructs a value-initialized GMat.
highgui,Public Member Functions
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,"template<typename _Tp , int m, int n>"
highgui,"template<typename _Tp , std::size_t _Nm>"
highgui,template<std::size_t _Nm>
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,"template<typename _Tp , int m, int n>"
highgui,"template<typename _Tp , std::size_t _Nm>"
highgui,template<std::size_t _Nm>
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,"template<typename _Tp , std::size_t _Nm>"
highgui,_InputOutputArray
highgui,Public Member Functions inherited from cv::_OutputArray
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,"template<typename _Tp , int m, int n>"
highgui,"template<typename _Tp , std::size_t _Nm>"
highgui,template<std::size_t _Nm>
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,"template<typename _Tp , int m, int n>"
highgui,"template<typename _Tp , std::size_t _Nm>"
highgui,template<std::size_t _Nm>
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,void
highgui,void
highgui,void
highgui,void
highgui,void
highgui,void
highgui,void
highgui,void
highgui,void
highgui,bool
highgui,bool
highgui,cuda::GpuMat &
highgui,std::vector< cuda::GpuMat > &
highgui,cuda::HostMem &
highgui,Mat &
highgui,ogl::Buffer &
highgui,UMat &
highgui,void
highgui,void
highgui,bool
highgui,void
highgui,void
highgui,Public Member Functions inherited from cv::_InputArray
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,"template<typename _Tp , int m, int n>"
highgui,"template<typename _Tp , std::size_t _Nm>"
highgui,template<std::size_t _Nm>
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,template<typename _Tp >
highgui,int
highgui,int
highgui,void
highgui,void
highgui,int
highgui,int
highgui,bool
highgui,int
highgui,cuda::GpuMat
highgui,void
highgui,Mat
highgui,Mat
highgui,void
highgui,void *
highgui,ogl::Buffer
highgui,Size
highgui,UMat
highgui,void
highgui,bool
highgui,bool
highgui,bool
highgui,bool
highgui,bool
highgui,bool
highgui,bool
highgui,bool
highgui,bool
highgui,bool
highgui,_InputArray::KindFlag
highgui,size_t
highgui,int
highgui,bool
highgui,Size
highgui,int
highgui,size_t
highgui,size_t
highgui,int
highgui,Public Member Functions
highgui,MatExpr
highgui,Mat
highgui,MatExpr
highgui,double
highgui,MatExpr
highgui,MatExpr
highgui,MatExpr
highgui,template<typename _Tp >
highgui,MatExpr
highgui,MatExpr
highgui,MatExpr
highgui,Size
highgui,void
highgui,MatExpr
highgui,int
highgui,Public Member Functions
highgui,virtual
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual bool
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual Size
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual int
highgui,Public Member Functions
highgui,default constructor
highgui,"template<typename _Tp2 , int cn>"
highgui,Scalar_< _Tp >
highgui,bool
highgui,returns true iff v1 == v2 == v3 == 0
highgui,Scalar_< _Tp >
highgui,per-element product
highgui,template<typename T2 >
highgui,conversion to another data type
highgui,Scalar_ &
highgui,Scalar_ &
highgui,"Public Member Functions inherited from cv::Vec< _Tp, 4 >"
highgui,default constructor
highgui,1-element vector constructor
highgui,2-element vector constructor
highgui,3-element vector constructor
highgui,4-element vector constructor
highgui,5-element vector constructor
highgui,6-element vector constructor
highgui,7-element vector constructor
highgui,8-element vector constructor
highgui,9-element vector constructor
highgui,10-element vector constructor
highgui,14-element vector constructor
highgui,Vec
highgui,Vec
highgui,Vec
highgui,per-element multiplication
highgui,conversion to another data type
highgui,_Tp &
highgui,const _Tp &
highgui,"Vec< _Tp, cn > &"
highgui,_Tp &
highgui,const _Tp &
highgui,"Public Member Functions inherited from cv::Matx< _Tp, cn, 1 >"
highgui,default constructor
highgui,1x1 matrix
highgui,1x2 or 2x1 matrix
highgui,1x3 or 3x1 matrix
highgui,"1x4, 2x2 or 4x1 matrix"
highgui,1x5 or 5x1 matrix
highgui,"1x6, 2x3, 3x2 or 6x1 matrix"
highgui,1x7 or 7x1 matrix
highgui,"1x8, 2x4, 4x2 or 8x1 matrix"
highgui,"1x9, 3x3 or 9x1 matrix"
highgui,"1x10, 2x5 or 5x2 or 10x1 matrix"
highgui,"1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix"
highgui,"1x14, 2x7, 7x2 or 14x1 matrix"
highgui,"1x16, 4x4 or 16x1 matrix"
highgui,initialize from a plain array
highgui,initialize from an initializer list
highgui,"Matx< _Tp, m, 1 >"
highgui,extract the matrix column
highgui,double
highgui,dot product computed in double-precision arithmetics
highgui,diag_type
highgui,extract the matrix diagonal
highgui,"Matx< _Tp, m, n >"
highgui,divide two matrices element-wise
highgui,_Tp
highgui,dot product computed with the default precision
highgui,"Matx< _Tp, m1, n1 >"
highgui,extract part of the matrix
highgui,"Matx< _Tp, n, m >"
highgui,invert the matrix
highgui,"Matx< _Tp, m, n >"
highgui,multiply two matrices element-wise
highgui,conversion to another data type
highgui,_Tp &
highgui,const _Tp &
highgui,1D element access
highgui,_Tp &
highgui,const _Tp &
highgui,element access
highgui,"Matx< _Tp, m1, n1 >"
highgui,change the matrix shape
highgui,"Matx< _Tp, 1, n >"
highgui,extract the matrix row
highgui,"Matx< _Tp, n, l >"
highgui,solve linear system
highgui,"Vec< _Tp, n >"
highgui,"Matx< _Tp, n, m >"
highgui,transpose the matrix
highgui,Public Member Functions
highgui,the default constructor
highgui,size_t
highgui,Public Member Functions
highgui,virtual
highgui,virtual void
highgui,Clears the algorithm state.
highgui,virtual bool
highgui,virtual String
highgui,virtual void
highgui,Reads algorithm parameters from a file storage.
highgui,virtual void
highgui,void
highgui,virtual void
highgui,Stores algorithm parameters in a file storage.
highgui,void
highgui,Public Member Functions
highgui,MatStep &
highgui,const size_t &
highgui,size_t &
highgui,Public Member Functions
highgui,bool
highgui,Public Member Functions
highgui,virtual
highgui,virtual const char *
highgui,virtual void
highgui,Public Member Functions
highgui,the default constructor
highgui,the copy constructor
highgui,the full constructor setting the iterator to the first sparse matrix element
highgui,the full constructor setting the iterator to the specified sparse matrix element
highgui,SparseMat::Node *
highgui,SparseMatIterator &
highgui,moves iterator to the next element
highgui,SparseMatIterator
highgui,moves iterator to the next element
highgui,SparseMatIterator &
highgui,the assignment operator
highgui,template<typename _Tp >
highgui,_Tp &
highgui,returns read-write reference to the current sparse matrix element
highgui,Public Member Functions inherited from cv::SparseMatConstIterator
highgui,the default constructor
highgui,the full constructor setting the iterator to the first sparse matrix element
highgui,the copy constructor
highgui,const SparseMat::Node *
highgui,returns the current node of the sparse matrix. it.node->idx is the current element index
highgui,SparseMatConstIterator &
highgui,moves iterator to the next element
highgui,SparseMatConstIterator
highgui,moves iterator to the next element
highgui,SparseMatConstIterator &
highgui,moves iterator to the previous element
highgui,SparseMatConstIterator
highgui,moves iterator to the previous element
highgui,SparseMatConstIterator &
highgui,the assignment operator
highgui,void
highgui,moves iterator to the element after the last element
highgui,template<typename _Tp >
highgui,const _Tp &
highgui,template method returning the current matrix element
highgui,Public Member Functions
highgui,the default constructor
highgui,the full constructor taking arbitrary number of n-dim matrices
highgui,the full constructor taking arbitrary number of n-dim matrices
highgui,void
highgui,the separate iterator initialization method
highgui,NAryMatIterator &
highgui,proceeds to the next plane of every iterated matrix
highgui,NAryMatIterator
highgui,Public Member Functions
highgui,"the constructor, created by ""matrix << firstValue"" operator, where matrix is cv::Mat"
highgui,another form of conversion operator
highgui,template<typename T2 >
highgui,MatCommaInitializer_< _Tp > &
highgui,the operator that takes the next value and put it to the matrix
highgui,Public Member Functions
highgui,bool
highgui,int
highgui,Public Member Functions
highgui,default constructor
highgui,Complex
highgui,conjugation
highgui,template<typename T2 >
highgui,conversion to another data type
highgui,Public Member Functions
highgui,default constructor
highgui,Rect
highgui,returns the minimal up-right integer rectangle containing the rotated rectangle
highgui,Rect2f
highgui,void
highgui,void
highgui,Public Member Functions
highgui,virtual
highgui,virtual UMatData *
highgui,virtual bool
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,virtual BufferPoolController *
highgui,virtual void
highgui,virtual void
highgui,virtual void
highgui,Public Member Functions
highgui,int
highgui,bool
highgui,Size
highgui,bool
highgui,int &
highgui,const int &
highgui,Public Member Functions
highgui,virtual
highgui,virtual bool
highgui,virtual void
highgui,Public Member Functions
highgui,the default constructor
highgui,the full constructor setting the iterator to the first sparse matrix element
highgui,the copy constructor
highgui,const SparseMat::Node *
highgui,returns the current node of the sparse matrix. it.node->idx is the current element index
highgui,SparseMatConstIterator &
highgui,moves iterator to the next element
highgui,SparseMatConstIterator
highgui,moves iterator to the next element
highgui,SparseMatConstIterator &
highgui,moves iterator to the previous element
highgui,SparseMatConstIterator
highgui,moves iterator to the previous element
highgui,SparseMatConstIterator &
highgui,the assignment operator
highgui,void
highgui,moves iterator to the element after the last element
highgui,template<typename _Tp >
highgui,const _Tp &
highgui,template method returning the current matrix element
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Initialize the tracker with a known bounding box that surrounded the target.
imgcodecs,virtual bool
imgcodecs,"Update the tracker, find the new most likely bounding box for the target."
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual bool
imgcodecs,Return true if detector object is empty.
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::HistogramCostExtractor
imgcodecs,virtual void
imgcodecs,virtual float
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Static Public Member Functions
imgcodecs,static Ptr< ConjGradSolver >
imgcodecs,This function returns the reference to the ready-to-use ConjGradSolver object.
imgcodecs,Static Public Member Functions inherited from cv::Algorithm
imgcodecs,template<typename _Tp >
imgcodecs,static Ptr< _Tp >
imgcodecs,Loads algorithm from the file.
imgcodecs,template<typename _Tp >
imgcodecs,static Ptr< _Tp >
imgcodecs,Loads algorithm from a String.
imgcodecs,template<typename _Tp >
imgcodecs,static Ptr< _Tp >
imgcodecs,Reads algorithm from the file node.
imgcodecs,Public Member Functions
imgcodecs,Copy constructor.
imgcodecs,Constructor.
imgcodecs,Destructor.
imgcodecs,void
imgcodecs,Set the about message.
imgcodecs,bool
imgcodecs,Check for parsing errors.
imgcodecs,template<typename T >
imgcodecs,T
imgcodecs,Access arguments by name.
imgcodecs,template<typename T >
imgcodecs,T
imgcodecs,Access positional arguments by index.
imgcodecs,String
imgcodecs,Returns application path.
imgcodecs,bool
imgcodecs,Check if field was provided in the command line.
imgcodecs,CommandLineParser &
imgcodecs,Assignment operator.
imgcodecs,void
imgcodecs,Print list of errors occurred.
imgcodecs,void
imgcodecs,Print help message.
imgcodecs,Public Member Functions
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,"template<typename _Tp , int m, int n>"
imgcodecs,"template<typename _Tp , std::size_t _Nm>"
imgcodecs,template<std::size_t _Nm>
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,"template<typename _Tp , int m, int n>"
imgcodecs,"template<typename _Tp , std::size_t _Nm>"
imgcodecs,template<std::size_t _Nm>
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,"template<typename _Tp , std::size_t _Nm>"
imgcodecs,_InputOutputArray
imgcodecs,Public Member Functions inherited from cv::_OutputArray
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,"template<typename _Tp , int m, int n>"
imgcodecs,"template<typename _Tp , std::size_t _Nm>"
imgcodecs,template<std::size_t _Nm>
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,"template<typename _Tp , int m, int n>"
imgcodecs,"template<typename _Tp , std::size_t _Nm>"
imgcodecs,template<std::size_t _Nm>
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,bool
imgcodecs,bool
imgcodecs,cuda::GpuMat &
imgcodecs,std::vector< cuda::GpuMat > &
imgcodecs,cuda::HostMem &
imgcodecs,Mat &
imgcodecs,ogl::Buffer &
imgcodecs,UMat &
imgcodecs,void
imgcodecs,void
imgcodecs,bool
imgcodecs,void
imgcodecs,void
imgcodecs,Public Member Functions inherited from cv::_InputArray
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,"template<typename _Tp , int m, int n>"
imgcodecs,"template<typename _Tp , std::size_t _Nm>"
imgcodecs,template<std::size_t _Nm>
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,template<typename _Tp >
imgcodecs,int
imgcodecs,int
imgcodecs,void
imgcodecs,void
imgcodecs,int
imgcodecs,int
imgcodecs,bool
imgcodecs,int
imgcodecs,cuda::GpuMat
imgcodecs,void
imgcodecs,Mat
imgcodecs,Mat
imgcodecs,void
imgcodecs,void *
imgcodecs,ogl::Buffer
imgcodecs,Size
imgcodecs,UMat
imgcodecs,void
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,_InputArray::KindFlag
imgcodecs,size_t
imgcodecs,int
imgcodecs,bool
imgcodecs,Size
imgcodecs,int
imgcodecs,size_t
imgcodecs,size_t
imgcodecs,int
imgcodecs,Public Member Functions
imgcodecs,Ptr< detail::RotationWarper >
imgcodecs,Public Member Functions inherited from cv::WarperCreator
imgcodecs,virtual
imgcodecs,Public Member Functions
imgcodecs,GAPI_WRAP
imgcodecs,GAPI_WRAP
imgcodecs,GAPI_WRAP
imgcodecs,GAPI_WRAP
imgcodecs,GAPI_WRAP GMatDesc
imgcodecs,GAPI_WRAP GMatDesc
imgcodecs,GAPI_WRAP GMatDesc
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,GAPI_WRAP GMatDesc
imgcodecs,GAPI_WRAP GMatDesc
imgcodecs,GAPI_WRAP GMatDesc
imgcodecs,GAPI_WRAP GMatDesc
imgcodecs,GAPI_WRAP GMatDesc
imgcodecs,Public Member Functions
imgcodecs,Ptr< detail::RotationWarper >
imgcodecs,Public Member Functions inherited from cv::WarperCreator
imgcodecs,virtual
imgcodecs,Public Member Functions
imgcodecs,Ptr< detail::RotationWarper >
imgcodecs,Public Member Functions inherited from cv::WarperCreator
imgcodecs,virtual
imgcodecs,Public Member Functions
imgcodecs,Mat &
imgcodecs,iterator &
imgcodecs,iterator
imgcodecs,Mat *
imgcodecs,Public Member Functions
imgcodecs,virtual int
imgcodecs,virtual float
imgcodecs,virtual void
imgcodecs,Set the norm used to compute the Hausdorff value between two shapes. It can be L1 or L2 norm.
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::ShapeDistanceExtractor
imgcodecs,virtual float
imgcodecs,Compute the shape distance between two shapes defined by its contours.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual float
imgcodecs,virtual float
imgcodecs,virtual float
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Tonemap
imgcodecs,virtual float
imgcodecs,virtual void
imgcodecs,Tonemaps image.
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,OutT
imgcodecs,Public Member Functions
imgcodecs,MatExpr
imgcodecs,Mat
imgcodecs,MatExpr
imgcodecs,double
imgcodecs,MatExpr
imgcodecs,MatExpr
imgcodecs,MatExpr
imgcodecs,template<typename _Tp >
imgcodecs,MatExpr
imgcodecs,MatExpr
imgcodecs,MatExpr
imgcodecs,Size
imgcodecs,void
imgcodecs,MatExpr
imgcodecs,int
imgcodecs,Public Member Functions
imgcodecs,int
imgcodecs,Returns the number of matrix channels.
imgcodecs,Mat
imgcodecs,Creates a full copy of the matrix and the underlying data.
imgcodecs,void
imgcodecs,Copies the matrix to another one.
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,int
imgcodecs,Returns the depth of a matrix element.
imgcodecs,size_t
imgcodecs,Returns the matrix element size in bytes.
imgcodecs,bool
imgcodecs,Returns true if the array has no elements.
imgcodecs,Mat
imgcodecs,Mat &
imgcodecs,Sets all or some of the array elements to the specified value.
imgcodecs,Mat &
imgcodecs,Mat &
imgcodecs,uchar *
imgcodecs,Returns a pointer to the specified matrix row.
imgcodecs,const uchar *
imgcodecs,size_t
imgcodecs,Returns the total number of array elements.
imgcodecs,int
imgcodecs,Returns the type of a matrix element.
imgcodecs,Public Member Functions inherited from cv::gapi::own::detail::MatHeader
imgcodecs,MatHeader &
imgcodecs,MatHeader &
imgcodecs,Public Member Functions
imgcodecs,bool
imgcodecs,Public Member Functions
imgcodecs,Default constructor.
imgcodecs,Constructor.
imgcodecs,Constructor.
imgcodecs,Constructor.
imgcodecs,Constructor.
imgcodecs,Constructor.
imgcodecs,Copy constructor.
imgcodecs,_Tp
imgcodecs,Access first value.
imgcodecs,Public Member Functions
imgcodecs,bool
imgcodecs,bool
imgcodecs,Public Member Functions
imgcodecs,GAPI_WRAP
imgcodecs,const GMetaArgs &
imgcodecs,Vector of metadata this graph was compiled for.
imgcodecs,const GMetaArgs &
imgcodecs,Vector of metadata descriptions of graph outputs.
imgcodecs,bool
imgcodecs,Get some next available data from the pipeline.
imgcodecs,bool
imgcodecs,Get the next processed frame from the pipeline.
imgcodecs,GAPI_WRAP bool
imgcodecs,Test if the pipeline is running.
imgcodecs,"template<typename T , typename... Args>"
imgcodecs,void
imgcodecs,Constructs and specifies an input video stream for a single-input computation pipeline with the given parameters.
imgcodecs,void
imgcodecs,Specify an input video stream for a single-input computation pipeline.
imgcodecs,void
imgcodecs,"Specify the input data to GStreamingCompiled for processing, a generic version."
imgcodecs,GAPI_WRAP void
imgcodecs,Start the pipeline execution.
imgcodecs,GAPI_WRAP void
imgcodecs,bool
imgcodecs,Try to get the next processed frame from the pipeline.
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual bool
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual Size
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual int
imgcodecs,Public Member Functions
imgcodecs,default constructor
imgcodecs,"template<typename _Tp2 , int cn>"
imgcodecs,Scalar_< _Tp >
imgcodecs,bool
imgcodecs,returns true iff v1 == v2 == v3 == 0
imgcodecs,Scalar_< _Tp >
imgcodecs,per-element product
imgcodecs,template<typename T2 >
imgcodecs,conversion to another data type
imgcodecs,Scalar_ &
imgcodecs,Scalar_ &
imgcodecs,"Public Member Functions inherited from cv::Vec< _Tp, 4 >"
imgcodecs,default constructor
imgcodecs,1-element vector constructor
imgcodecs,2-element vector constructor
imgcodecs,3-element vector constructor
imgcodecs,4-element vector constructor
imgcodecs,5-element vector constructor
imgcodecs,6-element vector constructor
imgcodecs,7-element vector constructor
imgcodecs,8-element vector constructor
imgcodecs,9-element vector constructor
imgcodecs,10-element vector constructor
imgcodecs,14-element vector constructor
imgcodecs,Vec
imgcodecs,Vec
imgcodecs,Vec
imgcodecs,per-element multiplication
imgcodecs,conversion to another data type
imgcodecs,_Tp &
imgcodecs,const _Tp &
imgcodecs,"Vec< _Tp, cn > &"
imgcodecs,_Tp &
imgcodecs,const _Tp &
imgcodecs,"Public Member Functions inherited from cv::Matx< _Tp, cn, 1 >"
imgcodecs,default constructor
imgcodecs,1x1 matrix
imgcodecs,1x2 or 2x1 matrix
imgcodecs,1x3 or 3x1 matrix
imgcodecs,"1x4, 2x2 or 4x1 matrix"
imgcodecs,1x5 or 5x1 matrix
imgcodecs,"1x6, 2x3, 3x2 or 6x1 matrix"
imgcodecs,1x7 or 7x1 matrix
imgcodecs,"1x8, 2x4, 4x2 or 8x1 matrix"
imgcodecs,"1x9, 3x3 or 9x1 matrix"
imgcodecs,"1x10, 2x5 or 5x2 or 10x1 matrix"
imgcodecs,"1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix"
imgcodecs,"1x14, 2x7, 7x2 or 14x1 matrix"
imgcodecs,"1x16, 4x4 or 16x1 matrix"
imgcodecs,initialize from a plain array
imgcodecs,initialize from an initializer list
imgcodecs,"Matx< _Tp, m, 1 >"
imgcodecs,extract the matrix column
imgcodecs,double
imgcodecs,dot product computed in double-precision arithmetics
imgcodecs,diag_type
imgcodecs,extract the matrix diagonal
imgcodecs,"Matx< _Tp, m, n >"
imgcodecs,divide two matrices element-wise
imgcodecs,_Tp
imgcodecs,dot product computed with the default precision
imgcodecs,"Matx< _Tp, m1, n1 >"
imgcodecs,extract part of the matrix
imgcodecs,"Matx< _Tp, n, m >"
imgcodecs,invert the matrix
imgcodecs,"Matx< _Tp, m, n >"
imgcodecs,multiply two matrices element-wise
imgcodecs,conversion to another data type
imgcodecs,_Tp &
imgcodecs,const _Tp &
imgcodecs,1D element access
imgcodecs,_Tp &
imgcodecs,const _Tp &
imgcodecs,element access
imgcodecs,"Matx< _Tp, m1, n1 >"
imgcodecs,change the matrix shape
imgcodecs,"Matx< _Tp, 1, n >"
imgcodecs,extract the matrix row
imgcodecs,"Matx< _Tp, n, l >"
imgcodecs,solve linear system
imgcodecs,"Vec< _Tp, n >"
imgcodecs,"Matx< _Tp, n, m >"
imgcodecs,transpose the matrix
imgcodecs,Public Member Functions
imgcodecs,Loads a classifier from a file.
imgcodecs,void
imgcodecs,Detects objects of different sizes in the input image. The detected objects are returned as a list of rectangles.
imgcodecs,void
imgcodecs,void
imgcodecs,bool
imgcodecs,Checks whether the classifier has been loaded.
imgcodecs,int
imgcodecs,Ptr< BaseCascadeClassifier::MaskGenerator >
imgcodecs,void *
imgcodecs,Size
imgcodecs,bool
imgcodecs,bool
imgcodecs,Loads a classifier from a file.
imgcodecs,bool
imgcodecs,Reads a classifier from a FileStorage node.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,bool
imgcodecs,T &
imgcodecs,const T &
imgcodecs,T *
imgcodecs,const T *
imgcodecs,optional &
imgcodecs,optional &
imgcodecs,void
imgcodecs,void
imgcodecs,T &
imgcodecs,const T &
imgcodecs,template<class U >
imgcodecs,T
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,void
imgcodecs,virtual const char *
imgcodecs,Public Member Functions
imgcodecs,the default constructor
imgcodecs,size_t
imgcodecs,Public Member Functions
imgcodecs,Constructs an empty object.
imgcodecs,bool
imgcodecs,Check if the underlying backends support reshape or not.
imgcodecs,const GMetaArgs &
imgcodecs,Vector of metadata this graph was compiled for.
imgcodecs,void
imgcodecs,Execute a computation with arbitrary number of inputs/outputs.
imgcodecs,void
imgcodecs,Execute an unary computation.
imgcodecs,void
imgcodecs,Execute an unary computation.
imgcodecs,void
imgcodecs,Execute a binary computation.
imgcodecs,void
imgcodecs,Execute an binary computation.
imgcodecs,void
imgcodecs,"Run the compiled computation, a generic version."
imgcodecs,const GMetaArgs &
imgcodecs,Vector of metadata descriptions of graph outputs.
imgcodecs,void
imgcodecs,Prepare inner kernels states for a new video-stream.
imgcodecs,void
imgcodecs,Reshape a compiled graph to support new image resolutions.
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,virtual float
imgcodecs,Weight of the smoothness term.
imgcodecs,virtual float
imgcodecs,Weight of the color constancy term.
imgcodecs,virtual float
imgcodecs,Norm value shift for robust penalizer.
imgcodecs,virtual int
imgcodecs,virtual float
imgcodecs,Weight of the gradient constancy term.
imgcodecs,virtual float
imgcodecs,Relaxation factor in SOR.
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,Weight of the smoothness term.
imgcodecs,virtual void
imgcodecs,Weight of the color constancy term.
imgcodecs,virtual void
imgcodecs,Norm value shift for robust penalizer.
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Weight of the gradient constancy term.
imgcodecs,virtual void
imgcodecs,Relaxation factor in SOR.
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::DenseOpticalFlow
imgcodecs,virtual void
imgcodecs,Calculates an optical flow.
imgcodecs,virtual void
imgcodecs,Releases all inner buffers.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Static Public Member Functions
imgcodecs,static GMetaArgs
imgcodecs,static constexpr const char *
imgcodecs,Static Public Member Functions inherited from cv::GInferList2Base
imgcodecs,static GMetaArgs
imgcodecs,static constexpr const char *
imgcodecs,Public Member Functions
imgcodecs,Ptr< detail::RotationWarper >
imgcodecs,Public Member Functions inherited from cv::WarperCreator
imgcodecs,virtual
imgcodecs,Public Member Functions
imgcodecs,The constructor.
imgcodecs,virtual
imgcodecs,void
imgcodecs,Computes an image descriptor using the set visual vocabulary.
imgcodecs,void
imgcodecs,void
imgcodecs,int
imgcodecs,"Returns an image descriptor size if the vocabulary is set. Otherwise, it returns 0."
imgcodecs,int
imgcodecs,Returns an image descriptor type.
imgcodecs,const Mat &
imgcodecs,Returns the set vocabulary.
imgcodecs,void
imgcodecs,Sets a visual vocabulary.
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Public Member Functions
imgcodecs,bool
imgcodecs,Public Member Functions
imgcodecs,bool
imgcodecs,Static Public Member Functions
imgcodecs,static GMetaArgs
imgcodecs,static constexpr const char *
imgcodecs,Public Member Functions
imgcodecs,virtual double
imgcodecs,virtual double
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual double
imgcodecs,virtual double
imgcodecs,virtual double
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual void
imgcodecs,Maximal difference between angles that treated as equal.
imgcodecs,virtual void
imgcodecs,Angle step in degrees.
imgcodecs,virtual void
imgcodecs,Angle votes threshold.
imgcodecs,virtual void
imgcodecs,Feature table levels.
imgcodecs,virtual void
imgcodecs,Maximal rotation angle to detect in degrees.
imgcodecs,virtual void
imgcodecs,Maximal scale to detect.
imgcodecs,virtual void
imgcodecs,Minimal rotation angle to detect in degrees.
imgcodecs,virtual void
imgcodecs,Minimal scale to detect.
imgcodecs,virtual void
imgcodecs,Position votes threshold.
imgcodecs,virtual void
imgcodecs,Scale step.
imgcodecs,virtual void
imgcodecs,Scale votes threshold.
imgcodecs,virtual void
imgcodecs,Angle difference in degrees between two points in feature.
imgcodecs,Public Member Functions inherited from cv::GeneralizedHough
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,find template on image
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual void
imgcodecs,Canny high threshold.
imgcodecs,virtual void
imgcodecs,Canny low threshold.
imgcodecs,virtual void
imgcodecs,Inverse ratio of the accumulator resolution to the image resolution.
imgcodecs,virtual void
imgcodecs,Maximal size of inner buffers.
imgcodecs,virtual void
imgcodecs,Minimum distance between the centers of the detected objects.
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,set template to search
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,Detect MSER regions.
imgcodecs,virtual double
imgcodecs,virtual String
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual double
imgcodecs,virtual bool
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Feature2D
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual bool
imgcodecs,Return true if detector object is empty.
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual int
imgcodecs,virtual Mat
imgcodecs,virtual float
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::CalibrateCRF
imgcodecs,virtual void
imgcodecs,Recovers inverse camera response.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,Ptr< detail::RotationWarper >
imgcodecs,Public Member Functions inherited from cv::WarperCreator
imgcodecs,virtual
imgcodecs,Public Member Functions
imgcodecs,Constructs an empty cv::GArray<T>
imgcodecs,Constructs a value-initialized cv::GArray<T>
imgcodecs,Constructs a value-initialized cv::GArray<T>
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::ParallelLoopBody
imgcodecs,virtual
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,virtual CV_NODISCARD_STD Ptr< DescriptorMatcher >
imgcodecs,Clones the matcher.
imgcodecs,virtual bool
imgcodecs,Returns true if the descriptor matcher supports masking permissible matches.
imgcodecs,Public Member Functions inherited from cv::DescriptorMatcher
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Clears the train descriptor collections.
imgcodecs,virtual bool
imgcodecs,Returns true if there are no train descriptors in the both collections.
imgcodecs,const std::vector< Mat > &
imgcodecs,Returns a constant link to the train descriptor collection trainDescCollection .
imgcodecs,void
imgcodecs,Finds the k best matches for each descriptor from a query set.
imgcodecs,void
imgcodecs,void
imgcodecs,Finds the best match for each descriptor from a query set.
imgcodecs,void
imgcodecs,void
imgcodecs,"For each query descriptor, finds the training descriptors not farther than the specified distance."
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Trains a descriptor matcher.
imgcodecs,void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,void
imgcodecs,void
imgcodecs,Static Public Member Functions
imgcodecs,static GMetaArgs
imgcodecs,static constexpr const char *
imgcodecs,Static Public Member Functions inherited from cv::GInferListBase
imgcodecs,static GMetaArgs
imgcodecs,static constexpr const char *
imgcodecs,Public Member Functions
imgcodecs,void
imgcodecs,int
imgcodecs,Node< OBJECT > *
imgcodecs,int
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,void *
imgcodecs,void
imgcodecs,"template<typename _Rep , typename _Period >"
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,AsyncArray &
imgcodecs,AsyncArray &
imgcodecs,void
imgcodecs,bool
imgcodecs,"template<typename _Rep , typename _Period >"
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,Public Member Functions
imgcodecs,MatStep &
imgcodecs,const size_t &
imgcodecs,size_t &
imgcodecs,Public Member Functions
imgcodecs,std::vector< cv::gapi::GBackend >
imgcodecs,Lists all backends which are included into package.
imgcodecs,std::vector< std::string >
imgcodecs,Returns vector of kernel ids included in the package.
imgcodecs,const std::vector< GTransform > &
imgcodecs,Returns vector of transformations included in the package.
imgcodecs,template<typename KImpl >
imgcodecs,void
imgcodecs,Put a new kernel implementation or a new transformation KImpl into the package.
imgcodecs,void
imgcodecs,Adds a new kernel based on it's backend and id into the kernel package.
imgcodecs,void
imgcodecs,template<typename KImpl >
imgcodecs,bool
imgcodecs,Test if a particular kernel implementation KImpl is included in this kernel package.
imgcodecs,template<typename KAPI >
imgcodecs,bool
imgcodecs,template<typename KAPI >
imgcodecs,cv::gapi::GBackend
imgcodecs,template<typename KAPI >
imgcodecs,void
imgcodecs,Remove all kernels implementing the given API from the package.
imgcodecs,void
imgcodecs,Remove all kernels associated with the given backend from the package.
imgcodecs,GAPI_WRAP std::size_t
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,Returns the initial step that will be used in downhill simplex algorithm.
imgcodecs,virtual void
imgcodecs,Sets the initial step that will be used in downhill simplex algorithm.
imgcodecs,Public Member Functions inherited from cv::MinProblemSolver
imgcodecs,virtual Ptr< Function >
imgcodecs,Getter for the optimized function.
imgcodecs,virtual TermCriteria
imgcodecs,Getter for the previously set terminal criteria for this algorithm.
imgcodecs,virtual double
imgcodecs,actually runs the algorithm and performs the minimization.
imgcodecs,virtual void
imgcodecs,Setter for the optimized function.
imgcodecs,virtual void
imgcodecs,Set terminal criteria for solver.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,Public Member Functions
imgcodecs,The constructor.
imgcodecs,virtual
imgcodecs,virtual Mat
imgcodecs,virtual Mat
imgcodecs,Clusters train descriptors.
imgcodecs,Public Member Functions inherited from cv::BOWTrainer
imgcodecs,virtual
imgcodecs,void
imgcodecs,Adds descriptors to a training set.
imgcodecs,virtual void
imgcodecs,int
imgcodecs,Returns the count of all descriptors stored in the training set.
imgcodecs,const std::vector< Mat > &
imgcodecs,Returns a training set of descriptors.
imgcodecs,Public Member Functions
imgcodecs,size_t
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,virtual size_t
imgcodecs,virtual size_t
imgcodecs,virtual void
imgcodecs,Public Member Functions
imgcodecs,Constructs integer scalar.
imgcodecs,Constructs string scalar.
imgcodecs,Constructs floating point scalar.
imgcodecs,Constructs integer scalar.
imgcodecs,Constructs integer scalar.
imgcodecs,Constructs integer scalar.
imgcodecs,template<typename T >
imgcodecs,T
imgcodecs,Tries to convert array element with specified index to requested type and returns its.
imgcodecs,int
imgcodecs,double
imgcodecs,String
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,DictValue &
imgcodecs,int
imgcodecs,Public Member Functions
imgcodecs,create from eight same type numbers.
imgcodecs,create from a double or float vector.
imgcodecs,DualQuat< _Tp >
imgcodecs,return the conjugate of a dual quaternion.
imgcodecs,_Tp
imgcodecs,return the dot product of two dual quaternion.
imgcodecs,DualQuat< _Tp >
imgcodecs,return the value of exponential function value
imgcodecs,Quat< _Tp >
imgcodecs,Quat< _Tp >
imgcodecs,Quat< _Tp >
imgcodecs,return the rotation in quaternion form.
imgcodecs,"Vec< _Tp, 3 >"
imgcodecs,DualQuat< _Tp >
imgcodecs,DualQuat< _Tp >
imgcodecs,return the value of logarithm function value
imgcodecs,DualQuat< _Tp >
imgcodecs,DualQuat< _Tp >
imgcodecs,return a normalized dual quaternion. A dual quaternion can be expressed as
imgcodecs,DualQuat< _Tp >
imgcodecs,Multiplication operator of two dual quaternions q and p. Multiplies values on either side of the operator.
imgcodecs,DualQuat< _Tp >
imgcodecs,Multiplication assignment operator of a quaternions and a scalar. It multiplies right operand with the left operand and assign the result to left operand.
imgcodecs,DualQuat< _Tp > &
imgcodecs,Multiplication assignment operator of two quaternions. It multiplies right operand with the left operand and assign the result to left operand.
imgcodecs,DualQuat< _Tp >
imgcodecs,DualQuat< _Tp > &
imgcodecs,Addition assignment operator of two dual quaternions p and q. It adds right operand to the left operand and assign the result to left operand.
imgcodecs,DualQuat< _Tp >
imgcodecs,DualQuat< _Tp >
imgcodecs,DualQuat< _Tp > &
imgcodecs,Subtraction assignment operator of two dual quaternions p and q. It subtracts right operand from the left operand and assign the result to left operand.
imgcodecs,DualQuat< _Tp >
imgcodecs,Division operator of a dual quaternions and a scalar. It divides left operand with the right operand and assign the result to left operand.
imgcodecs,DualQuat< _Tp >
imgcodecs,Division operator of two dual quaternions p and q. Divides left hand operand by right hand operand.
imgcodecs,Quat< _Tp > &
imgcodecs,Division assignment operator of a dual quaternions and a scalar. It divides left operand with the right operand and assign the result to left operand.
imgcodecs,DualQuat< _Tp > &
imgcodecs,Division assignment operator of two dual quaternions p and q; It divides left operand with the right operand and assign the result to left operand.
imgcodecs,bool
imgcodecs,DualQuat< _Tp >
imgcodecs,DualQuat< _Tp >
imgcodecs,Affine3< _Tp >
imgcodecs,Transform this dual quaternion to a instance of Affine3.
imgcodecs,"Matx< _Tp, 4, 4 >"
imgcodecs,"Vec< _Tp, 8 >"
imgcodecs,Transform this dual quaternion to a vector.
imgcodecs,Public Member Functions
imgcodecs,template<typename T >
imgcodecs,const T &
imgcodecs,const cv::Mat &
imgcodecs,const cv::Scalar &
imgcodecs,cv::MediaFrame &
imgcodecs,cv::Mat &
imgcodecs,template<typename T >
imgcodecs,T &
imgcodecs,cv::Scalar &
imgcodecs,template<typename T >
imgcodecs,std::vector< T > &
imgcodecs,GArg
imgcodecs,Public Member Functions
imgcodecs,Ptr< detail::RotationWarper >
imgcodecs,Public Member Functions inherited from cv::WarperCreator
imgcodecs,virtual
imgcodecs,Public Member Functions
imgcodecs,template<typename T >
imgcodecs,bool
imgcodecs,GOrigin &
imgcodecs,const GOrigin &
imgcodecs,Public Member Functions
imgcodecs,bool
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,Aligns images.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,virtual const char *
imgcodecs,virtual void
imgcodecs,Public Member Functions
imgcodecs,"template<typename T , typename std::enable_if<!detail::is_compile_arg< T >::value, int >::type = 0>"
imgcodecs,template<typename T >
imgcodecs,T &
imgcodecs,template<typename T >
imgcodecs,const T &
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,void
imgcodecs,Adds descriptors to a training set.
imgcodecs,virtual void
imgcodecs,virtual Mat
imgcodecs,virtual Mat
imgcodecs,Clusters train descriptors.
imgcodecs,int
imgcodecs,Returns the count of all descriptors stored in the training set.
imgcodecs,const std::vector< Mat > &
imgcodecs,Returns a training set of descriptors.
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,virtual String
imgcodecs,Ptr< QuantizedPyramid >
imgcodecs,Form a quantized image pyramid from a source image.
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions
imgcodecs,Ptr< detail::RotationWarper >
imgcodecs,Public Member Functions inherited from cv::WarperCreator
imgcodecs,virtual
imgcodecs,Public Member Functions
imgcodecs,Rect
imgcodecs,Builds the projection maps according to the given camera data.
imgcodecs,float
imgcodecs,void
imgcodecs,Point
imgcodecs,Projects the image.
imgcodecs,void
imgcodecs,Projects the image backward.
imgcodecs,Point2f
imgcodecs,Projects the image point.
imgcodecs,Point2f
imgcodecs,Projects the image point backward.
imgcodecs,Rect
imgcodecs,Static Public Member Functions
imgcodecs,static GMetaArgs
imgcodecs,static constexpr const char *
imgcodecs,Static Public Member Functions inherited from cv::GInferBase
imgcodecs,static GMetaArgs
imgcodecs,static constexpr const char *
imgcodecs,Public Member Functions
imgcodecs,the default constructor
imgcodecs,the copy constructor
imgcodecs,the full constructor setting the iterator to the first sparse matrix element
imgcodecs,the full constructor setting the iterator to the specified sparse matrix element
imgcodecs,SparseMat::Node *
imgcodecs,SparseMatIterator &
imgcodecs,moves iterator to the next element
imgcodecs,SparseMatIterator
imgcodecs,moves iterator to the next element
imgcodecs,SparseMatIterator &
imgcodecs,the assignment operator
imgcodecs,template<typename _Tp >
imgcodecs,_Tp &
imgcodecs,returns read-write reference to the current sparse matrix element
imgcodecs,Public Member Functions inherited from cv::SparseMatConstIterator
imgcodecs,the default constructor
imgcodecs,the full constructor setting the iterator to the first sparse matrix element
imgcodecs,the copy constructor
imgcodecs,const SparseMat::Node *
imgcodecs,returns the current node of the sparse matrix. it.node->idx is the current element index
imgcodecs,SparseMatConstIterator &
imgcodecs,moves iterator to the next element
imgcodecs,SparseMatConstIterator
imgcodecs,moves iterator to the next element
imgcodecs,SparseMatConstIterator &
imgcodecs,moves iterator to the previous element
imgcodecs,SparseMatConstIterator
imgcodecs,moves iterator to the previous element
imgcodecs,SparseMatConstIterator &
imgcodecs,the assignment operator
imgcodecs,void
imgcodecs,moves iterator to the element after the last element
imgcodecs,template<typename _Tp >
imgcodecs,const _Tp &
imgcodecs,template method returning the current matrix element
imgcodecs,Public Member Functions
imgcodecs,the default constructor
imgcodecs,the full constructor taking arbitrary number of n-dim matrices
imgcodecs,the full constructor taking arbitrary number of n-dim matrices
imgcodecs,void
imgcodecs,the separate iterator initialization method
imgcodecs,NAryMatIterator &
imgcodecs,proceeds to the next plane of every iterated matrix
imgcodecs,NAryMatIterator
imgcodecs,Public Member Functions
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,Merges images.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,Public Member Functions
imgcodecs,void
imgcodecs,double
imgcodecs,frame_list &
imgcodecs,size_t
imgcodecs,unsigned int
imgcodecs,unsigned int
imgcodecs,void
imgcodecs,void
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,std::vector< char >
imgcodecs,Public Member Functions
imgcodecs,"the constructor, created by ""matrix << firstValue"" operator, where matrix is cv::Mat"
imgcodecs,another form of conversion operator
imgcodecs,template<typename T2 >
imgcodecs,MatCommaInitializer_< _Tp > &
imgcodecs,the operator that takes the next value and put it to the matrix
imgcodecs,Public Member Functions
imgcodecs,template<typename T >
imgcodecs,template<typename T >
imgcodecs,template<typename T >
imgcodecs,cv::GArrayDesc
imgcodecs,cv::detail::OpaqueKind
imgcodecs,template<typename T >
imgcodecs,bool
imgcodecs,void
imgcodecs,const void *
imgcodecs,template<typename T >
imgcodecs,void
imgcodecs,template<typename T >
imgcodecs,const std::vector< T > &
imgcodecs,std::size_t
imgcodecs,template<typename T >
imgcodecs,void
imgcodecs,template<typename T >
imgcodecs,std::vector< T > &
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,Equalizes the histogram of a grayscale image using Contrast Limited Adaptive Histogram Equalization.
imgcodecs,virtual void
imgcodecs,virtual double
imgcodecs,Returns threshold value for contrast limiting.
imgcodecs,virtual Size
imgcodecs,Returns Size defines the number of tiles in row and column.
imgcodecs,virtual void
imgcodecs,Sets threshold for contrast limiting.
imgcodecs,virtual void
imgcodecs,Sets size of grid for histogram equalization. Input image will be divided into equally sized rectangular tiles.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,virtual Mat
imgcodecs,virtual void
imgcodecs,Public Member Functions
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual TermCriteria
imgcodecs,virtual Size
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::SparseOpticalFlow
imgcodecs,virtual void
imgcodecs,Calculates a sparse optical flow.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,size_t
imgcodecs,size_t
imgcodecs,void
imgcodecs,void
imgcodecs,int
imgcodecs,int
imgcodecs,int
imgcodecs,size_t
imgcodecs,size_t
imgcodecs,int
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,virtual Ptr< detail::RotationWarper >
imgcodecs,Public Member Functions
imgcodecs,Default constructor.
imgcodecs,Construct from float.
imgcodecs,Copy constructor.
imgcodecs,Construct from integer.
imgcodecs,int
imgcodecs,Get 0-based exponent.
imgcodecs,softfloat
imgcodecs,Get a fraction part.
imgcodecs,bool
imgcodecs,Get sign bit.
imgcodecs,bool
imgcodecs,Inf state indicator.
imgcodecs,bool
imgcodecs,NaN state indicator.
imgcodecs,bool
imgcodecs,Subnormal number indicator.
imgcodecs,Type casts
imgcodecs,bool
imgcodecs,softfloat
imgcodecs,Remainder operator.
imgcodecs,softfloat &
imgcodecs,softfloat
imgcodecs,softfloat &
imgcodecs,softfloat
imgcodecs,Basic arithmetics.
imgcodecs,softfloat &
imgcodecs,softfloat
imgcodecs,softfloat
imgcodecs,softfloat &
imgcodecs,softfloat
imgcodecs,softfloat &
imgcodecs,bool
imgcodecs,bool
imgcodecs,softfloat &
imgcodecs,Assign constructor.
imgcodecs,bool
imgcodecs,Comparison operations.
imgcodecs,bool
imgcodecs,bool
imgcodecs,softfloat
imgcodecs,Construct a copy with new 0-based exponent.
imgcodecs,softfloat
imgcodecs,Construct a copy with provided significand.
imgcodecs,softfloat
imgcodecs,Construct a copy with new sign bit.
imgcodecs,Public Member Functions
imgcodecs,The constructors.
imgcodecs,bool
imgcodecs,FileNode
imgcodecs,returns the currently observed element
imgcodecs,FileNodeIterator &
imgcodecs,moves iterator to the next node
imgcodecs,FileNodeIterator
imgcodecs,moves iterator to the next node
imgcodecs,FileNodeIterator &
imgcodecs,FileNodeIterator &
imgcodecs,FileNodeIterator &
imgcodecs,Reads node elements to the buffer with the specified format.
imgcodecs,size_t
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Merges images.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual double
imgcodecs,virtual String
imgcodecs,virtual double
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Feature2D
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual bool
imgcodecs,Return true if detector object is empty.
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,Computes a foreground mask.
imgcodecs,virtual double
imgcodecs,"Returns the ""background ratio"" parameter of the algorithm."
imgcodecs,virtual double
imgcodecs,Returns the complexity reduction threshold.
imgcodecs,virtual bool
imgcodecs,Returns the shadow detection flag.
imgcodecs,virtual int
imgcodecs,Returns the number of last frames that affect the background model.
imgcodecs,virtual int
imgcodecs,Returns the number of gaussian components in the background model.
imgcodecs,virtual double
imgcodecs,Returns the shadow threshold.
imgcodecs,virtual int
imgcodecs,Returns the shadow value.
imgcodecs,virtual double
imgcodecs,Returns the initial variance of each gaussian component.
imgcodecs,virtual double
imgcodecs,virtual double
imgcodecs,virtual double
imgcodecs,Returns the variance threshold for the pixel-model match.
imgcodecs,virtual double
imgcodecs,Returns the variance threshold for the pixel-model match used for new mixture component generation.
imgcodecs,virtual void
imgcodecs,"Sets the ""background ratio"" parameter of the algorithm."
imgcodecs,virtual void
imgcodecs,Sets the complexity reduction threshold.
imgcodecs,virtual void
imgcodecs,Enables or disables shadow detection.
imgcodecs,virtual void
imgcodecs,Sets the number of last frames that affect the background model.
imgcodecs,virtual void
imgcodecs,Sets the number of gaussian components in the background model.
imgcodecs,virtual void
imgcodecs,Sets the shadow threshold.
imgcodecs,virtual void
imgcodecs,Sets the shadow value.
imgcodecs,virtual void
imgcodecs,Sets the initial variance of each gaussian component.
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Sets the variance threshold for the pixel-model match.
imgcodecs,virtual void
imgcodecs,Sets the variance threshold for the pixel-model match used for new mixture component generation.
imgcodecs,Public Member Functions inherited from cv::BackgroundSubtractor
imgcodecs,virtual void
imgcodecs,Computes a background image.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,std::string
imgcodecs,bool
imgcodecs,bool
imgcodecs,Detects graphical code in image and returns the quadrangle containing the code.
imgcodecs,std::string
imgcodecs,Both detects and decodes graphical code.
imgcodecs,bool
imgcodecs,Both detects and decodes graphical codes.
imgcodecs,bool
imgcodecs,Detects graphical codes in image and returns the vector of the quadrangles containing the codes.
imgcodecs,GraphicalCodeDetector &
imgcodecs,GraphicalCodeDetector &
imgcodecs,Public Member Functions
imgcodecs,template<typename T >
imgcodecs,const T &
imgcodecs,const cv::UMat &
imgcodecs,const cv::Scalar &
imgcodecs,cv::UMat &
imgcodecs,template<typename T >
imgcodecs,T &
imgcodecs,cv::Scalar &
imgcodecs,template<typename T >
imgcodecs,std::vector< T > &
imgcodecs,Public Member Functions
imgcodecs,virtual Point
imgcodecs,"Calculates shift between two images, i. e. how to shift the second image to correspond it with the first."
imgcodecs,virtual void
imgcodecs,Computes median threshold and exclude bitmaps of given image.
imgcodecs,virtual bool
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,"Short version of process, that doesn't take extra arguments."
imgcodecs,virtual void
imgcodecs,Aligns images.
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,"Helper function, that shift Mat filling new regions with zeros."
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,find template on image
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual void
imgcodecs,Canny high threshold.
imgcodecs,virtual void
imgcodecs,Canny low threshold.
imgcodecs,virtual void
imgcodecs,Inverse ratio of the accumulator resolution to the image resolution.
imgcodecs,virtual void
imgcodecs,Maximal size of inner buffers.
imgcodecs,virtual void
imgcodecs,Minimum distance between the centers of the detected objects.
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,set template to search
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,bool
imgcodecs,Public Member Functions
imgcodecs,virtual float
imgcodecs,virtual float
imgcodecs,virtual float
imgcodecs,virtual void
imgcodecs,"Short version of process, that doesn't take extra arguments."
imgcodecs,virtual void
imgcodecs,Merges images.
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,"template<typename T , typename std::enable_if<!detail::is_garg< T >::value, int >::type = 0>"
imgcodecs,"template<typename T , typename std::enable_if<!detail::is_garg< T >::value, int >::type = 0>"
imgcodecs,template<typename T >
imgcodecs,T &
imgcodecs,template<typename T >
imgcodecs,const T &
imgcodecs,template<typename T >
imgcodecs,T &
imgcodecs,template<typename T >
imgcodecs,const T &
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,Computes a foreground mask.
imgcodecs,virtual void
imgcodecs,Computes a background image.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,Ptr< detail::RotationWarper >
imgcodecs,Public Member Functions inherited from cv::WarperCreator
imgcodecs,virtual
imgcodecs,Public Member Functions
imgcodecs,the default constructor
imgcodecs,the full constructor
imgcodecs,Public Member Functions
imgcodecs,Class constructor.
imgcodecs,Class destructor.
imgcodecs,template<typename T >
imgcodecs,void
imgcodecs,Bind a pointer to local area.
imgcodecs,void
imgcodecs,Allocate memory and initialize all bound pointers.
imgcodecs,void
imgcodecs,Release all memory and unbind all pointers.
imgcodecs,void
imgcodecs,Fill all buffers with zeroes.
imgcodecs,template<typename T >
imgcodecs,void
imgcodecs,Fill one of buffers with zeroes.
imgcodecs,Public Member Functions
imgcodecs,virtual float
imgcodecs,virtual void
imgcodecs,Tonemaps image.
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual int
imgcodecs,virtual float
imgcodecs,virtual Ptr< HistogramCostExtractor >
imgcodecs,virtual float
imgcodecs,virtual void
imgcodecs,virtual float
imgcodecs,virtual int
imgcodecs,virtual float
imgcodecs,virtual int
imgcodecs,virtual bool
imgcodecs,virtual float
imgcodecs,virtual float
imgcodecs,virtual Ptr< ShapeTransformer >
imgcodecs,virtual void
imgcodecs,Establish the number of angular bins for the Shape Context Descriptor used in the shape matching pipeline.
imgcodecs,virtual void
imgcodecs,"Set the weight of the Bending Energy in the final value of the shape distance. The bending energy definition depends on what transformation is being used to align the shapes. The final value of the shape distance is a user-defined linear combination of the shape context distance, an image appearance distance, and a bending energy."
imgcodecs,virtual void
imgcodecs,Set the algorithm used for building the shape context descriptor cost matrix.
imgcodecs,virtual void
imgcodecs,"Set the weight of the Image Appearance cost in the final value of the shape distance. The image appearance cost is defined as the sum of squared brightness differences in Gaussian windows around corresponding image points. The final value of the shape distance is a user-defined linear combination of the shape context distance, an image appearance distance, and a bending energy. If this value is set to a number different from 0, is mandatory to set the images that correspond to each shape."
imgcodecs,virtual void
imgcodecs,Set the images that correspond to each shape. This images are used in the calculation of the Image Appearance cost.
imgcodecs,virtual void
imgcodecs,Set the inner radius of the shape context descriptor.
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Set the outer radius of the shape context descriptor.
imgcodecs,virtual void
imgcodecs,Establish the number of radial bins for the Shape Context Descriptor used in the shape matching pipeline.
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,"Set the weight of the shape context distance in the final value of the shape distance. The shape context distance between two shapes is defined as the symmetric sum of shape context matching costs over best matching points. The final value of the shape distance is a user-defined linear combination of the shape context distance, an image appearance distance, and a bending energy."
imgcodecs,virtual void
imgcodecs,Set the value of the standard deviation for the Gaussian window for the image appearance cost.
imgcodecs,virtual void
imgcodecs,Set the algorithm used for aligning the shapes.
imgcodecs,Public Member Functions inherited from cv::ShapeDistanceExtractor
imgcodecs,virtual float
imgcodecs,Compute the shape distance between two shapes defined by its contours.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,Default constructor.
imgcodecs,Opens a video file or a capturing device or an IP video stream for video capturing with API Preference and parameters.
imgcodecs,Opens a video file or a capturing device or an IP video stream for video capturing with API Preference.
imgcodecs,Opens a camera for video capturing with API Preference and parameters.
imgcodecs,Opens a camera for video capturing.
imgcodecs,virtual
imgcodecs,Default destructor.
imgcodecs,virtual double
imgcodecs,Returns the specified VideoCapture property.
imgcodecs,String
imgcodecs,Returns used backend API name.
imgcodecs,bool
imgcodecs,query if exception mode is active
imgcodecs,virtual bool
imgcodecs,Grabs the next frame from video file or capturing device.
imgcodecs,virtual bool
imgcodecs,Returns true if video capturing has been initialized already.
imgcodecs,virtual bool
imgcodecs,Opens a video file or a capturing device or an IP video stream for video capturing with API Preference and parameters.
imgcodecs,virtual bool
imgcodecs,Opens a video file or a capturing device or an IP video stream for video capturing.
imgcodecs,virtual bool
imgcodecs,Opens a camera for video capturing with API Preference and parameters.
imgcodecs,virtual bool
imgcodecs,Opens a camera for video capturing.
imgcodecs,virtual VideoCapture &
imgcodecs,Stream operator to read the next video frame.
imgcodecs,virtual VideoCapture &
imgcodecs,virtual bool
imgcodecs,"Grabs, decodes and returns the next video frame."
imgcodecs,virtual void
imgcodecs,Closes video file or capturing device.
imgcodecs,virtual bool
imgcodecs,Decodes and returns the grabbed video frame.
imgcodecs,virtual bool
imgcodecs,Sets a property in the VideoCapture.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,the default constructor
imgcodecs,double
imgcodecs,returns average time in milliseconds
imgcodecs,double
imgcodecs,returns average time in seconds
imgcodecs,int64
imgcodecs,returns internal counter value.
imgcodecs,double
imgcodecs,double
imgcodecs,returns passed time of the last iteration in microseconds.
imgcodecs,double
imgcodecs,returns passed time of the last iteration in milliseconds.
imgcodecs,double
imgcodecs,returns passed time of the last iteration in seconds.
imgcodecs,int64
imgcodecs,returns counted ticks of the last iteration.
imgcodecs,double
imgcodecs,returns passed time in microseconds.
imgcodecs,double
imgcodecs,returns passed time in milliseconds.
imgcodecs,double
imgcodecs,returns passed time in seconds.
imgcodecs,int64
imgcodecs,returns counted ticks.
imgcodecs,void
imgcodecs,resets internal values.
imgcodecs,void
imgcodecs,starts counting ticks.
imgcodecs,void
imgcodecs,stops counting ticks.
imgcodecs,Public Member Functions
imgcodecs,GAPI_WRAP
imgcodecs,Constructs an empty GFrame.
imgcodecs,Public Member Functions
imgcodecs,GAPI_WRAP
imgcodecs,Constructs an empty GScalar.
imgcodecs,GAPI_WRAP
imgcodecs,Constructs a value-initialized GScalar.
imgcodecs,Constructs a value-initialized GScalar.
imgcodecs,Constructs a value-initialized GScalar.
imgcodecs,Public Member Functions
imgcodecs,void
imgcodecs,Release associated thread data.
imgcodecs,T *
imgcodecs,Get data associated with key.
imgcodecs,T &
imgcodecs,Get data associated with key.
imgcodecs,Public Member Functions
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Feature2D
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual bool
imgcodecs,Return true if detector object is empty.
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual float
imgcodecs,virtual bool
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::CalibrateCRF
imgcodecs,virtual void
imgcodecs,Recovers inverse camera response.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,bool
imgcodecs,int
imgcodecs,Public Member Functions
imgcodecs,from four numbers.
imgcodecs,From Vec4d or Vec4f.
imgcodecs,Quat< _Tp >
imgcodecs,"return arccos value of this quaternion, arccos could be calculated as:"
imgcodecs,Quat< _Tp >
imgcodecs,"return arccosh value of this quaternion, arccosh could be calculated as:"
imgcodecs,Quat< _Tp >
imgcodecs,"return arcsin value of this quaternion, arcsin could be calculated as:"
imgcodecs,Quat< _Tp >
imgcodecs,"return arcsinh value of this quaternion, arcsinh could be calculated as:"
imgcodecs,void
imgcodecs,to throw an error if this quaternion is not a unit quaternion.
imgcodecs,_Tp
imgcodecs,a way to get element.
imgcodecs,Quat< _Tp >
imgcodecs,"return arctan value of this quaternion, arctan could be calculated as:"
imgcodecs,Quat< _Tp >
imgcodecs,"return arctanh value of this quaternion, arctanh could be calculated as:"
imgcodecs,Quat< _Tp >
imgcodecs,return the conjugate of this quaternion.
imgcodecs,Quat< _Tp >
imgcodecs,"return cos value of this quaternion, cos could be calculated as:"
imgcodecs,Quat< _Tp >
imgcodecs,"return cosh value of this quaternion, cosh could be calculated as:"
imgcodecs,Quat< _Tp >
imgcodecs,_Tp
imgcodecs,Quat< _Tp >
imgcodecs,return the value of exponential value.
imgcodecs,_Tp
imgcodecs,"get the angle of quaternion, it returns the rotation angle."
imgcodecs,"Vec< _Tp, 3 >"
imgcodecs,"get the axis of quaternion, it returns a vector of length 3."
imgcodecs,Quat< _Tp >
imgcodecs,bool
imgcodecs,return true if this quaternion is a unit quaternion.
imgcodecs,Quat< _Tp >
imgcodecs,return the value of logarithm function.
imgcodecs,_Tp
imgcodecs,return the norm of quaternion.
imgcodecs,Quat< _Tp >
imgcodecs,Quat< _Tp >
imgcodecs,Multiplication operator of two quaternions q and p. Multiplies values on either side of the operator.
imgcodecs,Quat< _Tp > &
imgcodecs,Multiplication assignment operator of a quaternions and a scalar. It multiplies right operand with the left operand and assign the result to left operand.
imgcodecs,Quat< _Tp > &
imgcodecs,Multiplication assignment operator of two quaternions q and p. It multiplies right operand with the left operand and assign the result to left operand.
imgcodecs,Quat< _Tp >
imgcodecs,Quat< _Tp > &
imgcodecs,Addition assignment operator of two quaternions p and q. It adds right operand to the left operand and assign the result to left operand.
imgcodecs,Quat< _Tp >
imgcodecs,Quat< _Tp >
imgcodecs,Quat< _Tp > &
imgcodecs,Subtraction assignment operator of two quaternions p and q. It subtracts right operand from the left operand and assign the result to left operand.
imgcodecs,Quat< _Tp >
imgcodecs,Division operator of a quaternions and a scalar. It divides left operand with the right operand and assign the result to left operand.
imgcodecs,Quat< _Tp >
imgcodecs,Division operator of two quaternions p and q. Divides left hand operand by right hand operand.
imgcodecs,Quat< _Tp > &
imgcodecs,Division assignment operator of a quaternions and a scalar. It divides left operand with the right operand and assign the result to left operand.
imgcodecs,Quat< _Tp > &
imgcodecs,Division assignment operator of two quaternions p and q; It divides left operand with the right operand and assign the result to left operand.
imgcodecs,bool
imgcodecs,_Tp &
imgcodecs,const _Tp &
imgcodecs,Quat< _Tp >
imgcodecs,Quat< _Tp >
imgcodecs,Quat< _Tp >
imgcodecs,"return sin value of this quaternion, sin could be calculated as:"
imgcodecs,Quat< _Tp >
imgcodecs,Quat< _Tp >
imgcodecs,Quat< _Tp >
imgcodecs,"return tan value of this quaternion, tan could be calculated as:"
imgcodecs,Quat< _Tp >
imgcodecs,"return tanh value of this quaternion, tanh could be calculated as:"
imgcodecs,"Vec< _Tp, 3 >"
imgcodecs,Transform a quaternion q to Euler angles.
imgcodecs,"Matx< _Tp, 3, 3 >"
imgcodecs,transform a quaternion to a 3x3 rotation matrix.
imgcodecs,"Matx< _Tp, 4, 4 >"
imgcodecs,transform a quaternion to a 4x4 rotation matrix.
imgcodecs,"Vec< _Tp, 3 >"
imgcodecs,transform this quaternion to a Rotation vector.
imgcodecs,"Vec< _Tp, 4 >"
imgcodecs,"transform the this quaternion to a Vec<T, 4>."
imgcodecs,Public Member Functions
imgcodecs,virtual float
imgcodecs,virtual float
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Tonemap
imgcodecs,virtual float
imgcodecs,virtual void
imgcodecs,Tonemaps image.
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Additional Inherited Members
imgcodecs,Public Member Functions inherited from cv::HistogramCostExtractor
imgcodecs,virtual void
imgcodecs,virtual float
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Static Public Member Functions inherited from cv::Algorithm
imgcodecs,template<typename _Tp >
imgcodecs,static Ptr< _Tp >
imgcodecs,Loads algorithm from the file.
imgcodecs,template<typename _Tp >
imgcodecs,static Ptr< _Tp >
imgcodecs,Loads algorithm from a String.
imgcodecs,template<typename _Tp >
imgcodecs,static Ptr< _Tp >
imgcodecs,Reads algorithm from the file node.
imgcodecs,Protected Member Functions inherited from cv::Algorithm
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,"template<typename T , typename = util::are_different_t<OpaqueRef, T>>"
imgcodecs,cv::GOpaqueDesc
imgcodecs,cv::detail::OpaqueKind
imgcodecs,void
imgcodecs,OpaqueRef &
imgcodecs,const void *
imgcodecs,template<typename T >
imgcodecs,void
imgcodecs,template<typename T >
imgcodecs,const T &
imgcodecs,template<typename T >
imgcodecs,void
imgcodecs,template<typename T >
imgcodecs,T &
imgcodecs,Public Member Functions
imgcodecs,default constructor
imgcodecs,Complex
imgcodecs,conjugation
imgcodecs,template<typename T2 >
imgcodecs,conversion to another data type
imgcodecs,Public Member Functions
imgcodecs,template<typename T >
imgcodecs,bool
imgcodecs,GOrigin &
imgcodecs,const GOrigin &
imgcodecs,Public Member Functions
imgcodecs,unsigned
imgcodecs,unsigned
imgcodecs,unsigned
imgcodecs,void
imgcodecs,double
imgcodecs,"returns uniformly distributed double-precision floating-point random number from [a,b) range"
imgcodecs,float
imgcodecs,"returns uniformly distributed floating-point random number from [a,b) range"
imgcodecs,int
imgcodecs,"returns uniformly distributed integer random number from [a,b) range"
imgcodecs,Public Member Functions
imgcodecs,Public Member Functions
imgcodecs,void
imgcodecs,Mat
imgcodecs,Mat
imgcodecs,void
imgcodecs,void
imgcodecs,Mat
imgcodecs,Mat
imgcodecs,void
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,Finds lines in the input image.
imgcodecs,virtual void
imgcodecs,Draws the line segments on a given image.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual bool
imgcodecs,Returns the shadow detection flag.
imgcodecs,virtual double
imgcodecs,Returns the threshold on the squared distance between the pixel and the sample.
imgcodecs,virtual int
imgcodecs,Returns the number of last frames that affect the background model.
imgcodecs,virtual int
imgcodecs,"Returns the number of neighbours, the k in the kNN."
imgcodecs,virtual int
imgcodecs,Returns the number of data samples in the background model.
imgcodecs,virtual double
imgcodecs,Returns the shadow threshold.
imgcodecs,virtual int
imgcodecs,Returns the shadow value.
imgcodecs,virtual void
imgcodecs,Enables or disables shadow detection.
imgcodecs,virtual void
imgcodecs,Sets the threshold on the squared distance.
imgcodecs,virtual void
imgcodecs,Sets the number of last frames that affect the background model.
imgcodecs,virtual void
imgcodecs,Sets the k in the kNN. How many nearest neighbours need to match.
imgcodecs,virtual void
imgcodecs,Sets the number of data samples in the background model.
imgcodecs,virtual void
imgcodecs,Sets the shadow threshold.
imgcodecs,virtual void
imgcodecs,Sets the shadow value.
imgcodecs,Public Member Functions inherited from cv::BackgroundSubtractor
imgcodecs,virtual void
imgcodecs,Computes a foreground mask.
imgcodecs,virtual void
imgcodecs,Computes a background image.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,default constructor
imgcodecs,Rect
imgcodecs,returns the minimal up-right integer rectangle containing the rotated rectangle
imgcodecs,Rect2f
imgcodecs,void
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,GKernel &
imgcodecs,cv::util::any &
imgcodecs,template<typename... Ts>
imgcodecs,GCall &
imgcodecs,Priv &
imgcodecs,const Priv &
imgcodecs,void
imgcodecs,GMat
imgcodecs,template<class T >
imgcodecs,GArray< T >
imgcodecs,GFrame
imgcodecs,template<class T >
imgcodecs,GOpaque< T >
imgcodecs,GMatP
imgcodecs,GScalar
imgcodecs,Public Member Functions
imgcodecs,virtual double
imgcodecs,virtual void
imgcodecs,Set the regularization parameter for relaxing the exact interpolation requirements of the TPS algorithm.
imgcodecs,Public Member Functions inherited from cv::ShapeTransformer
imgcodecs,virtual float
imgcodecs,"Apply a transformation, given a pre-estimated transformation parameters."
imgcodecs,virtual void
imgcodecs,"Estimate the transformation parameters of the current transformer algorithm, based on point matches."
imgcodecs,virtual void
imgcodecs,"Apply a transformation, given a pre-estimated transformation parameters, to an Image."
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,"template<typename T , typename = util::are_different_t<variant, T>>"
imgcodecs,std::size_t
imgcodecs,variant &
imgcodecs,template<typename... Ts>
imgcodecs,variant< Ts... > &
imgcodecs,"template<typename T , typename = util::are_different_t<variant, T>>"
imgcodecs,variant &
imgcodecs,"template<typename T , typename >"
imgcodecs,variant< Ts... > &
imgcodecs,variant &
imgcodecs,template<typename... Ts>
imgcodecs,variant< Ts... > &
imgcodecs,void
imgcodecs,Static Public Member Functions
imgcodecs,static GMetaArgs
imgcodecs,static constexpr const char *
imgcodecs,Public Member Functions
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,R-Table levels.
imgcodecs,virtual void
imgcodecs,"The accumulator threshold for the template centers at the detection stage. The smaller it is, the more false positions may be detected."
imgcodecs,Public Member Functions inherited from cv::GeneralizedHough
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,find template on image
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual void
imgcodecs,Canny high threshold.
imgcodecs,virtual void
imgcodecs,Canny low threshold.
imgcodecs,virtual void
imgcodecs,Inverse ratio of the accumulator resolution to the image resolution.
imgcodecs,virtual void
imgcodecs,Maximal size of inner buffers.
imgcodecs,virtual void
imgcodecs,Minimum distance between the centers of the detected objects.
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,set template to search
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,void
imgcodecs,Release associated thread data.
imgcodecs,void
imgcodecs,std::vector< T * > &
imgcodecs,Get and detach data from all threads.
imgcodecs,void
imgcodecs,Get data from all threads.
imgcodecs,void
imgcodecs,Release associated thread data and free TLS key.
imgcodecs,Public Member Functions inherited from cv::TLSData< T >
imgcodecs,void
imgcodecs,Release associated thread data.
imgcodecs,T *
imgcodecs,Get data associated with key.
imgcodecs,T &
imgcodecs,Get data associated with key.
imgcodecs,Public Member Functions
imgcodecs,virtual bool
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::ShapeTransformer
imgcodecs,virtual float
imgcodecs,"Apply a transformation, given a pre-estimated transformation parameters."
imgcodecs,virtual void
imgcodecs,"Estimate the transformation parameters of the current transformer algorithm, based on point matches."
imgcodecs,virtual void
imgcodecs,"Apply a transformation, given a pre-estimated transformation parameters, to an Image."
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual float
imgcodecs,Compute the shape distance between two shapes defined by its contours.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,Initializes iterator object for the given line and image.
imgcodecs,void
imgcodecs,uchar *
imgcodecs,Returns pointer to the current pixel.
imgcodecs,LineIterator &
imgcodecs,Moves iterator to the next pixel on the line.
imgcodecs,LineIterator
imgcodecs,Moves iterator to the next pixel on the line.
imgcodecs,Point
imgcodecs,Returns coordinates of the current pixel.
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Clears the train descriptor collections.
imgcodecs,virtual CV_NODISCARD_STD Ptr< DescriptorMatcher >
imgcodecs,Clones the matcher.
imgcodecs,virtual bool
imgcodecs,Returns true if the descriptor matcher supports masking permissible matches.
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,Trains a descriptor matcher.
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,Public Member Functions inherited from cv::DescriptorMatcher
imgcodecs,virtual
imgcodecs,virtual bool
imgcodecs,Returns true if there are no train descriptors in the both collections.
imgcodecs,const std::vector< Mat > &
imgcodecs,Returns a constant link to the train descriptor collection trainDescCollection .
imgcodecs,void
imgcodecs,Finds the k best matches for each descriptor from a query set.
imgcodecs,void
imgcodecs,void
imgcodecs,Finds the best match for each descriptor from a query set.
imgcodecs,void
imgcodecs,void
imgcodecs,"For each query descriptor, finds the training descriptors not farther than the specified distance."
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,void
imgcodecs,void
imgcodecs,Static Public Member Functions
imgcodecs,static GMetaArgs
imgcodecs,static constexpr const char *
imgcodecs,Additional Inherited Members
imgcodecs,Public Member Functions inherited from cv::HistogramCostExtractor
imgcodecs,virtual void
imgcodecs,virtual float
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Static Public Member Functions inherited from cv::Algorithm
imgcodecs,template<typename _Tp >
imgcodecs,static Ptr< _Tp >
imgcodecs,Loads algorithm from the file.
imgcodecs,template<typename _Tp >
imgcodecs,static Ptr< _Tp >
imgcodecs,Loads algorithm from a String.
imgcodecs,template<typename _Tp >
imgcodecs,static Ptr< _Tp >
imgcodecs,Reads algorithm from the file node.
imgcodecs,Protected Member Functions inherited from cv::Algorithm
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,const Mat &
imgcodecs,Updates the predicted state from the measurement.
imgcodecs,void
imgcodecs,Re-initializes Kalman filter. The previous content is destroyed.
imgcodecs,const Mat &
imgcodecs,Computes a predicted state.
imgcodecs,Public Member Functions
imgcodecs,Default constructors.
imgcodecs,virtual
imgcodecs,Default destructor.
imgcodecs,virtual double
imgcodecs,Returns the specified VideoWriter property.
imgcodecs,String
imgcodecs,Returns used backend API name.
imgcodecs,virtual bool
imgcodecs,Returns true if video writer has been successfully initialized.
imgcodecs,bool
imgcodecs,bool
imgcodecs,bool
imgcodecs,virtual bool
imgcodecs,Initializes or reinitializes video writer.
imgcodecs,virtual VideoWriter &
imgcodecs,Stream operator to write the next video frame.
imgcodecs,virtual VideoWriter &
imgcodecs,virtual void
imgcodecs,Closes the video writer.
imgcodecs,virtual bool
imgcodecs,Sets a property in the VideoWriter.
imgcodecs,virtual void
imgcodecs,Writes the next video frame.
imgcodecs,Public Member Functions
imgcodecs,Ptr< detail::RotationWarper >
imgcodecs,Public Member Functions inherited from cv::WarperCreator
imgcodecs,virtual
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,Recovers inverse camera response.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,Ptr< detail::RotationWarper >
imgcodecs,Public Member Functions inherited from cv::WarperCreator
imgcodecs,virtual
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,Calculates a sparse optical flow.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,GAPI_WRAP
imgcodecs,Constructs an empty GMat.
imgcodecs,GAPI_WRAP
imgcodecs,Constructs a value-initialized GMat.
imgcodecs,Public Member Functions inherited from cv::GMat
imgcodecs,GAPI_WRAP
imgcodecs,Constructs an empty GMat.
imgcodecs,GAPI_WRAP
imgcodecs,Constructs a value-initialized GMat.
imgcodecs,Public Member Functions
imgcodecs,template<typename T >
imgcodecs,const T &
imgcodecs,const plaidml::edsl::Tensor &
imgcodecs,plaidml::edsl::Tensor &
imgcodecs,Public Member Functions
imgcodecs,virtual float
imgcodecs,virtual float
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Tonemap
imgcodecs,virtual float
imgcodecs,virtual void
imgcodecs,Tonemaps image.
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,Ptr< detail::RotationWarper >
imgcodecs,Public Member Functions inherited from cv::WarperCreator
imgcodecs,virtual
imgcodecs,Public Member Functions
imgcodecs,virtual bool
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual double
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::DenseOpticalFlow
imgcodecs,virtual void
imgcodecs,Calculates an optical flow.
imgcodecs,virtual void
imgcodecs,Releases all inner buffers.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,Static Public Member Functions
imgcodecs,static GMetaArgs
imgcodecs,static constexpr const char *
imgcodecs,Static Public Member Functions inherited from cv::GInferROIBase
imgcodecs,static GMetaArgs
imgcodecs,static constexpr const char *
imgcodecs,Public Member Functions
imgcodecs,virtual String
imgcodecs,virtual int
imgcodecs,virtual float
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,Set detection octaves.
imgcodecs,virtual void
imgcodecs,Set detection patternScale.
imgcodecs,virtual void
imgcodecs,Set detection threshold.
imgcodecs,Public Member Functions inherited from cv::Feature2D
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual bool
imgcodecs,Return true if detector object is empty.
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,cv::String
imgcodecs,std::string
imgcodecs,Both detects and decodes QR code on a curved surface.
imgcodecs,QRCodeDetector &
imgcodecs,sets the epsilon used during the horizontal scan of QR code stop marker detection.
imgcodecs,QRCodeDetector &
imgcodecs,sets the epsilon used during the vertical scan of QR code stop marker detection.
imgcodecs,QRCodeDetector &
imgcodecs,use markers to improve the position of the corners of the QR code
imgcodecs,Public Member Functions inherited from cv::GraphicalCodeDetector
imgcodecs,std::string
imgcodecs,bool
imgcodecs,bool
imgcodecs,Detects graphical code in image and returns the quadrangle containing the code.
imgcodecs,std::string
imgcodecs,Both detects and decodes graphical code.
imgcodecs,bool
imgcodecs,Both detects and decodes graphical codes.
imgcodecs,bool
imgcodecs,Detects graphical codes in image and returns the vector of the quadrangles containing the codes.
imgcodecs,GraphicalCodeDetector &
imgcodecs,GraphicalCodeDetector &
imgcodecs,Static Public Member Functions
imgcodecs,static GMetaArgs
imgcodecs,static constexpr const char *
imgcodecs,Public Member Functions
imgcodecs,Default constructor.
imgcodecs,Construct from double.
imgcodecs,Copy constructor.
imgcodecs,Construct from integer.
imgcodecs,int
imgcodecs,Get 0-based exponent.
imgcodecs,softdouble
imgcodecs,Get a fraction part.
imgcodecs,bool
imgcodecs,Get sign bit.
imgcodecs,bool
imgcodecs,Inf state indicator.
imgcodecs,bool
imgcodecs,NaN state indicator.
imgcodecs,bool
imgcodecs,Subnormal number indicator.
imgcodecs,Type casts
imgcodecs,bool
imgcodecs,softdouble
imgcodecs,Remainder operator.
imgcodecs,softdouble &
imgcodecs,softdouble
imgcodecs,softdouble &
imgcodecs,softdouble
imgcodecs,Basic arithmetics.
imgcodecs,softdouble &
imgcodecs,softdouble
imgcodecs,softdouble
imgcodecs,softdouble &
imgcodecs,softdouble
imgcodecs,softdouble &
imgcodecs,bool
imgcodecs,bool
imgcodecs,softdouble &
imgcodecs,Assign constructor.
imgcodecs,bool
imgcodecs,Comparison operations.
imgcodecs,bool
imgcodecs,bool
imgcodecs,softdouble
imgcodecs,Construct a copy with new 0-based exponent.
imgcodecs,softdouble
imgcodecs,Construct a copy with provided significand.
imgcodecs,softdouble
imgcodecs,Construct a copy with new sign bit.
imgcodecs,Public Member Functions
imgcodecs,Constructs an empty cv::GOpaque<T>
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,virtual int
imgcodecs,Detects faces in the input image. Following is an example output.
imgcodecs,virtual Size
imgcodecs,virtual float
imgcodecs,virtual float
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,"Set the size for the network input, which overwrites the input size of creating model. Call this method when the size of input image does not match the input size when creating model."
imgcodecs,virtual void
imgcodecs,Set the Non-maximum-suppression threshold to suppress bounding boxes that have IoU greater than the given value.
imgcodecs,virtual void
imgcodecs,Set the score threshold to filter out bounding boxes of score less than the given value.
imgcodecs,virtual void
imgcodecs,Set the number of bounding boxes preserved before NMS.
imgcodecs,Public Member Functions
imgcodecs,virtual int
imgcodecs,virtual String
imgcodecs,virtual int
imgcodecs,virtual bool
imgcodecs,virtual double
imgcodecs,virtual int
imgcodecs,virtual double
imgcodecs,virtual double
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Feature2D
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual bool
imgcodecs,Return true if detector object is empty.
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,void
imgcodecs,void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,Ptr< detail::RotationWarper >
imgcodecs,Public Member Functions inherited from cv::WarperCreator
imgcodecs,virtual
imgcodecs,Public Member Functions
imgcodecs,virtual
imgcodecs,virtual UMatData *
imgcodecs,virtual bool
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual BufferPoolController *
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Merges images.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,int
imgcodecs,bool
imgcodecs,Size
imgcodecs,bool
imgcodecs,int &
imgcodecs,const int &
imgcodecs,Public Member Functions
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::HistogramCostExtractor
imgcodecs,virtual void
imgcodecs,virtual float
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,virtual float
imgcodecs,virtual int
imgcodecs,virtual void
imgcodecs,virtual void
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,GAPI_WRAP
imgcodecs,Constructs an empty GMat.
imgcodecs,GAPI_WRAP
imgcodecs,Constructs a value-initialized GMat.
imgcodecs,Public Member Functions
imgcodecs,virtual void
imgcodecs,Calculates an optical flow.
imgcodecs,virtual void
imgcodecs,Releases all inner buffers.
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgcodecs,Public Member Functions
imgcodecs,the default constructor
imgcodecs,the full constructor setting the iterator to the first sparse matrix element
imgcodecs,the copy constructor
imgcodecs,const SparseMat::Node *
imgcodecs,returns the current node of the sparse matrix. it.node->idx is the current element index
imgcodecs,SparseMatConstIterator &
imgcodecs,moves iterator to the next element
imgcodecs,SparseMatConstIterator
imgcodecs,moves iterator to the next element
imgcodecs,SparseMatConstIterator &
imgcodecs,moves iterator to the previous element
imgcodecs,SparseMatConstIterator
imgcodecs,moves iterator to the previous element
imgcodecs,SparseMatConstIterator &
imgcodecs,the assignment operator
imgcodecs,void
imgcodecs,moves iterator to the element after the last element
imgcodecs,template<typename _Tp >
imgcodecs,const _Tp &
imgcodecs,template method returning the current matrix element
imgcodecs,Public Member Functions
imgcodecs,bool
imgcodecs,Public Member Functions
imgcodecs,virtual float
imgcodecs,"Apply a transformation, given a pre-estimated transformation parameters."
imgcodecs,virtual void
imgcodecs,"Estimate the transformation parameters of the current transformer algorithm, based on point matches."
imgcodecs,virtual void
imgcodecs,"Apply a transformation, given a pre-estimated transformation parameters, to an Image."
imgcodecs,Public Member Functions inherited from cv::Algorithm
imgcodecs,virtual
imgcodecs,virtual void
imgcodecs,Clears the algorithm state.
imgcodecs,virtual bool
imgcodecs,virtual String
imgcodecs,virtual void
imgcodecs,Reads algorithm parameters from a file storage.
imgcodecs,virtual void
imgcodecs,void
imgcodecs,virtual void
imgcodecs,Stores algorithm parameters in a file storage.
imgcodecs,void
imgproc,Public Member Functions
imgproc,default constructor
imgproc,"template<typename _Tp2 , int cn>"
imgproc,Scalar_< _Tp >
imgproc,bool
imgproc,returns true iff v1 == v2 == v3 == 0
imgproc,Scalar_< _Tp >
imgproc,per-element product
imgproc,template<typename T2 >
imgproc,conversion to another data type
imgproc,Scalar_ &
imgproc,Scalar_ &
imgproc,"Public Member Functions inherited from cv::Vec< _Tp, 4 >"
imgproc,default constructor
imgproc,1-element vector constructor
imgproc,2-element vector constructor
imgproc,3-element vector constructor
imgproc,4-element vector constructor
imgproc,5-element vector constructor
imgproc,6-element vector constructor
imgproc,7-element vector constructor
imgproc,8-element vector constructor
imgproc,9-element vector constructor
imgproc,10-element vector constructor
imgproc,14-element vector constructor
imgproc,Vec
imgproc,Vec
imgproc,Vec
imgproc,per-element multiplication
imgproc,conversion to another data type
imgproc,_Tp &
imgproc,const _Tp &
imgproc,"Vec< _Tp, cn > &"
imgproc,_Tp &
imgproc,const _Tp &
imgproc,"Public Member Functions inherited from cv::Matx< _Tp, cn, 1 >"
imgproc,default constructor
imgproc,1x1 matrix
imgproc,1x2 or 2x1 matrix
imgproc,1x3 or 3x1 matrix
imgproc,"1x4, 2x2 or 4x1 matrix"
imgproc,1x5 or 5x1 matrix
imgproc,"1x6, 2x3, 3x2 or 6x1 matrix"
imgproc,1x7 or 7x1 matrix
imgproc,"1x8, 2x4, 4x2 or 8x1 matrix"
imgproc,"1x9, 3x3 or 9x1 matrix"
imgproc,"1x10, 2x5 or 5x2 or 10x1 matrix"
imgproc,"1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix"
imgproc,"1x14, 2x7, 7x2 or 14x1 matrix"
imgproc,"1x16, 4x4 or 16x1 matrix"
imgproc,initialize from a plain array
imgproc,initialize from an initializer list
imgproc,"Matx< _Tp, m, 1 >"
imgproc,extract the matrix column
imgproc,double
imgproc,dot product computed in double-precision arithmetics
imgproc,diag_type
imgproc,extract the matrix diagonal
imgproc,"Matx< _Tp, m, n >"
imgproc,divide two matrices element-wise
imgproc,_Tp
imgproc,dot product computed with the default precision
imgproc,"Matx< _Tp, m1, n1 >"
imgproc,extract part of the matrix
imgproc,"Matx< _Tp, n, m >"
imgproc,invert the matrix
imgproc,"Matx< _Tp, m, n >"
imgproc,multiply two matrices element-wise
imgproc,conversion to another data type
imgproc,_Tp &
imgproc,const _Tp &
imgproc,1D element access
imgproc,_Tp &
imgproc,const _Tp &
imgproc,element access
imgproc,"Matx< _Tp, m1, n1 >"
imgproc,change the matrix shape
imgproc,"Matx< _Tp, 1, n >"
imgproc,extract the matrix row
imgproc,"Matx< _Tp, n, l >"
imgproc,solve linear system
imgproc,"Vec< _Tp, n >"
imgproc,"Matx< _Tp, n, m >"
imgproc,transpose the matrix
imgproc,Public Member Functions
imgproc,virtual double
imgproc,virtual double
imgproc,virtual int
imgproc,virtual int
imgproc,virtual double
imgproc,virtual double
imgproc,virtual double
imgproc,virtual double
imgproc,virtual int
imgproc,virtual double
imgproc,virtual int
imgproc,virtual double
imgproc,virtual void
imgproc,Maximal difference between angles that treated as equal.
imgproc,virtual void
imgproc,Angle step in degrees.
imgproc,virtual void
imgproc,Angle votes threshold.
imgproc,virtual void
imgproc,Feature table levels.
imgproc,virtual void
imgproc,Maximal rotation angle to detect in degrees.
imgproc,virtual void
imgproc,Maximal scale to detect.
imgproc,virtual void
imgproc,Minimal rotation angle to detect in degrees.
imgproc,virtual void
imgproc,Minimal scale to detect.
imgproc,virtual void
imgproc,Position votes threshold.
imgproc,virtual void
imgproc,Scale step.
imgproc,virtual void
imgproc,Scale votes threshold.
imgproc,virtual void
imgproc,Angle difference in degrees between two points in feature.
imgproc,Public Member Functions inherited from cv::GeneralizedHough
imgproc,virtual void
imgproc,virtual void
imgproc,find template on image
imgproc,virtual int
imgproc,virtual int
imgproc,virtual double
imgproc,virtual int
imgproc,virtual double
imgproc,virtual void
imgproc,Canny high threshold.
imgproc,virtual void
imgproc,Canny low threshold.
imgproc,virtual void
imgproc,Inverse ratio of the accumulator resolution to the image resolution.
imgproc,virtual void
imgproc,Maximal size of inner buffers.
imgproc,virtual void
imgproc,Minimum distance between the centers of the detected objects.
imgproc,virtual void
imgproc,virtual void
imgproc,set template to search
imgproc,Public Member Functions inherited from cv::Algorithm
imgproc,virtual
imgproc,virtual void
imgproc,Clears the algorithm state.
imgproc,virtual bool
imgproc,virtual String
imgproc,virtual void
imgproc,Reads algorithm parameters from a file storage.
imgproc,virtual void
imgproc,void
imgproc,virtual void
imgproc,Stores algorithm parameters in a file storage.
imgproc,void
imgproc,Public Member Functions
imgproc,virtual void
imgproc,Equalizes the histogram of a grayscale image using Contrast Limited Adaptive Histogram Equalization.
imgproc,virtual void
imgproc,virtual double
imgproc,Returns threshold value for contrast limiting.
imgproc,virtual Size
imgproc,Returns Size defines the number of tiles in row and column.
imgproc,virtual void
imgproc,Sets threshold for contrast limiting.
imgproc,virtual void
imgproc,Sets size of grid for histogram equalization. Input image will be divided into equally sized rectangular tiles.
imgproc,Public Member Functions inherited from cv::Algorithm
imgproc,virtual
imgproc,virtual void
imgproc,Clears the algorithm state.
imgproc,virtual bool
imgproc,virtual String
imgproc,virtual void
imgproc,Reads algorithm parameters from a file storage.
imgproc,virtual void
imgproc,void
imgproc,virtual void
imgproc,Stores algorithm parameters in a file storage.
imgproc,void
imgproc,Public Member Functions
imgproc,virtual void
imgproc,virtual void
imgproc,find template on image
imgproc,virtual int
imgproc,virtual int
imgproc,virtual double
imgproc,virtual int
imgproc,virtual double
imgproc,virtual void
imgproc,Canny high threshold.
imgproc,virtual void
imgproc,Canny low threshold.
imgproc,virtual void
imgproc,Inverse ratio of the accumulator resolution to the image resolution.
imgproc,virtual void
imgproc,Maximal size of inner buffers.
imgproc,virtual void
imgproc,Minimum distance between the centers of the detected objects.
imgproc,virtual void
imgproc,virtual void
imgproc,set template to search
imgproc,Public Member Functions inherited from cv::Algorithm
imgproc,virtual
imgproc,virtual void
imgproc,Clears the algorithm state.
imgproc,virtual bool
imgproc,virtual String
imgproc,virtual void
imgproc,Reads algorithm parameters from a file storage.
imgproc,virtual void
imgproc,void
imgproc,virtual void
imgproc,Stores algorithm parameters in a file storage.
imgproc,void
imgproc,Public Member Functions
imgproc,the default constructor
imgproc,the full constructor
imgproc,Public Member Functions
imgproc,bool
imgproc,int
imgproc,Public Member Functions
imgproc,virtual
imgproc,virtual int
imgproc,virtual void
imgproc,Finds lines in the input image.
imgproc,virtual void
imgproc,Draws the line segments on a given image.
imgproc,Public Member Functions inherited from cv::Algorithm
imgproc,virtual
imgproc,virtual void
imgproc,Clears the algorithm state.
imgproc,virtual bool
imgproc,virtual String
imgproc,virtual void
imgproc,Reads algorithm parameters from a file storage.
imgproc,virtual void
imgproc,void
imgproc,virtual void
imgproc,Stores algorithm parameters in a file storage.
imgproc,void
imgproc,Public Member Functions
imgproc,default constructor
imgproc,Rect
imgproc,returns the minimal up-right integer rectangle containing the rotated rectangle
imgproc,Rect2f
imgproc,void
imgproc,void
imgproc,Public Member Functions
imgproc,virtual int
imgproc,virtual int
imgproc,virtual void
imgproc,R-Table levels.
imgproc,virtual void
imgproc,"The accumulator threshold for the template centers at the detection stage. The smaller it is, the more false positions may be detected."
imgproc,Public Member Functions inherited from cv::GeneralizedHough
imgproc,virtual void
imgproc,virtual void
imgproc,find template on image
imgproc,virtual int
imgproc,virtual int
imgproc,virtual double
imgproc,virtual int
imgproc,virtual double
imgproc,virtual void
imgproc,Canny high threshold.
imgproc,virtual void
imgproc,Canny low threshold.
imgproc,virtual void
imgproc,Inverse ratio of the accumulator resolution to the image resolution.
imgproc,virtual void
imgproc,Maximal size of inner buffers.
imgproc,virtual void
imgproc,Minimum distance between the centers of the detected objects.
imgproc,virtual void
imgproc,virtual void
imgproc,set template to search
imgproc,Public Member Functions inherited from cv::Algorithm
imgproc,virtual
imgproc,virtual void
imgproc,Clears the algorithm state.
imgproc,virtual bool
imgproc,virtual String
imgproc,virtual void
imgproc,Reads algorithm parameters from a file storage.
imgproc,virtual void
imgproc,void
imgproc,virtual void
imgproc,Stores algorithm parameters in a file storage.
imgproc,void
imgproc,Public Member Functions
imgproc,Initializes iterator object for the given line and image.
imgproc,void
imgproc,uchar *
imgproc,Returns pointer to the current pixel.
imgproc,LineIterator &
imgproc,Moves iterator to the next pixel on the line.
imgproc,LineIterator
imgproc,Moves iterator to the next pixel on the line.
imgproc,Point
imgproc,Returns coordinates of the current pixel.
imgproc,Public Member Functions
imgproc,IntelligentScissorsMB &
imgproc,Specify input image and extract image features.
imgproc,IntelligentScissorsMB &
imgproc,Specify custom features of input image.
imgproc,void
imgproc,Prepares a map of optimal paths for the given source point on the image.
imgproc,void
imgproc,Extracts optimal contour for the given target point on the image.
imgproc,IntelligentScissorsMB &
imgproc,Switch edge feature extractor to use Canny edge detector.
imgproc,IntelligentScissorsMB &
imgproc,"Switch to ""Laplacian Zero-Crossing"" edge feature extractor and specify its parameters."
imgproc,IntelligentScissorsMB &
imgproc,Specify gradient magnitude max value threshold.
imgproc,IntelligentScissorsMB &
imgproc,Specify weights of feature functions.
ml,Public Member Functions
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,"template<typename _Tp , int m, int n>"
ml,"template<typename _Tp , std::size_t _Nm>"
ml,template<std::size_t _Nm>
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,"template<typename _Tp , int m, int n>"
ml,"template<typename _Tp , std::size_t _Nm>"
ml,template<std::size_t _Nm>
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,"template<typename _Tp , std::size_t _Nm>"
ml,_InputOutputArray
ml,Public Member Functions inherited from cv::_OutputArray
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,"template<typename _Tp , int m, int n>"
ml,"template<typename _Tp , std::size_t _Nm>"
ml,template<std::size_t _Nm>
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,"template<typename _Tp , int m, int n>"
ml,"template<typename _Tp , std::size_t _Nm>"
ml,template<std::size_t _Nm>
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,void
ml,void
ml,void
ml,void
ml,void
ml,void
ml,void
ml,void
ml,void
ml,bool
ml,bool
ml,cuda::GpuMat &
ml,std::vector< cuda::GpuMat > &
ml,cuda::HostMem &
ml,Mat &
ml,ogl::Buffer &
ml,UMat &
ml,void
ml,void
ml,bool
ml,void
ml,void
ml,Public Member Functions inherited from cv::_InputArray
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,"template<typename _Tp , int m, int n>"
ml,"template<typename _Tp , std::size_t _Nm>"
ml,template<std::size_t _Nm>
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,template<typename _Tp >
ml,int
ml,int
ml,void
ml,void
ml,int
ml,int
ml,bool
ml,int
ml,cuda::GpuMat
ml,void
ml,Mat
ml,Mat
ml,void
ml,void *
ml,ogl::Buffer
ml,Size
ml,UMat
ml,void
ml,bool
ml,bool
ml,bool
ml,bool
ml,bool
ml,bool
ml,bool
ml,bool
ml,bool
ml,bool
ml,_InputArray::KindFlag
ml,size_t
ml,int
ml,bool
ml,Size
ml,int
ml,size_t
ml,size_t
ml,int
ml,Public Member Functions
ml,virtual int
ml,virtual bool
ml,virtual double
ml,virtual TermCriteria
ml,virtual Mat
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,Public Member Functions inherited from cv::ml::DTrees
ml,virtual int
ml,virtual int
ml,virtual int
ml,virtual int
ml,virtual const std::vector< Node > &
ml,Returns all the nodes.
ml,virtual cv::Mat
ml,"The array of a priori class probabilities, sorted by the class label value."
ml,virtual float
ml,virtual const std::vector< int > &
ml,Returns indices of root nodes.
ml,virtual const std::vector< Split > &
ml,Returns all the splits.
ml,virtual const std::vector< int > &
ml,Returns all the bitsets for categorical splits.
ml,virtual bool
ml,virtual bool
ml,virtual bool
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,"The array of a priori class probabilities, sorted by the class label value."
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,Public Member Functions inherited from cv::ml::StatModel
ml,virtual float
ml,Computes error on the training or test dataset.
ml,virtual bool
ml,virtual int
ml,Returns the number of variables in training samples.
ml,virtual bool
ml,Returns true if the model is classifier.
ml,virtual bool
ml,Returns true if the model is trained.
ml,virtual float
ml,virtual bool
ml,Trains the statistical model.
ml,virtual bool
ml,Trains the statistical model.
ml,Public Member Functions inherited from cv::Algorithm
ml,virtual
ml,virtual void
ml,Clears the algorithm state.
ml,virtual String
ml,virtual void
ml,Reads algorithm parameters from a file storage.
ml,virtual void
ml,void
ml,virtual void
ml,Stores algorithm parameters in a file storage.
ml,void
ml,Public Member Functions
ml,MatExpr
ml,Mat
ml,MatExpr
ml,double
ml,MatExpr
ml,MatExpr
ml,MatExpr
ml,template<typename _Tp >
ml,MatExpr
ml,MatExpr
ml,MatExpr
ml,Size
ml,void
ml,MatExpr
ml,int
ml,Public Member Functions
ml,virtual
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual bool
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual Size
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual int
ml,Public Member Functions
ml,default constructor
ml,"template<typename _Tp2 , int cn>"
ml,Scalar_< _Tp >
ml,bool
ml,returns true iff v1 == v2 == v3 == 0
ml,Scalar_< _Tp >
ml,per-element product
ml,template<typename T2 >
ml,conversion to another data type
ml,Scalar_ &
ml,Scalar_ &
ml,"Public Member Functions inherited from cv::Vec< _Tp, 4 >"
ml,default constructor
ml,1-element vector constructor
ml,2-element vector constructor
ml,3-element vector constructor
ml,4-element vector constructor
ml,5-element vector constructor
ml,6-element vector constructor
ml,7-element vector constructor
ml,8-element vector constructor
ml,9-element vector constructor
ml,10-element vector constructor
ml,14-element vector constructor
ml,Vec
ml,Vec
ml,Vec
ml,per-element multiplication
ml,conversion to another data type
ml,_Tp &
ml,const _Tp &
ml,"Vec< _Tp, cn > &"
ml,_Tp &
ml,const _Tp &
ml,"Public Member Functions inherited from cv::Matx< _Tp, cn, 1 >"
ml,default constructor
ml,1x1 matrix
ml,1x2 or 2x1 matrix
ml,1x3 or 3x1 matrix
ml,"1x4, 2x2 or 4x1 matrix"
ml,1x5 or 5x1 matrix
ml,"1x6, 2x3, 3x2 or 6x1 matrix"
ml,1x7 or 7x1 matrix
ml,"1x8, 2x4, 4x2 or 8x1 matrix"
ml,"1x9, 3x3 or 9x1 matrix"
ml,"1x10, 2x5 or 5x2 or 10x1 matrix"
ml,"1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix"
ml,"1x14, 2x7, 7x2 or 14x1 matrix"
ml,"1x16, 4x4 or 16x1 matrix"
ml,initialize from a plain array
ml,initialize from an initializer list
ml,"Matx< _Tp, m, 1 >"
ml,extract the matrix column
ml,double
ml,dot product computed in double-precision arithmetics
ml,diag_type
ml,extract the matrix diagonal
ml,"Matx< _Tp, m, n >"
ml,divide two matrices element-wise
ml,_Tp
ml,dot product computed with the default precision
ml,"Matx< _Tp, m1, n1 >"
ml,extract part of the matrix
ml,"Matx< _Tp, n, m >"
ml,invert the matrix
ml,"Matx< _Tp, m, n >"
ml,multiply two matrices element-wise
ml,conversion to another data type
ml,_Tp &
ml,const _Tp &
ml,1D element access
ml,_Tp &
ml,const _Tp &
ml,element access
ml,"Matx< _Tp, m1, n1 >"
ml,change the matrix shape
ml,"Matx< _Tp, 1, n >"
ml,extract the matrix row
ml,"Matx< _Tp, n, l >"
ml,solve linear system
ml,"Vec< _Tp, n >"
ml,"Matx< _Tp, n, m >"
ml,transpose the matrix
ml,Public Member Functions
ml,the default constructor
ml,size_t
ml,Public Member Functions
ml,virtual
ml,virtual void
ml,Clears the algorithm state.
ml,virtual bool
ml,virtual String
ml,virtual void
ml,Reads algorithm parameters from a file storage.
ml,virtual void
ml,void
ml,virtual void
ml,Stores algorithm parameters in a file storage.
ml,void
ml,Public Member Functions
ml,MatStep &
ml,const size_t &
ml,size_t &
ml,Public Member Functions
ml,Public Member Functions
ml,virtual float
ml,Public Member Functions inherited from cv::ml::StatModel
ml,virtual float
ml,Computes error on the training or test dataset.
ml,virtual bool
ml,virtual int
ml,Returns the number of variables in training samples.
ml,virtual bool
ml,Returns true if the model is classifier.
ml,virtual bool
ml,Returns true if the model is trained.
ml,virtual float
ml,virtual bool
ml,Trains the statistical model.
ml,virtual bool
ml,Trains the statistical model.
ml,Public Member Functions inherited from cv::Algorithm
ml,virtual
ml,virtual void
ml,Clears the algorithm state.
ml,virtual String
ml,virtual void
ml,Reads algorithm parameters from a file storage.
ml,virtual void
ml,void
ml,virtual void
ml,Stores algorithm parameters in a file storage.
ml,void
ml,Public Member Functions
ml,bool
ml,Public Member Functions
ml,virtual
ml,virtual const char *
ml,virtual void
ml,Public Member Functions
ml,the default constructor
ml,the copy constructor
ml,the full constructor setting the iterator to the first sparse matrix element
ml,the full constructor setting the iterator to the specified sparse matrix element
ml,SparseMat::Node *
ml,SparseMatIterator &
ml,moves iterator to the next element
ml,SparseMatIterator
ml,moves iterator to the next element
ml,SparseMatIterator &
ml,the assignment operator
ml,template<typename _Tp >
ml,_Tp &
ml,returns read-write reference to the current sparse matrix element
ml,Public Member Functions inherited from cv::SparseMatConstIterator
ml,the default constructor
ml,the full constructor setting the iterator to the first sparse matrix element
ml,the copy constructor
ml,const SparseMat::Node *
ml,returns the current node of the sparse matrix. it.node->idx is the current element index
ml,SparseMatConstIterator &
ml,moves iterator to the next element
ml,SparseMatConstIterator
ml,moves iterator to the next element
ml,SparseMatConstIterator &
ml,moves iterator to the previous element
ml,SparseMatConstIterator
ml,moves iterator to the previous element
ml,SparseMatConstIterator &
ml,the assignment operator
ml,void
ml,moves iterator to the element after the last element
ml,template<typename _Tp >
ml,const _Tp &
ml,template method returning the current matrix element
ml,Public Member Functions
ml,the default constructor
ml,the full constructor taking arbitrary number of n-dim matrices
ml,the full constructor taking arbitrary number of n-dim matrices
ml,void
ml,the separate iterator initialization method
ml,NAryMatIterator &
ml,proceeds to the next plane of every iterated matrix
ml,NAryMatIterator
ml,Public Member Functions
ml,"the constructor, created by ""matrix << firstValue"" operator, where matrix is cv::Mat"
ml,another form of conversion operator
ml,template<typename T2 >
ml,MatCommaInitializer_< _Tp > &
ml,the operator that takes the next value and put it to the matrix
ml,Public Member Functions
ml,Default constructor.
ml,Constructor with parameters.
ml,Public Member Functions
ml,virtual void
ml,virtual int
ml,Public Member Functions inherited from cv::Algorithm
ml,virtual
ml,virtual void
ml,Clears the algorithm state.
ml,virtual bool
ml,virtual String
ml,virtual void
ml,Reads algorithm parameters from a file storage.
ml,virtual void
ml,void
ml,virtual void
ml,Stores algorithm parameters in a file storage.
ml,void
ml,Public Member Functions
ml,Public Member Functions
ml,bool
ml,int
ml,Public Member Functions
ml,default constructor
ml,Complex
ml,conjugation
ml,template<typename T2 >
ml,conversion to another data type
ml,Public Member Functions
ml,unsigned
ml,unsigned
ml,unsigned
ml,void
ml,double
ml,"returns uniformly distributed double-precision floating-point random number from [a,b) range"
ml,float
ml,"returns uniformly distributed floating-point random number from [a,b) range"
ml,int
ml,"returns uniformly distributed integer random number from [a,b) range"
ml,Public Member Functions
ml,void
ml,Mat
ml,Mat
ml,void
ml,void
ml,Mat
ml,Mat
ml,void
ml,void
ml,Public Member Functions
ml,default constructor
ml,Rect
ml,returns the minimal up-right integer rectangle containing the rotated rectangle
ml,Rect2f
ml,void
ml,void
ml,Public Member Functions
ml,virtual
ml,virtual int
ml,virtual Mat
ml,virtual Mat
ml,virtual Mat
ml,Returns the vector of class labels.
ml,virtual Mat
ml,virtual int
ml,virtual Mat
ml,virtual int
ml,virtual void
ml,virtual Mat
ml,virtual void
ml,virtual int
ml,virtual int
ml,virtual int
ml,virtual int
ml,virtual Mat
ml,virtual int
ml,virtual void
ml,virtual Mat
ml,virtual Mat
ml,virtual Mat
ml,virtual Mat
ml,virtual Mat
ml,virtual Mat
ml,Returns matrix of test samples.
ml,virtual Mat
ml,virtual Mat
ml,Returns the vector of normalized categorical responses.
ml,virtual Mat
ml,Returns the vector of responses.
ml,virtual Mat
ml,virtual Mat
ml,Returns matrix of train samples.
ml,virtual Mat
ml,virtual void
ml,virtual Mat
ml,virtual Mat
ml,virtual Mat
ml,virtual void
ml,Splits the training data into the training and test parts.
ml,virtual void
ml,Splits the training data into the training and test parts.
ml,virtual void
ml,Public Member Functions
ml,void
ml,double
ml,void
ml,Public Member Functions
ml,virtual
ml,virtual UMatData *
ml,virtual bool
ml,virtual void
ml,virtual void
ml,virtual void
ml,virtual BufferPoolController *
ml,virtual void
ml,virtual void
ml,virtual void
ml,Public Member Functions
ml,int
ml,bool
ml,Size
ml,bool
ml,int &
ml,const int &
ml,Public Member Functions
ml,the default constructor
ml,the full constructor setting the iterator to the first sparse matrix element
ml,the copy constructor
ml,const SparseMat::Node *
ml,returns the current node of the sparse matrix. it.node->idx is the current element index
ml,SparseMatConstIterator &
ml,moves iterator to the next element
ml,SparseMatConstIterator
ml,moves iterator to the next element
ml,SparseMatConstIterator &
ml,moves iterator to the previous element
ml,SparseMatConstIterator
ml,moves iterator to the previous element
ml,SparseMatConstIterator &
ml,the assignment operator
ml,void
ml,moves iterator to the element after the last element
ml,template<typename _Tp >
ml,const _Tp &
ml,template method returning the current matrix element
objdetect,Public Member Functions
objdetect,CharucoBoard constructor.
objdetect,bool
objdetect,check whether the ChArUco markers are collinear
objdetect,std::vector< Point3f >
objdetect,get CharucoBoard::chessboardCorners
objdetect,Size
objdetect,bool
objdetect,float
objdetect,std::vector< std::vector< int > >
objdetect,"get CharucoBoard::nearestMarkerCorners, for each charuco corner, nearest marker corner id of each marker"
objdetect,std::vector< std::vector< int > >
objdetect,"get CharucoBoard::nearestMarkerIdx, for each charuco corner, nearest marker index in ids array"
objdetect,float
objdetect,void
objdetect,set legacy chessboard pattern.
objdetect,Public Member Functions inherited from cv::aruco::Board
objdetect,Common Board constructor.
objdetect,void
objdetect,Draw a planar board.
objdetect,const Dictionary &
objdetect,return the Dictionary of markers employed for this board
objdetect,const std::vector< int > &
objdetect,const std::vector< std::vector< Point3f > > &
objdetect,return array of object points of all the marker corners in the board.
objdetect,const Point3f &
objdetect,void
objdetect,Public Member Functions
objdetect,bool
objdetect,Public Member Functions
objdetect,bool
objdetect,bool
objdetect,Write a set of DetectorParameters to FileStorage.
objdetect,Public Member Functions
objdetect,Loads a classifier from a file.
objdetect,void
objdetect,Detects objects of different sizes in the input image. The detected objects are returned as a list of rectangles.
objdetect,void
objdetect,void
objdetect,bool
objdetect,Checks whether the classifier has been loaded.
objdetect,int
objdetect,Ptr< BaseCascadeClassifier::MaskGenerator >
objdetect,void *
objdetect,Size
objdetect,bool
objdetect,bool
objdetect,Loads a classifier from a file.
objdetect,bool
objdetect,Reads a classifier from a FileStorage node.
objdetect,void
objdetect,Public Member Functions
objdetect,Basic ArucoDetector constructor.
objdetect,void
objdetect,Basic marker detection.
objdetect,const DetectorParameters &
objdetect,const Dictionary &
objdetect,const RefineParameters &
objdetect,virtual void
objdetect,Reads algorithm parameters from a file storage.
objdetect,void
objdetect,Refine not detected markers based on the already detected and the board layout.
objdetect,void
objdetect,void
objdetect,void
objdetect,virtual void
objdetect,Stores algorithm parameters in a file storage.
objdetect,void
objdetect,simplified API for language bindings
objdetect,Public Member Functions inherited from cv::Algorithm
objdetect,virtual
objdetect,virtual void
objdetect,Clears the algorithm state.
objdetect,virtual bool
objdetect,virtual String
objdetect,virtual void
objdetect,void
objdetect,void
objdetect,Public Member Functions
objdetect,Common Board constructor.
objdetect,void
objdetect,Draw a planar board.
objdetect,const Dictionary &
objdetect,return the Dictionary of markers employed for this board
objdetect,const std::vector< int > &
objdetect,const std::vector< std::vector< Point3f > > &
objdetect,return array of object points of all the marker corners in the board.
objdetect,const Point3f &
objdetect,void
objdetect,Public Member Functions
objdetect,bool
objdetect,bool
objdetect,Write a set of RefineParameters to FileStorage.
objdetect,Public Member Functions
objdetect,Basic ArUco dictionary constructor.
objdetect,void
objdetect,Generate a canonical marker image.
objdetect,int
objdetect,Returns Hamming distance of the input bits to the specific id.
objdetect,bool
objdetect,Given a matrix of bits. Returns whether if marker is identified or not.
objdetect,bool
objdetect,Read a new dictionary from FileNode.
objdetect,void
objdetect,Public Member Functions
objdetect,virtual
objdetect,virtual Mat
objdetect,virtual void
objdetect,Public Member Functions
objdetect,std::string
objdetect,bool
objdetect,bool
objdetect,Detects graphical code in image and returns the quadrangle containing the code.
objdetect,std::string
objdetect,Both detects and decodes graphical code.
objdetect,bool
objdetect,Both detects and decodes graphical codes.
objdetect,bool
objdetect,Detects graphical codes in image and returns the vector of the quadrangles containing the codes.
objdetect,GraphicalCodeDetector &
objdetect,GraphicalCodeDetector &
objdetect,Public Member Functions
objdetect,void
objdetect,Public Member Functions
objdetect,Basic CharucoDetector constructor.
objdetect,void
objdetect,detect aruco markers and interpolate position of ChArUco board corners
objdetect,void
objdetect,Detect ChArUco Diamond markers.
objdetect,const CharucoBoard &
objdetect,const CharucoParameters &
objdetect,const DetectorParameters &
objdetect,const RefineParameters &
objdetect,void
objdetect,void
objdetect,void
objdetect,void
objdetect,Public Member Functions inherited from cv::Algorithm
objdetect,virtual
objdetect,virtual void
objdetect,Clears the algorithm state.
objdetect,virtual bool
objdetect,virtual String
objdetect,virtual void
objdetect,Reads algorithm parameters from a file storage.
objdetect,virtual void
objdetect,void
objdetect,virtual void
objdetect,Stores algorithm parameters in a file storage.
objdetect,void
objdetect,Public Member Functions
objdetect,Initialize the BarcodeDetector.
objdetect,Initialize the BarcodeDetector.
objdetect,bool
objdetect,bool
objdetect,Both detects and decodes barcode.
objdetect,void
objdetect,Returns detector box filter sizes.
objdetect,double
objdetect,Get detector downsampling threshold.
objdetect,double
objdetect,Get detector gradient magnitude threshold.
objdetect,BarcodeDetector &
objdetect,Set detector box filter sizes.
objdetect,BarcodeDetector &
objdetect,Set detector downsampling threshold.
objdetect,BarcodeDetector &
objdetect,Set detector gradient magnitude threshold.
objdetect,Public Member Functions inherited from cv::GraphicalCodeDetector
objdetect,std::string
objdetect,bool
objdetect,bool
objdetect,Detects graphical code in image and returns the quadrangle containing the code.
objdetect,std::string
objdetect,Both detects and decodes graphical code.
objdetect,bool
objdetect,Both detects and decodes graphical codes.
objdetect,bool
objdetect,Detects graphical codes in image and returns the vector of the quadrangles containing the codes.
objdetect,GraphicalCodeDetector &
objdetect,GraphicalCodeDetector &
objdetect,Public Member Functions
objdetect,GridBoard constructor.
objdetect,Size
objdetect,float
objdetect,float
objdetect,Public Member Functions inherited from cv::aruco::Board
objdetect,Common Board constructor.
objdetect,void
objdetect,Draw a planar board.
objdetect,const Dictionary &
objdetect,return the Dictionary of markers employed for this board
objdetect,const std::vector< int > &
objdetect,const std::vector< std::vector< Point3f > > &
objdetect,return array of object points of all the marker corners in the board.
objdetect,const Point3f &
objdetect,void
objdetect,Public Member Functions
objdetect,cv::String
objdetect,std::string
objdetect,Both detects and decodes QR code on a curved surface.
objdetect,QRCodeDetector &
objdetect,sets the epsilon used during the horizontal scan of QR code stop marker detection.
objdetect,QRCodeDetector &
objdetect,sets the epsilon used during the vertical scan of QR code stop marker detection.
objdetect,QRCodeDetector &
objdetect,use markers to improve the position of the corners of the QR code
objdetect,Public Member Functions inherited from cv::GraphicalCodeDetector
objdetect,std::string
objdetect,bool
objdetect,bool
objdetect,Detects graphical code in image and returns the quadrangle containing the code.
objdetect,std::string
objdetect,Both detects and decodes graphical code.
objdetect,bool
objdetect,Both detects and decodes graphical codes.
objdetect,bool
objdetect,Detects graphical codes in image and returns the vector of the quadrangles containing the codes.
objdetect,GraphicalCodeDetector &
objdetect,GraphicalCodeDetector &
objdetect,Public Member Functions
objdetect,Public Member Functions
objdetect,virtual
objdetect,virtual int
objdetect,Detects faces in the input image. Following is an example output.
objdetect,virtual Size
objdetect,virtual float
objdetect,virtual float
objdetect,virtual int
objdetect,virtual void
objdetect,"Set the size for the network input, which overwrites the input size of creating model. Call this method when the size of input image does not match the input size when creating model."
objdetect,virtual void
objdetect,Set the Non-maximum-suppression threshold to suppress bounding boxes that have IoU greater than the given value.
objdetect,virtual void
objdetect,Set the score threshold to filter out bounding boxes of score less than the given value.
objdetect,virtual void
objdetect,Set the number of bounding boxes preserved before NMS.
photo,Public Member Functions
photo,virtual float
photo,virtual float
photo,virtual float
photo,virtual void
photo,virtual void
photo,virtual void
photo,Public Member Functions inherited from cv::Tonemap
photo,virtual float
photo,virtual void
photo,Tonemaps image.
photo,virtual void
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
photo,Public Member Functions
photo,virtual int
photo,virtual Mat
photo,virtual float
photo,virtual void
photo,virtual void
photo,Public Member Functions inherited from cv::CalibrateCRF
photo,virtual void
photo,Recovers inverse camera response.
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
photo,Public Member Functions
photo,virtual void
photo,Aligns images.
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
photo,Public Member Functions
photo,virtual void
photo,Merges images.
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
photo,Public Member Functions
photo,virtual void
photo,virtual void
photo,Merges images.
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
photo,Public Member Functions
photo,virtual Point
photo,"Calculates shift between two images, i. e. how to shift the second image to correspond it with the first."
photo,virtual void
photo,Computes median threshold and exclude bitmaps of given image.
photo,virtual bool
photo,virtual int
photo,virtual int
photo,virtual void
photo,"Short version of process, that doesn't take extra arguments."
photo,virtual void
photo,Aligns images.
photo,virtual void
photo,virtual void
photo,virtual void
photo,virtual void
photo,"Helper function, that shift Mat filling new regions with zeros."
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
photo,Public Member Functions
photo,virtual float
photo,virtual float
photo,virtual float
photo,virtual void
photo,"Short version of process, that doesn't take extra arguments."
photo,virtual void
photo,Merges images.
photo,virtual void
photo,virtual void
photo,virtual void
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
photo,Public Member Functions
photo,virtual float
photo,virtual void
photo,Tonemaps image.
photo,virtual void
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
photo,Public Member Functions
photo,virtual float
photo,virtual bool
photo,virtual int
photo,virtual void
photo,virtual void
photo,virtual void
photo,Public Member Functions inherited from cv::CalibrateCRF
photo,virtual void
photo,Recovers inverse camera response.
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
photo,Public Member Functions
photo,virtual float
photo,virtual float
photo,virtual void
photo,virtual void
photo,Public Member Functions inherited from cv::Tonemap
photo,virtual float
photo,virtual void
photo,Tonemaps image.
photo,virtual void
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
photo,Public Member Functions
photo,virtual void
photo,Applies the specified filter to the image.
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
photo,Public Member Functions
photo,virtual void
photo,Recovers inverse camera response.
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
photo,Public Member Functions
photo,virtual float
photo,virtual float
photo,virtual void
photo,virtual void
photo,Public Member Functions inherited from cv::Tonemap
photo,virtual float
photo,virtual void
photo,Tonemaps image.
photo,virtual void
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
photo,Public Member Functions
photo,virtual void
photo,virtual void
photo,Merges images.
photo,Public Member Functions inherited from cv::Algorithm
photo,virtual
photo,virtual void
photo,Clears the algorithm state.
photo,virtual bool
photo,virtual String
photo,virtual void
photo,Reads algorithm parameters from a file storage.
photo,virtual void
photo,void
photo,virtual void
photo,Stores algorithm parameters in a file storage.
photo,void
stitching,Public Member Functions
stitching,virtual
stitching,virtual void
stitching,virtual void
stitching,virtual int
stitching,virtual int
stitching,virtual int
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual bool
stitching,Return true if detector object is empty.
stitching,virtual String
stitching,virtual void
stitching,Reads algorithm parameters from a file storage.
stitching,void
stitching,void
stitching,void
stitching,virtual void
stitching,Stores algorithm parameters in a file storage.
stitching,void
stitching,Public Member Functions inherited from cv::Algorithm
stitching,virtual
stitching,virtual void
stitching,Clears the algorithm state.
stitching,virtual void
stitching,void
stitching,void
stitching,Public Member Functions
stitching,CharucoBoard constructor.
stitching,bool
stitching,check whether the ChArUco markers are collinear
stitching,std::vector< Point3f >
stitching,get CharucoBoard::chessboardCorners
stitching,Size
stitching,bool
stitching,float
stitching,std::vector< std::vector< int > >
stitching,"get CharucoBoard::nearestMarkerCorners, for each charuco corner, nearest marker corner id of each marker"
stitching,std::vector< std::vector< int > >
stitching,"get CharucoBoard::nearestMarkerIdx, for each charuco corner, nearest marker index in ids array"
stitching,float
stitching,void
stitching,set legacy chessboard pattern.
stitching,Public Member Functions inherited from cv::aruco::Board
stitching,Common Board constructor.
stitching,void
stitching,Draw a planar board.
stitching,const Dictionary &
stitching,return the Dictionary of markers employed for this board
stitching,const std::vector< int > &
stitching,const std::vector< std::vector< Point3f > > &
stitching,return array of object points of all the marker corners in the board.
stitching,const Point3f &
stitching,void
stitching,Public Member Functions
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,"template<typename _Tp , int m, int n>"
stitching,"template<typename _Tp , std::size_t _Nm>"
stitching,template<std::size_t _Nm>
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,"template<typename _Tp , int m, int n>"
stitching,"template<typename _Tp , std::size_t _Nm>"
stitching,template<std::size_t _Nm>
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,"template<typename _Tp , std::size_t _Nm>"
stitching,_InputOutputArray
stitching,Public Member Functions inherited from cv::_OutputArray
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,"template<typename _Tp , int m, int n>"
stitching,"template<typename _Tp , std::size_t _Nm>"
stitching,template<std::size_t _Nm>
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,"template<typename _Tp , int m, int n>"
stitching,"template<typename _Tp , std::size_t _Nm>"
stitching,template<std::size_t _Nm>
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,void
stitching,void
stitching,void
stitching,void
stitching,void
stitching,void
stitching,void
stitching,void
stitching,void
stitching,bool
stitching,bool
stitching,cuda::GpuMat &
stitching,std::vector< cuda::GpuMat > &
stitching,cuda::HostMem &
stitching,Mat &
stitching,ogl::Buffer &
stitching,UMat &
stitching,void
stitching,void
stitching,bool
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::_InputArray
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,"template<typename _Tp , int m, int n>"
stitching,"template<typename _Tp , std::size_t _Nm>"
stitching,template<std::size_t _Nm>
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,template<typename _Tp >
stitching,int
stitching,int
stitching,void
stitching,void
stitching,int
stitching,int
stitching,bool
stitching,int
stitching,cuda::GpuMat
stitching,void
stitching,Mat
stitching,Mat
stitching,void
stitching,void *
stitching,ogl::Buffer
stitching,Size
stitching,UMat
stitching,void
stitching,bool
stitching,bool
stitching,bool
stitching,bool
stitching,bool
stitching,bool
stitching,bool
stitching,bool
stitching,bool
stitching,bool
stitching,_InputArray::KindFlag
stitching,size_t
stitching,int
stitching,bool
stitching,Size
stitching,int
stitching,size_t
stitching,size_t
stitching,int
stitching,Public Member Functions
stitching,Ptr< detail::RotationWarper >
stitching,Public Member Functions inherited from cv::WarperCreator
stitching,virtual
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,Ptr< detail::RotationWarper >
stitching,Public Member Functions inherited from cv::WarperCreator
stitching,virtual
stitching,Public Member Functions
stitching,Ptr< detail::RotationWarper >
stitching,Public Member Functions inherited from cv::WarperCreator
stitching,virtual
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,void
stitching,Compensate exposure in the specified image.
stitching,void
stitching,std::vector< double >
stitching,void
stitching,int
stitching,double
stitching,void
stitching,void
stitching,void
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ExposureCompensator
stitching,virtual
stitching,void
stitching,bool
stitching,void
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::Estimator
stitching,virtual
stitching,bool
stitching,Estimates camera parameters.
stitching,Public Member Functions
stitching,MatExpr
stitching,Mat
stitching,MatExpr
stitching,double
stitching,MatExpr
stitching,MatExpr
stitching,MatExpr
stitching,template<typename _Tp >
stitching,MatExpr
stitching,MatExpr
stitching,MatExpr
stitching,Size
stitching,void
stitching,MatExpr
stitching,int
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< StereographicProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,virtual
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual bool
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual Size
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual int
stitching,Public Member Functions
stitching,default constructor
stitching,"template<typename _Tp2 , int cn>"
stitching,Scalar_< _Tp >
stitching,bool
stitching,returns true iff v1 == v2 == v3 == 0
stitching,Scalar_< _Tp >
stitching,per-element product
stitching,template<typename T2 >
stitching,conversion to another data type
stitching,Scalar_ &
stitching,Scalar_ &
stitching,"Public Member Functions inherited from cv::Vec< _Tp, 4 >"
stitching,default constructor
stitching,1-element vector constructor
stitching,2-element vector constructor
stitching,3-element vector constructor
stitching,4-element vector constructor
stitching,5-element vector constructor
stitching,6-element vector constructor
stitching,7-element vector constructor
stitching,8-element vector constructor
stitching,9-element vector constructor
stitching,10-element vector constructor
stitching,14-element vector constructor
stitching,Vec
stitching,Vec
stitching,Vec
stitching,per-element multiplication
stitching,conversion to another data type
stitching,_Tp &
stitching,const _Tp &
stitching,"Vec< _Tp, cn > &"
stitching,_Tp &
stitching,const _Tp &
stitching,"Public Member Functions inherited from cv::Matx< _Tp, cn, 1 >"
stitching,default constructor
stitching,1x1 matrix
stitching,1x2 or 2x1 matrix
stitching,1x3 or 3x1 matrix
stitching,"1x4, 2x2 or 4x1 matrix"
stitching,1x5 or 5x1 matrix
stitching,"1x6, 2x3, 3x2 or 6x1 matrix"
stitching,1x7 or 7x1 matrix
stitching,"1x8, 2x4, 4x2 or 8x1 matrix"
stitching,"1x9, 3x3 or 9x1 matrix"
stitching,"1x10, 2x5 or 5x2 or 10x1 matrix"
stitching,"1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix"
stitching,"1x14, 2x7, 7x2 or 14x1 matrix"
stitching,"1x16, 4x4 or 16x1 matrix"
stitching,initialize from a plain array
stitching,initialize from an initializer list
stitching,"Matx< _Tp, m, 1 >"
stitching,extract the matrix column
stitching,double
stitching,dot product computed in double-precision arithmetics
stitching,diag_type
stitching,extract the matrix diagonal
stitching,"Matx< _Tp, m, n >"
stitching,divide two matrices element-wise
stitching,_Tp
stitching,dot product computed with the default precision
stitching,"Matx< _Tp, m1, n1 >"
stitching,extract part of the matrix
stitching,"Matx< _Tp, n, m >"
stitching,invert the matrix
stitching,"Matx< _Tp, m, n >"
stitching,multiply two matrices element-wise
stitching,conversion to another data type
stitching,_Tp &
stitching,const _Tp &
stitching,1D element access
stitching,_Tp &
stitching,const _Tp &
stitching,element access
stitching,"Matx< _Tp, m1, n1 >"
stitching,change the matrix shape
stitching,"Matx< _Tp, 1, n >"
stitching,extract the matrix row
stitching,"Matx< _Tp, n, l >"
stitching,solve linear system
stitching,"Vec< _Tp, n >"
stitching,"Matx< _Tp, n, m >"
stitching,transpose the matrix
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,virtual
stitching,void
stitching,virtual const char *
stitching,Public Member Functions
stitching,Basic ArucoDetector constructor.
stitching,void
stitching,Basic marker detection.
stitching,const DetectorParameters &
stitching,const Dictionary &
stitching,const RefineParameters &
stitching,virtual void
stitching,Reads algorithm parameters from a file storage.
stitching,void
stitching,Refine not detected markers based on the already detected and the board layout.
stitching,void
stitching,void
stitching,void
stitching,virtual void
stitching,Stores algorithm parameters in a file storage.
stitching,void
stitching,simplified API for language bindings
stitching,Public Member Functions inherited from cv::Algorithm
stitching,virtual
stitching,virtual void
stitching,Clears the algorithm state.
stitching,virtual bool
stitching,virtual String
stitching,virtual void
stitching,void
stitching,void
stitching,Public Member Functions
stitching,Rect
stitching,Rect
stitching,Rect
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,Point
stitching,Point
stitching,Point
stitching,Point
stitching,Projects the image.
stitching,Public Member Functions inherited from cv::detail::PlaneWarper
stitching,Construct an instance of the plane warper class.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Point2f
stitching,Projects the image point backward.
stitching,Point2f
stitching,Rect
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< PlaneProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,the default constructor
stitching,size_t
stitching,Public Member Functions
stitching,Ptr< detail::RotationWarper >
stitching,Public Member Functions inherited from cv::WarperCreator
stitching,virtual
stitching,Public Member Functions
stitching,std::vector< uchar >
stitching,std::vector< DMatch >
stitching,MatchesInfo &
stitching,Public Member Functions
stitching,void
stitching,Compensate exposure in the specified image.
stitching,void
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ExposureCompensator
stitching,virtual
stitching,void
stitching,bool
stitching,void
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,Ptr< detail::RotationWarper >
stitching,Public Member Functions inherited from cv::WarperCreator
stitching,virtual
stitching,Public Member Functions
stitching,Construct an instance of the plane warper class.
stitching,virtual Rect
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,virtual Point
stitching,Point
stitching,Projects the image.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Point2f
stitching,Projects the image point backward.
stitching,Point2f
stitching,Rect
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< PlaneProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,virtual
stitching,virtual void
stitching,Clears the algorithm state.
stitching,virtual bool
stitching,virtual String
stitching,virtual void
stitching,Reads algorithm parameters from a file storage.
stitching,virtual void
stitching,void
stitching,virtual void
stitching,Stores algorithm parameters in a file storage.
stitching,void
stitching,Public Member Functions
stitching,"Initializes only name, type and blobs fields."
stitching,virtual
stitching,virtual void
stitching,Automatic Halide scheduling based on layer hyper-parameters.
stitching,virtual void
stitching,"Computes and sets internal parameters according to inputs, outputs and blobs."
stitching,std::vector< Mat >
stitching,void
stitching,virtual void
stitching,"Computes and sets internal parameters according to inputs, outputs and blobs."
stitching,virtual void
stitching,"Given the input blobs, computes the output blobs."
stitching,virtual void
stitching,"Given the input blobs, computes the output blobs."
stitching,void
stitching,"Given the input blobs, computes the output blobs."
stitching,virtual int64
stitching,virtual bool
stitching,virtual void
stitching,Returns parameters of layers with channel-wise multiplication and addition.
stitching,virtual void
stitching,Returns scale and zeropoint of layers.
stitching,virtual Ptr< BackendNode >
stitching,Returns a CANN backend node.
stitching,virtual Ptr< BackendNode >
stitching,Returns a CUDA backend node.
stitching,virtual Ptr< BackendNode >
stitching,Returns Halide backend node.
stitching,virtual Ptr< BackendNode >
stitching,virtual Ptr< BackendNode >
stitching,Returns a TimVX backend node.
stitching,virtual Ptr< BackendNode >
stitching,virtual Ptr< BackendNode >
stitching,virtual int
stitching,Returns index of input blob into the input array.
stitching,virtual int
stitching,Returns index of output blob in output array.
stitching,void
stitching,Allocates layer and computes output.
stitching,virtual bool
stitching,"Tries to attach to the layer the subsequent activation layer, i.e. do the layer fusion in a partial case."
stitching,void
stitching,"Initializes only name, type and blobs fields."
stitching,virtual bool
stitching,Ask layer if it support specific backend for doing computations.
stitching,virtual Ptr< BackendNode >
stitching,Implement layers fusing.
stitching,virtual bool
stitching,Try to fuse current layer with a next one.
stitching,virtual bool
stitching,Tries to quantize the given layer and compute the quantization parameters required for fixed point implementation.
stitching,virtual void
stitching,"""Detaches"" all the layers, attached to particular layer."
stitching,virtual bool
stitching,Public Member Functions inherited from cv::Algorithm
stitching,virtual
stitching,virtual void
stitching,Clears the algorithm state.
stitching,virtual bool
stitching,virtual String
stitching,virtual void
stitching,Reads algorithm parameters from a file storage.
stitching,virtual void
stitching,void
stitching,virtual void
stitching,Stores algorithm parameters in a file storage.
stitching,void
stitching,Public Member Functions
stitching,void
stitching,Estimates seams.
stitching,Public Member Functions inherited from cv::detail::SeamFinder
stitching,virtual
stitching,Public Member Functions
stitching,void
stitching,Public Member Functions inherited from cv::detail::BlocksCompensator
stitching,void
stitching,Compensate exposure in the specified image.
stitching,Size
stitching,void
stitching,int
stitching,int
stitching,double
stitching,void
stitching,void
stitching,void
stitching,void
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ExposureCompensator
stitching,virtual
stitching,void
stitching,bool
stitching,void
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,Construct an instance of the cylindrical warper class.
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,Point
stitching,Projects the image.
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< CylindricalProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,"Constructs a ""best of 2 nearest"" matcher that expects affine transformation between images."
stitching,Public Member Functions inherited from cv::detail::BestOf2NearestMatcher
stitching,"Constructs a ""best of 2 nearest"" matcher."
stitching,void
stitching,Frees unused memory allocated before if there is any.
stitching,Public Member Functions inherited from cv::detail::FeaturesMatcher
stitching,virtual
stitching,bool
stitching,void
stitching,void
stitching,Performs images matching.
stitching,Public Member Functions
stitching,Mat
stitching,CameraParams &
stitching,Public Member Functions
stitching,"Constructs a ""best of 2 nearest"" matcher."
stitching,void
stitching,Frees unused memory allocated before if there is any.
stitching,Public Member Functions inherited from cv::detail::FeaturesMatcher
stitching,virtual
stitching,bool
stitching,void
stitching,void
stitching,Performs images matching.
stitching,Public Member Functions
stitching,MatStep &
stitching,const size_t &
stitching,size_t &
stitching,Public Member Functions
stitching,void
stitching,Blends and returns the final pano.
stitching,Rect
stitching,void
stitching,Processes the image.
stitching,void
stitching,void
stitching,float
stitching,Public Member Functions inherited from cv::detail::Blender
stitching,virtual
stitching,virtual void
stitching,Prepares the blender for blending.
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< TransverseMercatorProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,Common Board constructor.
stitching,void
stitching,Draw a planar board.
stitching,const Dictionary &
stitching,return the Dictionary of markers employed for this board
stitching,const std::vector< int > &
stitching,const std::vector< std::vector< Point3f > > &
stitching,return array of object points of all the marker corners in the board.
stitching,const Point3f &
stitching,void
stitching,Public Member Functions
stitching,std::vector< KeyPoint >
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::BundleAdjusterBase
stitching,double
stitching,Mat
stitching,void
stitching,void
stitching,void
stitching,TermCriteria
stitching,Public Member Functions inherited from cv::detail::Estimator
stitching,virtual
stitching,bool
stitching,Estimates camera parameters.
stitching,Public Member Functions
stitching,Ptr< detail::RotationWarper >
stitching,Public Member Functions inherited from cv::WarperCreator
stitching,virtual
stitching,Public Member Functions
stitching,void
stitching,Compensate exposure in the specified image.
stitching,void
stitching,std::vector< Scalar >
stitching,void
stitching,int
stitching,double
stitching,void
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ExposureCompensator
stitching,virtual
stitching,void
stitching,bool
stitching,void
stitching,Public Member Functions
stitching,bool
stitching,Public Member Functions
stitching,virtual
stitching,virtual const char *
stitching,virtual void
stitching,Public Member Functions
stitching,Ptr< detail::RotationWarper >
stitching,Public Member Functions inherited from cv::WarperCreator
stitching,virtual
stitching,Public Member Functions
stitching,void
stitching,Blends and returns the final pano.
stitching,void
stitching,Processes the image.
stitching,int
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::Blender
stitching,virtual
stitching,virtual void
stitching,Prepares the blender for blending.
stitching,Public Member Functions
stitching,double
stitching,Mat
stitching,void
stitching,void
stitching,void
stitching,TermCriteria
stitching,Public Member Functions inherited from cv::detail::Estimator
stitching,virtual
stitching,bool
stitching,Estimates camera parameters.
stitching,Public Member Functions
stitching,the default constructor
stitching,the copy constructor
stitching,the full constructor setting the iterator to the first sparse matrix element
stitching,the full constructor setting the iterator to the specified sparse matrix element
stitching,SparseMat::Node *
stitching,SparseMatIterator &
stitching,moves iterator to the next element
stitching,SparseMatIterator
stitching,moves iterator to the next element
stitching,SparseMatIterator &
stitching,the assignment operator
stitching,template<typename _Tp >
stitching,_Tp &
stitching,returns read-write reference to the current sparse matrix element
stitching,Public Member Functions inherited from cv::SparseMatConstIterator
stitching,the default constructor
stitching,the full constructor setting the iterator to the first sparse matrix element
stitching,the copy constructor
stitching,const SparseMat::Node *
stitching,returns the current node of the sparse matrix. it.node->idx is the current element index
stitching,SparseMatConstIterator &
stitching,moves iterator to the next element
stitching,SparseMatConstIterator
stitching,moves iterator to the next element
stitching,SparseMatConstIterator &
stitching,moves iterator to the previous element
stitching,SparseMatConstIterator
stitching,moves iterator to the previous element
stitching,SparseMatConstIterator &
stitching,the assignment operator
stitching,void
stitching,moves iterator to the element after the last element
stitching,template<typename _Tp >
stitching,const _Tp &
stitching,template method returning the current matrix element
stitching,Public Member Functions
stitching,bool
stitching,bool
stitching,Public Member Functions
stitching,the default constructor
stitching,the full constructor taking arbitrary number of n-dim matrices
stitching,the full constructor taking arbitrary number of n-dim matrices
stitching,void
stitching,the separate iterator initialization method
stitching,NAryMatIterator &
stitching,proceeds to the next plane of every iterated matrix
stitching,NAryMatIterator
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::BundleAdjusterBase
stitching,double
stitching,Mat
stitching,void
stitching,void
stitching,void
stitching,TermCriteria
stitching,Public Member Functions inherited from cv::detail::Estimator
stitching,virtual
stitching,bool
stitching,Estimates camera parameters.
stitching,Public Member Functions
stitching,"the constructor, created by ""matrix << firstValue"" operator, where matrix is cv::Mat"
stitching,another form of conversion operator
stitching,template<typename T2 >
stitching,MatCommaInitializer_< _Tp > &
stitching,the operator that takes the next value and put it to the matrix
stitching,Public Member Functions
stitching,Construct an instance of the spherical warper class.
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,Point
stitching,Projects the image.
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< SphericalProjector >
stitching,float
stitching,void
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,virtual
stitching,virtual Ptr< detail::RotationWarper >
stitching,Public Member Functions
stitching,void
stitching,Compensate exposure in the specified image.
stitching,void
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::BlocksCompensator
stitching,Size
stitching,int
stitching,int
stitching,double
stitching,void
stitching,void
stitching,void
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ExposureCompensator
stitching,virtual
stitching,void
stitching,bool
stitching,void
stitching,Public Member Functions
stitching,Ptr< detail::RotationWarper >
stitching,Public Member Functions inherited from cv::WarperCreator
stitching,virtual
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< SphericalPortraitProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::BestOf2NearestMatcher
stitching,"Constructs a ""best of 2 nearest"" matcher."
stitching,void
stitching,Frees unused memory allocated before if there is any.
stitching,Public Member Functions inherited from cv::detail::FeaturesMatcher
stitching,virtual
stitching,bool
stitching,void
stitching,void
stitching,Performs images matching.
stitching,Public Member Functions
stitching,bool
stitching,Impl *
stitching,Platform &
stitching,Platform &
stitching,void *
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< PlanePortraitProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< FisheyeProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,Rect
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,Point
stitching,Point
stitching,Projects the image.
stitching,Public Member Functions inherited from cv::detail::CylindricalWarper
stitching,Construct an instance of the cylindrical warper class.
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< CylindricalProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,Basic CharucoDetector constructor.
stitching,void
stitching,detect aruco markers and interpolate position of ChArUco board corners
stitching,void
stitching,Detect ChArUco Diamond markers.
stitching,const CharucoBoard &
stitching,const CharucoParameters &
stitching,const DetectorParameters &
stitching,const RefineParameters &
stitching,void
stitching,void
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::Algorithm
stitching,virtual
stitching,virtual void
stitching,Clears the algorithm state.
stitching,virtual bool
stitching,virtual String
stitching,virtual void
stitching,Reads algorithm parameters from a file storage.
stitching,virtual void
stitching,void
stitching,virtual void
stitching,Stores algorithm parameters in a file storage.
stitching,void
stitching,Public Member Functions
stitching,bool
stitching,int
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::BundleAdjusterBase
stitching,double
stitching,Mat
stitching,void
stitching,void
stitching,void
stitching,TermCriteria
stitching,Public Member Functions inherited from cv::detail::Estimator
stitching,virtual
stitching,bool
stitching,Estimates camera parameters.
stitching,Public Member Functions
stitching,virtual
stitching,virtual void
stitching,Frees unused memory allocated before if there is any.
stitching,bool
stitching,void
stitching,void
stitching,Performs images matching.
stitching,Public Member Functions
stitching,virtual
stitching,virtual Rect
stitching,Builds the projection maps according to the given camera data.
stitching,virtual float
stitching,virtual void
stitching,virtual Point
stitching,Projects the image.
stitching,virtual void
stitching,Projects the image backward.
stitching,virtual Point2f
stitching,Projects the image point.
stitching,virtual Point2f
stitching,Projects the image point backward.
stitching,virtual Rect
stitching,Public Member Functions
stitching,void
stitching,Compensate exposure in the specified image.
stitching,Size
stitching,void
stitching,int
stitching,int
stitching,double
stitching,void
stitching,void
stitching,void
stitching,void
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ExposureCompensator
stitching,virtual
stitching,void
stitching,bool
stitching,void
stitching,Public Member Functions
stitching,default constructor
stitching,Complex
stitching,conjugation
stitching,template<typename T2 >
stitching,conversion to another data type
stitching,Public Member Functions
stitching,Rect
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,Point
stitching,Point
stitching,Projects the image.
stitching,Public Member Functions inherited from cv::detail::SphericalWarper
stitching,Construct an instance of the spherical warper class.
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< SphericalProjector >
stitching,float
stitching,void
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,virtual void
stitching,virtual void
stitching,Estimates seams.
stitching,Public Member Functions inherited from cv::detail::SeamFinder
stitching,virtual
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::Estimator
stitching,virtual
stitching,bool
stitching,Estimates camera parameters.
stitching,Public Member Functions
stitching,int
stitching,Returns index of input blob into the input array.
stitching,int
stitching,Returns index of output blob in output array.
stitching,virtual void
stitching,"Specifies shape of output blob which will be [[T], N] + outTailShape."
stitching,virtual void
stitching,virtual void
stitching,Specifies either interpret first dimension of input blob as timestamp dimension either as sample.
stitching,virtual void
stitching,Set trained weights for LSTM layer.
stitching,Public Member Functions inherited from cv::dnn::Layer
stitching,"Initializes only name, type and blobs fields."
stitching,virtual
stitching,virtual void
stitching,Automatic Halide scheduling based on layer hyper-parameters.
stitching,virtual void
stitching,"Computes and sets internal parameters according to inputs, outputs and blobs."
stitching,std::vector< Mat >
stitching,void
stitching,virtual void
stitching,"Computes and sets internal parameters according to inputs, outputs and blobs."
stitching,virtual void
stitching,"Given the input blobs, computes the output blobs."
stitching,virtual void
stitching,"Given the input blobs, computes the output blobs."
stitching,void
stitching,"Given the input blobs, computes the output blobs."
stitching,virtual int64
stitching,virtual bool
stitching,virtual void
stitching,Returns parameters of layers with channel-wise multiplication and addition.
stitching,virtual void
stitching,Returns scale and zeropoint of layers.
stitching,virtual Ptr< BackendNode >
stitching,Returns a CANN backend node.
stitching,virtual Ptr< BackendNode >
stitching,Returns a CUDA backend node.
stitching,virtual Ptr< BackendNode >
stitching,Returns Halide backend node.
stitching,virtual Ptr< BackendNode >
stitching,virtual Ptr< BackendNode >
stitching,Returns a TimVX backend node.
stitching,virtual Ptr< BackendNode >
stitching,virtual Ptr< BackendNode >
stitching,void
stitching,Allocates layer and computes output.
stitching,virtual bool
stitching,"Tries to attach to the layer the subsequent activation layer, i.e. do the layer fusion in a partial case."
stitching,void
stitching,"Initializes only name, type and blobs fields."
stitching,virtual bool
stitching,Ask layer if it support specific backend for doing computations.
stitching,virtual Ptr< BackendNode >
stitching,Implement layers fusing.
stitching,virtual bool
stitching,Try to fuse current layer with a next one.
stitching,virtual bool
stitching,Tries to quantize the given layer and compute the quantization parameters required for fixed point implementation.
stitching,virtual void
stitching,"""Detaches"" all the layers, attached to particular layer."
stitching,virtual bool
stitching,Public Member Functions inherited from cv::Algorithm
stitching,virtual
stitching,virtual void
stitching,Clears the algorithm state.
stitching,virtual bool
stitching,virtual String
stitching,virtual void
stitching,Reads algorithm parameters from a file storage.
stitching,virtual void
stitching,void
stitching,virtual void
stitching,Stores algorithm parameters in a file storage.
stitching,void
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< PaniniPortraitProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::BundleAdjusterBase
stitching,double
stitching,Mat
stitching,void
stitching,void
stitching,void
stitching,TermCriteria
stitching,Public Member Functions inherited from cv::detail::Estimator
stitching,virtual
stitching,bool
stitching,Estimates camera parameters.
stitching,Public Member Functions
stitching,default constructor
stitching,Rect
stitching,returns the minimal up-right integer rectangle containing the rotated rectangle
stitching,Rect2f
stitching,void
stitching,void
stitching,Public Member Functions
stitching,void
stitching,Estimates seams.
stitching,Public Member Functions inherited from cv::detail::SeamFinder
stitching,virtual
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< PaniniProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,void
stitching,Public Member Functions
stitching,void
stitching,int
stitching,int
stitching,Public Member Functions
stitching,void
stitching,void
stitching,template<typename B >
stitching,B
stitching,int
stitching,template<typename B >
stitching,B
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::BundleAdjusterBase
stitching,double
stitching,Mat
stitching,void
stitching,void
stitching,void
stitching,TermCriteria
stitching,Public Member Functions inherited from cv::detail::Estimator
stitching,virtual
stitching,bool
stitching,Estimates camera parameters.
stitching,Public Member Functions
stitching,void
stitching,Release associated thread data.
stitching,void
stitching,std::vector< T * > &
stitching,Get and detach data from all threads.
stitching,void
stitching,Get data from all threads.
stitching,void
stitching,Release associated thread data and free TLS key.
stitching,Public Member Functions inherited from cv::TLSData< T >
stitching,void
stitching,Release associated thread data.
stitching,T *
stitching,Get data associated with key.
stitching,T &
stitching,Get data associated with key.
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< MercatorProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,virtual void
stitching,Estimates seams.
stitching,Public Member Functions inherited from cv::detail::SeamFinder
stitching,virtual
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< CylindricalPortraitProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,Public Member Functions
stitching,Construct an instance of the affine warper class.
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,Point
stitching,Projects the image.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::PlaneWarper
stitching,Construct an instance of the plane warper class.
stitching,virtual Rect
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,virtual Point
stitching,Point
stitching,Projects the image.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Point2f
stitching,Projects the image point backward.
stitching,Point2f
stitching,Rect
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< PlaneProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,Ptr< detail::RotationWarper >
stitching,Public Member Functions inherited from cv::WarperCreator
stitching,virtual
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< CompressedRectilinearProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,Public Member Functions inherited from cv::detail::RotationWarperBase< CompressedRectilinearPortraitProjector >
stitching,Rect
stitching,Builds the projection maps according to the given camera data.
stitching,float
stitching,void
stitching,Point
stitching,Projects the image.
stitching,void
stitching,Projects the image backward.
stitching,Point2f
stitching,Projects the image point.
stitching,Point2f
stitching,Projects the image point backward.
stitching,Rect
stitching,Public Member Functions inherited from cv::detail::RotationWarper
stitching,virtual
stitching,Public Member Functions
stitching,Ptr< detail::RotationWarper >
stitching,Public Member Functions inherited from cv::WarperCreator
stitching,virtual
stitching,Public Member Functions
stitching,Ptr< detail::RotationWarper >
stitching,Public Member Functions inherited from cv::WarperCreator
stitching,virtual
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,virtual
stitching,bool
stitching,Estimates camera parameters.
stitching,Public Member Functions
stitching,void
stitching,Public Member Functions
stitching,Ptr< detail::RotationWarper >
stitching,Public Member Functions inherited from cv::WarperCreator
stitching,virtual
stitching,Public Member Functions
stitching,void
stitching,void
stitching,Public Member Functions inherited from cv::detail::ProjectorBase
stitching,void
stitching,Public Member Functions
stitching,virtual
stitching,virtual UMatData *
stitching,virtual bool
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,virtual BufferPoolController *
stitching,virtual void
stitching,virtual void
stitching,virtual void
stitching,Public Member Functions
stitching,int
stitching,bool
stitching,Size
stitching,bool
stitching,int &
stitching,const int &
stitching,Public Member Functions
stitching,virtual void
stitching,Public Member Functions inherited from cv::detail::Timelapser
stitching,virtual
stitching,virtual const UMat &
stitching,virtual void
stitching,Public Member Functions
stitching,the default constructor
stitching,the full constructor setting the iterator to the first sparse matrix element
stitching,the copy constructor
stitching,const SparseMat::Node *
stitching,returns the current node of the sparse matrix. it.node->idx is the current element index
stitching,SparseMatConstIterator &
stitching,moves iterator to the next element
stitching,SparseMatConstIterator
stitching,moves iterator to the next element
stitching,SparseMatConstIterator &
stitching,moves iterator to the previous element
stitching,SparseMatConstIterator
stitching,moves iterator to the previous element
stitching,SparseMatConstIterator &
stitching,the assignment operator
stitching,void
stitching,moves iterator to the element after the last element
stitching,template<typename _Tp >
stitching,const _Tp &
stitching,template method returning the current matrix element
video,Public Member Functions
video,virtual
video,virtual void
video,Initialize the tracker with a known bounding box that surrounded the target.
video,virtual bool
video,"Update the tracker, find the new most likely bounding box for the target."
video,Public Member Functions
video,virtual void
video,virtual float
video,Weight of the smoothness term.
video,virtual float
video,Weight of the color constancy term.
video,virtual float
video,Norm value shift for robust penalizer.
video,virtual int
video,virtual float
video,Weight of the gradient constancy term.
video,virtual float
video,Relaxation factor in SOR.
video,virtual int
video,virtual void
video,Weight of the smoothness term.
video,virtual void
video,Weight of the color constancy term.
video,virtual void
video,Norm value shift for robust penalizer.
video,virtual void
video,virtual void
video,Weight of the gradient constancy term.
video,virtual void
video,Relaxation factor in SOR.
video,virtual void
video,Public Member Functions inherited from cv::DenseOpticalFlow
video,virtual void
video,Calculates an optical flow.
video,virtual void
video,Releases all inner buffers.
video,Public Member Functions inherited from cv::Algorithm
video,virtual
video,virtual void
video,Clears the algorithm state.
video,virtual bool
video,virtual String
video,virtual void
video,Reads algorithm parameters from a file storage.
video,virtual void
video,void
video,virtual void
video,Stores algorithm parameters in a file storage.
video,void
video,Public Member Functions
video,virtual
video,virtual void
video,Clears the algorithm state.
video,virtual bool
video,virtual String
video,virtual void
video,Reads algorithm parameters from a file storage.
video,virtual void
video,void
video,virtual void
video,Stores algorithm parameters in a file storage.
video,void
video,Public Member Functions
video,virtual int
video,virtual int
video,virtual double
video,virtual TermCriteria
video,virtual Size
video,virtual void
video,virtual void
video,virtual void
video,virtual void
video,virtual void
video,Public Member Functions inherited from cv::SparseOpticalFlow
video,virtual void
video,Calculates a sparse optical flow.
video,Public Member Functions inherited from cv::Algorithm
video,virtual
video,virtual void
video,Clears the algorithm state.
video,virtual bool
video,virtual String
video,virtual void
video,Reads algorithm parameters from a file storage.
video,virtual void
video,void
video,virtual void
video,Stores algorithm parameters in a file storage.
video,void
video,Public Member Functions
video,virtual void
video,Computes a foreground mask.
video,virtual double
video,"Returns the ""background ratio"" parameter of the algorithm."
video,virtual double
video,Returns the complexity reduction threshold.
video,virtual bool
video,Returns the shadow detection flag.
video,virtual int
video,Returns the number of last frames that affect the background model.
video,virtual int
video,Returns the number of gaussian components in the background model.
video,virtual double
video,Returns the shadow threshold.
video,virtual int
video,Returns the shadow value.
video,virtual double
video,Returns the initial variance of each gaussian component.
video,virtual double
video,virtual double
video,virtual double
video,Returns the variance threshold for the pixel-model match.
video,virtual double
video,Returns the variance threshold for the pixel-model match used for new mixture component generation.
video,virtual void
video,"Sets the ""background ratio"" parameter of the algorithm."
video,virtual void
video,Sets the complexity reduction threshold.
video,virtual void
video,Enables or disables shadow detection.
video,virtual void
video,Sets the number of last frames that affect the background model.
video,virtual void
video,Sets the number of gaussian components in the background model.
video,virtual void
video,Sets the shadow threshold.
video,virtual void
video,Sets the shadow value.
video,virtual void
video,Sets the initial variance of each gaussian component.
video,virtual void
video,virtual void
video,virtual void
video,Sets the variance threshold for the pixel-model match.
video,virtual void
video,Sets the variance threshold for the pixel-model match used for new mixture component generation.
video,Public Member Functions inherited from cv::BackgroundSubtractor
video,virtual void
video,Computes a background image.
video,Public Member Functions inherited from cv::Algorithm
video,virtual
video,virtual void
video,Clears the algorithm state.
video,virtual bool
video,virtual String
video,virtual void
video,Reads algorithm parameters from a file storage.
video,virtual void
video,void
video,virtual void
video,Stores algorithm parameters in a file storage.
video,void
video,Public Member Functions
video,virtual void
video,Computes a foreground mask.
video,virtual void
video,Computes a background image.
video,Public Member Functions inherited from cv::Algorithm
video,virtual
video,virtual void
video,Clears the algorithm state.
video,virtual bool
video,virtual String
video,virtual void
video,Reads algorithm parameters from a file storage.
video,virtual void
video,void
video,virtual void
video,Stores algorithm parameters in a file storage.
video,void
video,Public Member Functions
video,virtual bool
video,Returns the shadow detection flag.
video,virtual double
video,Returns the threshold on the squared distance between the pixel and the sample.
video,virtual int
video,Returns the number of last frames that affect the background model.
video,virtual int
video,"Returns the number of neighbours, the k in the kNN."
video,virtual int
video,Returns the number of data samples in the background model.
video,virtual double
video,Returns the shadow threshold.
video,virtual int
video,Returns the shadow value.
video,virtual void
video,Enables or disables shadow detection.
video,virtual void
video,Sets the threshold on the squared distance.
video,virtual void
video,Sets the number of last frames that affect the background model.
video,virtual void
video,Sets the k in the kNN. How many nearest neighbours need to match.
video,virtual void
video,Sets the number of data samples in the background model.
video,virtual void
video,Sets the shadow threshold.
video,virtual void
video,Sets the shadow value.
video,Public Member Functions inherited from cv::BackgroundSubtractor
video,virtual void
video,Computes a foreground mask.
video,virtual void
video,Computes a background image.
video,Public Member Functions inherited from cv::Algorithm
video,virtual
video,virtual void
video,Clears the algorithm state.
video,virtual bool
video,virtual String
video,virtual void
video,Reads algorithm parameters from a file storage.
video,virtual void
video,void
video,virtual void
video,Stores algorithm parameters in a file storage.
video,void
video,Public Member Functions
video,default constructor
video,Rect
video,returns the minimal up-right integer rectangle containing the rotated rectangle
video,Rect2f
video,void
video,void
video,Public Member Functions
video,const Mat &
video,Updates the predicted state from the measurement.
video,void
video,Re-initializes Kalman filter. The previous content is destroyed.
video,const Mat &
video,Computes a predicted state.
video,Public Member Functions
video,virtual void
video,Calculates a sparse optical flow.
video,Public Member Functions inherited from cv::Algorithm
video,virtual
video,virtual void
video,Clears the algorithm state.
video,virtual bool
video,virtual String
video,virtual void
video,Reads algorithm parameters from a file storage.
video,virtual void
video,void
video,virtual void
video,Stores algorithm parameters in a file storage.
video,void
video,Public Member Functions
video,virtual bool
video,virtual int
video,virtual int
video,virtual int
video,virtual int
video,virtual double
video,virtual double
video,virtual int
video,virtual void
video,virtual void
video,virtual void
video,virtual void
video,virtual void
video,virtual void
video,virtual void
video,virtual void
video,Public Member Functions inherited from cv::DenseOpticalFlow
video,virtual void
video,Calculates an optical flow.
video,virtual void
video,Releases all inner buffers.
video,Public Member Functions inherited from cv::Algorithm
video,virtual
video,virtual void
video,Clears the algorithm state.
video,virtual bool
video,virtual String
video,virtual void
video,Reads algorithm parameters from a file storage.
video,virtual void
video,void
video,virtual void
video,Stores algorithm parameters in a file storage.
video,void
video,Public Member Functions
video,virtual void
video,Calculates an optical flow.
video,virtual void
video,Releases all inner buffers.
video,Public Member Functions inherited from cv::Algorithm
video,virtual
video,virtual void
video,Clears the algorithm state.
video,virtual bool
video,virtual String
video,virtual void
video,Reads algorithm parameters from a file storage.
video,virtual void
video,void
video,virtual void
video,Stores algorithm parameters in a file storage.
video,void
videoio,Public Member Functions
videoio,virtual
videoio,void
videoio,virtual const char *
videoio,Public Member Functions
videoio,Default constructor.
videoio,Opens a video file or a capturing device or an IP video stream for video capturing with API Preference and parameters.
videoio,Opens a video file or a capturing device or an IP video stream for video capturing with API Preference.
videoio,Opens a camera for video capturing with API Preference and parameters.
videoio,Opens a camera for video capturing.
videoio,virtual
videoio,Default destructor.
videoio,virtual double
videoio,Returns the specified VideoCapture property.
videoio,String
videoio,Returns used backend API name.
videoio,bool
videoio,query if exception mode is active
videoio,virtual bool
videoio,Grabs the next frame from video file or capturing device.
videoio,virtual bool
videoio,Returns true if video capturing has been initialized already.
videoio,virtual bool
videoio,Opens a video file or a capturing device or an IP video stream for video capturing with API Preference and parameters.
videoio,virtual bool
videoio,Opens a video file or a capturing device or an IP video stream for video capturing.
videoio,virtual bool
videoio,Opens a camera for video capturing with API Preference and parameters.
videoio,virtual bool
videoio,Opens a camera for video capturing.
videoio,virtual VideoCapture &
videoio,Stream operator to read the next video frame.
videoio,virtual VideoCapture &
videoio,virtual bool
videoio,"Grabs, decodes and returns the next video frame."
videoio,virtual void
videoio,Closes video file or capturing device.
videoio,virtual bool
videoio,Decodes and returns the grabbed video frame.
videoio,virtual bool
videoio,Sets a property in the VideoCapture.
videoio,void
videoio,Public Member Functions
videoio,bool
videoio,int
videoio,Public Member Functions
videoio,Default constructors.
videoio,virtual
videoio,Default destructor.
videoio,virtual double
videoio,Returns the specified VideoWriter property.
videoio,String
videoio,Returns used backend API name.
videoio,virtual bool
videoio,Returns true if video writer has been successfully initialized.
videoio,bool
videoio,bool
videoio,bool
videoio,virtual bool
videoio,Initializes or reinitializes video writer.
videoio,virtual VideoWriter &
videoio,Stream operator to write the next video frame.
videoio,virtual VideoWriter &
videoio,virtual void
videoio,Closes the video writer.
videoio,virtual bool
videoio,Sets a property in the VideoWriter.
videoio,virtual void
videoio,Writes the next video frame.
