Module,Text
client,Class Summary Class Description EmbeddedSolrServer SolrClient that connects directly to a CoreContainer.
client,Enum Summary Enum Description EmbeddedSolrServer.RequestWriterSupplier
client,SolrClient that connects directly to a CoreContainer.
cloud,Interface Summary Interface Description ClusterSingleton Intended for components that should be enabled only one instance per cluster. DistributedCollectionLockFactory DistributedConfigSetLockFactory DistributedLock A lock that can be used across cluster nodes. Overseer.Message OverseerMessageHandler Interface for processing messages received by an OverseerTaskProcessor OverseerMessageHandler.Lock OverseerTaskProcessor.OverseerMessageHandlerSelector An interface to determine which OverseerMessageHandler handles a given message. RecoveryStrategy.RecoveryListener
cloud,"Class Summary Class Description ActionThrottle ActiveReplicaWatcher Watch for replicas to become Replica.State.ACTIVE. CloudDescriptor SolrCloud metadata attached to a CoreDescriptor. CloudUtil ConfigSetApiLockFactory This class implements a higher level locking abstraction for the Config Set API using lower level read and write locks. ConfigSetCmds This class contains methods dealing with Config Sets and called for Config Set API execution, called from the OverseerConfigSetMessageHandler or from DistributedCollectionConfigSetCommandRunner.runConfigSetCommand(org.apache.solr.response.SolrQueryResponse, org.apache.solr.common.params.ConfigSetParams.ConfigSetAction, java.util.Map<java.lang.String, java.lang.Object>, long) depending on whether Collection and Config Set APIs are Overseer based or distributed. DistributedApiAsyncTracker Class holding the implementation required for tracking asynchronous Collection API (or other) tasks when the Collection API is distributed. DistributedClusterStateUpdater Gives access to distributed cluster state update methods and allows code to inquire whether distributed state update is enabled. DistributedClusterStateUpdater.StateChangeRecorder Class handling the distributed updates of collection's Zookeeper files state.json based on multiple updates applied to a single collection (as is sometimes done by *Cmd classes implementing the Collection API commands). DistributedMap A distributed map. DistributedMultiLock A lock as acquired for running a single API command (Collection or Config Set or anything else in the future). ElectionContext LeaderElector Leader Election process. LockTree This is a utility class that offers fine grained locking for various Collection Operations This class is designed for single threaded operation. Overseer Cluster leader. Overseer.OverseerThread OverseerCollectionConfigSetProcessor An OverseerTaskProcessor that handles: 1) collection-related Overseer messages 2) configset-related Overseer messages OverseerConfigSetMessageHandler A OverseerMessageHandler that handles ConfigSets API related overseer messages. OverseerNodePrioritizer Responsible for prioritization of Overseer nodes, for example with the ADDROLE collection command. OverseerSolrResponse OverseerSolrResponseSerializer OverseerTaskProcessor A generic processor run in the Overseer, used for handling items added to a distributed work queue. OverseerTaskQueue A ZkDistributedQueue augmented with helper methods specific to the overseer task queues. OverseerTaskQueue.QueueEvent RecoveringCoreTermWatcher Start recovery of a core if its term is less than leader's term RecoveryStrategy This class may change in future and customisations are not supported between versions in terms of API or back compat behaviour. RecoveryStrategy.Builder RefreshCollectionMessage Refresh the ClusterState for a given collection. ReplicateFromLeader SizeLimitedDistributedMap A size limited distributed map maintained in zk. SolrZkServer Stats Used to hold statistics about some SolrCloud operations. Stats.FailedOp Stats.Stat SyncStrategy ZkCLI ZkConfigSetService SolrCloud Zookeeper ConfigSetService impl. ZkController Handle ZooKeeper interactions. ZkDistributedCollectionLockFactory A distributed lock implementation using Zookeeper ""directory"" nodes created within a collection znode hierarchy, for use with the distributed Collection API implementation. ZkDistributedConfigSetLockFactory A distributed lock implementation using Zookeeper ""directory"" nodes created within a collection znode hierarchy, for use with the distributed Collection API implementation. ZkDistributedQueue A ZK-based distributed queue. ZkShardTerms Class used for interact with a ZK term node. ZkSolrResourceLoader ResourceLoader that works with ZooKeeper. ZkSolrResourceLoader.ZkByteArrayInputStream"
cloud,Enum Summary Enum Description ClusterSingleton.State DistributedClusterStateUpdater.MutatingCommand Naming of enum instances are the mutator object name (e.g.
cloud,Exception Summary Exception Description ZkController.NotInClusterStateException Thrown during pre register process if the replica is not present in clusterstate ZkController.ResourceModifiedInZkException
cloud,Watch for replicas to become Replica.State.ACTIVE.
cloud,SolrCloud metadata attached to a CoreDescriptor.
cloud,This class implements a higher level locking abstraction for the Config Set API using lower level read and write locks.
cloud,"This class contains methods dealing with Config Sets and called for Config Set API execution, called from the OverseerConfigSetMessageHandler or from DistributedCollectionConfigSetCommandRunner.runConfigSetCommand(org.apache.solr.response.SolrQueryResponse, org.apache.solr.common.params.ConfigSetParams.ConfigSetAction, java.util.Map<java.lang.String, java.lang.Object>, long) depending on whether Collection and Config Set APIs are Overseer based or distributed."
cloud,Class holding the implementation required for tracking asynchronous Collection API (or other) tasks when the Collection API is distributed.
cloud,Gives access to distributed cluster state update methods and allows code to inquire whether distributed state update is enabled.
cloud,Class handling the distributed updates of collection's Zookeeper files state.json based on multiple updates applied to a single collection (as is sometimes done by *Cmd classes implementing the Collection API commands).
cloud,A distributed map.
cloud,A lock as acquired for running a single API command (Collection or Config Set or anything else in the future).
cloud,Leader Election process.
cloud,This is a utility class that offers fine grained locking for various Collection Operations This class is designed for single threaded operation.
cloud,Cluster leader.
cloud,An OverseerTaskProcessor that handles: 1) collection-related Overseer messages 2) configset-related Overseer messages
cloud,A OverseerMessageHandler that handles ConfigSets API related overseer messages.
cloud,"Responsible for prioritization of Overseer nodes, for example with the ADDROLE collection command."
cloud,"A generic processor run in the Overseer, used for handling items added to a distributed work queue."
cloud,A ZkDistributedQueue augmented with helper methods specific to the overseer task queues.
cloud,Start recovery of a core if its term is less than leader's term
cloud,This class may change in future and customisations are not supported between versions in terms of API or back compat behaviour.
cloud,Refresh the ClusterState for a given collection.
cloud,A size limited distributed map maintained in zk.
cloud,Used to hold statistics about some SolrCloud operations.
cloud,SolrCloud Zookeeper ConfigSetService impl.
cloud,Handle ZooKeeper interactions.
cloud,"A distributed lock implementation using Zookeeper ""directory"" nodes created within a collection znode hierarchy, for use with the distributed Collection API implementation."
cloud,"A distributed lock implementation using Zookeeper ""directory"" nodes created within a collection znode hierarchy, for use with the distributed Collection API implementation."
cloud,A ZK-based distributed queue.
cloud,Class used for interact with a ZK term node.
cloud,ResourceLoader that works with ZooKeeper.
cloud,"Interface Summary Interface Description Assign.AssignStrategy Strategy for assigning replicas to nodes. CollApiCmds.CollectionApiCommand Interface implemented by all Collection API commands. CollectionCommandContext Data passed to Collection API command execution, to allow calls from either the OverseerCollectionMessageHandler when commands are executed on the Overseer, or - in a future change - allow Collection API commands to be executed in a distributed way, unrelated to and not depending upon Overseer abstractions (including overseer collection message handling)."
cloud,"Class Summary Class Description AddReplicaCmd AddReplicaCmd.CreateReplica A data structure to keep all information required to create a new replica in one place. Assign Assign.AssignRequest Assign.AssignRequestBuilder BackupCmd BalanceReplicasCmd CategoryRoutedAlias CollApiCmds This class contains ""smaller"" Collection API commands implementation, the interface implemented by all commands and the class mapping a collection action to the actual command. CollApiCmds.AddReplicaPropCmd CollApiCmds.BalanceShardsUniqueCmd CollApiCmds.CommandMap Map CollectionParams.CollectionAction to instances of CollApiCmds.CollectionApiCommand and being usable by both OverseerCollectionMessageHandler and DistributedCollectionConfigSetCommandRunner so that the mappings do not have to be maintained in two places. CollApiCmds.DeleteReplicaPropCmd CollApiCmds.MockOperationCmd CollApiCmds.ModifyCollectionCmd CollApiCmds.RebalanceLeadersCmd CollApiCmds.ReloadCollectionCmd CollApiCmds.TraceAwareCommand CollectionApiLockFactory This class implements a higher level locking abstraction for the Collection API using lower level read and write locks. CollectionHandlingUtils This class contains helper methods used by commands of the Collection API. CollectionHandlingUtils.ShardRequestTracker CreateAliasCmd CreateCollectionCmd CreateShardCmd CreateSnapshotCmd This class implements the functionality of creating a collection level snapshot. DeleteAliasCmd DeleteBackupCmd An overseer command used to delete files associated with incremental backups. DeleteCollectionCmd DeleteNodeCmd DeleteReplicaCmd DeleteShardCmd DeleteSnapshotCmd This class implements the functionality of deleting a collection level snapshot. DimensionalRoutedAlias DistributedCollectionCommandContext DistributedCollectionConfigSetCommandRunner Class for execution Collection API and Config Set API commands in a distributed way, without going through Overseer and OverseerCollectionMessageHandler or OverseerConfigSetMessageHandler. InstallShardDataCmd Overseer processing for the ""install shard data"" API. InstallShardDataCmd.RemoteMessage A value-type representing the message received by InstallShardDataCmd LeaderRecoveryWatcher We use this watcher to wait for any eligible replica in a shard to become active so that it can become a leader. MaintainRoutedAliasCmd MigrateCmd MigrateReplicasCmd MoveReplicaCmd OcmhCollectionCommandContext Context passed to Collection API commands when they execute in the Overseer. OverseerCollectionMessageHandler A OverseerMessageHandler that handles Collections API related overseer messages. OverseerRoleCmd OverseerStatusCmd This command returns stats about the Overseer, the cluster state updater and collection API activity occurring within the current Overseer node (this is important because distributed operations occurring on other nodes are not included in these stats, for example distributed cluster state updates or Per Replica States updates). ReindexCollectionCmd Reindex a collection, usually in order to change the index schema. RenameCmd ReplaceNodeCmd ReplicaMigrationUtils RestoreCmd RoutedAlias RoutedAlias.Action SetAliasPropCmd SplitShardCmd SolrCloud logic for splitting a shard. TimeRoutedAlias Holds configuration for a routed alias, and some common code and constants."
cloud,Enum Summary Enum Description ReindexCollectionCmd.Cmd ReindexCollectionCmd.State
cloud,Exception Summary Exception Description Assign.AssignmentException Thrown if there is an exception while assigning nodes for replicas
cloud,A data structure to keep all information required to create a new replica in one place.
cloud,"This class contains ""smaller"" Collection API commands implementation, the interface implemented by all commands and the class mapping a collection action to the actual command."
cloud,Map CollectionParams.CollectionAction to instances of CollApiCmds.CollectionApiCommand and being usable by both OverseerCollectionMessageHandler and DistributedCollectionConfigSetCommandRunner so that the mappings do not have to be maintained in two places.
cloud,This class implements a higher level locking abstraction for the Collection API using lower level read and write locks.
cloud,This class contains helper methods used by commands of the Collection API.
cloud,This class implements the functionality of creating a collection level snapshot.
cloud,An overseer command used to delete files associated with incremental backups.
cloud,This class implements the functionality of deleting a collection level snapshot.
cloud,"Class for execution Collection API and Config Set API commands in a distributed way, without going through Overseer and OverseerCollectionMessageHandler or OverseerConfigSetMessageHandler."
cloud,"Overseer processing for the ""install shard data"" API."
cloud,A value-type representing the message received by InstallShardDataCmd
cloud,We use this watcher to wait for any eligible replica in a shard to become active so that it can become a leader.
cloud,Context passed to Collection API commands when they execute in the Overseer.
cloud,A OverseerMessageHandler that handles Collections API related overseer messages.
cloud,"This command returns stats about the Overseer, the cluster state updater and collection API activity occurring within the current Overseer node (this is important because distributed operations occurring on other nodes are not included in these stats, for example distributed cluster state updates or Per Replica States updates)."
cloud,"Reindex a collection, usually in order to change the index schema."
cloud,SolrCloud logic for splitting a shard.
cloud,"Holds configuration for a routed alias, and some common code and constants."
cloud,Interface Summary Interface Description ZkStateWriter.ZkWriteCallback
cloud,Class Summary Class Description ClusterStateMutator CollectionMutator NodeMutator ReplicaMutator SliceMutator ZkStateWriter ZkStateWriter is responsible for writing updates to the cluster state stored in ZooKeeper for collections each of which gets their own individual state.json in ZK. ZkWriteCommand
cloud,Enum Summary Enum Description OverseerAction Enum of actions supported by the overseer only.
cloud,ZkStateWriter is responsible for writing updates to the cluster state stored in ZooKeeper for collections each of which gets their own individual state.json in ZK.
cluster,Interface Summary Interface Description ClusterEvent Cluster-level event. ClusterEventListener Components that want to be notified of cluster-wide events should use this. ClusterEventProducer Component that produces ClusterEvent instances. ClusterPropertiesChangedEvent Event generated when ZkStateReader.CLUSTER_PROPS is modified. CollectionsAddedEvent Event generated when some collections have been added. CollectionsRemovedEvent Event generated when some collections have been removed. NodesDownEvent Event generated when some nodes went down. NodesUpEvent Event generated when some nodes went up.
cluster,Class Summary Class Description ClusterEventProducerBase Base class for implementing ClusterEventProducer. NoOpProducer No-op implementation of ClusterEventProducer.
cluster,Enum Summary Enum Description ClusterEvent.EventType
cluster,Base class for implementing ClusterEventProducer.
cluster,No-op implementation of ClusterEventProducer.
cluster,"Class Summary Class Description ClusterEventProducerFactory This class helps in handling the initial registration of plugin-based listeners, when both the final ClusterEventProducer implementation and listeners are configured using plugins. CollectionsRepairEventListener This is an illustration how to re-implement the combination of Solr 8x NodeLostTrigger and AutoAddReplicasPlanAction to maintain the collection's replicas when nodes are lost. DefaultClusterEventProducer Implementation of ClusterEventProducer. DelegatingClusterEventProducer This implementation allows Solr to dynamically change the underlying implementation of ClusterEventProducer in response to the changed plugin configuration."
cluster,"This class helps in handling the initial registration of plugin-based listeners, when both the final ClusterEventProducer implementation and listeners are configured using plugins."
cluster,This is an illustration how to re-implement the combination of Solr 8x NodeLostTrigger and AutoAddReplicasPlanAction to maintain the collection's replicas when nodes are lost.
cluster,Implementation of ClusterEventProducer.
cluster,This implementation allows Solr to dynamically change the underlying implementation of ClusterEventProducer in response to the changed plugin configuration.
cluster,Class Summary Class Description InactiveShardRemover This Cluster Singleton can be configured to periodically find and remove Slice.State.INACTIVE Shards that are left behind after a Shard is split InactiveShardRemoverConfig
cluster,This Cluster Singleton can be configured to periodically find and remove Slice.State.INACTIVE Shards that are left behind after a Shard is split
cluster,"Interface Summary Interface Description AttributeFetcher Instances of this interface are used to fetch various attributes from nodes (and other sources) in the cluster. AttributeValues BalancePlan A fully specified plan or instructions for replica balancing to be applied to the cluster. BalancePlanFactory Allows plugins to create BalancePlans telling the Solr layer how to balance replicas following the processing of a BalanceRequest. BalanceRequest A cluster related placement request that Solr asks a PlacementPlugin to resolve and compute replica balancing plan for replicas that already exist across a set of Nodes. CollectionMetrics Collection-level metrics. DeleteCollectionRequest Delete collection request. DeleteReplicasRequest Delete replicas request. DeleteShardsRequest Delete shards request. Metric<T> Metric-related attribute of a node or replica. ModificationRequest Collection modification request. NodeMetric<T> Node metric identifier, corresponding to a node-level metric registry and the internal metric name. PlacementContext Placement context makes it easier to pass around and access main placement-related components. PlacementPlan A fully specified plan or instructions for placement, deletion or move to be applied to the cluster. PlacementPlanFactory Allows plugins to create PlacementPlans telling the Solr layer where to create replicas following the processing of a PlacementRequest. PlacementPlugin Implemented by external plugins to control replica placement and movement on the search cluster (as well as other things such as cluster elasticity?) when cluster changes are required (initiated elsewhere, most likely following a Collection API call). PlacementPluginConfig Configuration beans should use this interface to define public (mutable) configuration properties. PlacementPluginFactory<T extends PlacementPluginConfig> Factory implemented by client code and configured in container plugins (see ContainerPluginsApi.editAPI) allowing the creation of instances of PlacementPlugin to be used for replica placement computation. PlacementRequest A cluster related placement request that Solr asks a PlacementPlugin plugin to resolve and compute a PlacementPlan placing one or more Replica's of one or more Shard's of an existing SolrCollection. ReplicaMetric<T> Replica metric identifier, corresponding to one of the internal replica-level metric names (as reported in solr.core.[collection].[replica] registry) ReplicaMetrics Strongly-typed replica-level metrics. ReplicaPlacement Placement decision for a single Replica. ShardMetrics Shard-level metrics."
cluster,Class Summary Class Description PlacementPluginFactory.NoConfig Useful type for plugins that don't use any configuration.
cluster,Enum Summary Enum Description NodeMetric.Registry Registry options for node metrics.
cluster,"Exception Summary Exception Description PlacementException Exception thrown by a PlacementPlugin when it is unable to compute placement for whatever reason (except an InterruptedException that PlacementPlugin.computePlacement(org.apache.solr.cluster.placement.PlacementRequest, org.apache.solr.cluster.placement.PlacementContext) is also allowed to throw). PlacementModificationException Exception thrown when a placement modification is rejected by the placement plugin."
cluster,Useful type for plugins that don't use any configuration.
cluster,"Class Summary Class Description AttributeFetcherImpl Implementation of AttributeFetcher that uses SolrCloudManager to access Solr cluster details. AttributeValuesImpl Implementation of AttributeValues used by AttributeFetcherImpl. BalancePlanFactoryImpl Simple implementation of BalancePlanFactory. BalanceRequestImpl CollectionMetricsBuilder Builder class for constructing instances of CollectionMetrics. CollectionMetricsBuilder.ReplicaMetricsBuilder CollectionMetricsBuilder.ShardMetricsBuilder DelegatingPlacementPluginFactory Helper class to support dynamic reloading of plugin implementations. MetricImpl<T> Base class for Metric implementations. ModificationRequestImpl Helper class to create modification request instances. NodeMetricImpl<T> Node metric identifier, corresponding to a node-level metric registry and the internal metric name. PlacementPlanFactoryImpl Simple implementation of PlacementPlanFactory. PlacementPluginAssignStrategy This assign strategy delegates placement computation to ""plugin"" code. PlacementPluginFactoryLoader Utility class to work with PlacementPluginFactory plugins. PlacementRequestImpl ReplicaMetricImpl<T> Replica metric identifier, corresponding to one of the internal replica-level metric names (as reported in solr.core.[collection].[replica] registry) SimplePlacementContextImpl Implementation of PlacementContext that uses SimpleClusterAbstractionsImpl to create components necessary for the placement plugins to use."
cluster,Implementation of AttributeFetcher that uses SolrCloudManager to access Solr cluster details.
cluster,Implementation of AttributeValues used by AttributeFetcherImpl.
cluster,Simple implementation of BalancePlanFactory.
cluster,Builder class for constructing instances of CollectionMetrics.
cluster,Helper class to support dynamic reloading of plugin implementations.
cluster,Base class for Metric implementations.
cluster,Helper class to create modification request instances.
cluster,"Node metric identifier, corresponding to a node-level metric registry and the internal metric name."
cluster,Simple implementation of PlacementPlanFactory.
cluster,"This assign strategy delegates placement computation to ""plugin"" code."
cluster,Utility class to work with PlacementPluginFactory plugins.
cluster,"Replica metric identifier, corresponding to one of the internal replica-level metric names (as reported in solr.core.[collection].[replica] registry)"
cluster,Implementation of PlacementContext that uses SimpleClusterAbstractionsImpl to create components necessary for the placement plugins to use.
cluster,"Class Summary Class Description AffinityPlacementConfig Configuration bean for AffinityPlacementFactory. AffinityPlacementFactory This factory is instantiated by config from its class name. AffinityPlacementFactory.AffinityPlacementPlugin See AffinityPlacementFactory for instructions on how to configure a cluster to use this plugin and details on what the plugin does. MinimizeCoresPlacementFactory Factory for creating MinimizeCoresPlacementFactory.MinimizeCoresPlacementPlugin, a Placement plugin implementing placing replicas to minimize number of cores per Node, while not placing two replicas of the same shard on the same node. OrderedNodePlacementPlugin OrderedNodePlacementPlugin.WeightedNode A class that determines the weight of a given node and the replicas that reside on it. RandomPlacementFactory Factory for creating RandomPlacementFactory.RandomPlacementPlugin, a placement plugin implementing random placement for new collection creation while preventing two replicas of same shard from being placed on same node.. RandomPlacementFactory.RandomPlacementPlugin SimplePlacementFactory Factory for creating SimplePlacementFactory.SimplePlacementPlugin, a placement plugin implementing the logic from the old LegacyAssignStrategy. SimplePlacementFactory.SimplePlacementPlugin"
cluster,Configuration bean for AffinityPlacementFactory.
cluster,This factory is instantiated by config from its class name.
cluster,See AffinityPlacementFactory for instructions on how to configure a cluster to use this plugin and details on what the plugin does.
cluster,"Factory for creating MinimizeCoresPlacementFactory.MinimizeCoresPlacementPlugin, a Placement plugin implementing placing replicas to minimize number of cores per Node, while not placing two replicas of the same shard on the same node."
cluster,A class that determines the weight of a given node and the replicas that reside on it.
cluster,"Factory for creating RandomPlacementFactory.RandomPlacementPlugin, a placement plugin implementing random placement for new collection creation while preventing two replicas of same shard from being placed on same node.."
cluster,"Factory for creating SimplePlacementFactory.SimplePlacementPlugin, a placement plugin implementing the logic from the old LegacyAssignStrategy."
core,Interface Summary Interface Description BlobRepository.Decoder<T> CachingDirectoryFactory.CloseListener CloseHook Used to request notification when the core is closed. ConfigSetService.ConfigResource CoresLocator Manage the discovery and persistence of core definitions across Solr restarts Diagnostics.Callable ShutdownAwareDirectory CachingDirectoryFactory will call this method rather than Directory.close() on shutdown if a Directory implements this interface. SolrCore.RawWriter SolrEventListener SolrInfoBean Interface for getting various ui friendly strings for use by objects which are 'pluggable' to make server administration easier.
core,"Class Summary Class Description AbstractSolrEventListener BlobRepository The purpose of this class is to store the Jars loaded in memory and to keep only one copy of the Jar in a single node. BlobRepository.BlobContent<T> BlobRepository.BlobContentRef<T> ByteBuffersDirectoryFactory Factory to instantiate ByteBuffersDirectory CachingDirectoryFactory A DirectoryFactory impl base class for caching Directory instances per path. CachingDirectoryFactory.CacheValue CancellableQueryTracker Tracks metadata for active queries and provides methods for access CloudConfig CloudConfig.CloudConfigBuilder ClusterSingletons Helper class to manage the initial registration of ClusterSingleton plugins and to track the changes in loaded plugins in ContainerPluginsRegistry. CodecFactory Factory for plugging in a custom Codec ConfigOverlay This class encapsulates the config overlay json file. ConfigSet Stores a core's configuration in the form of a SolrConfig and IndexSchema. ConfigSetProperties Utility methods for reading configSet properties. ConfigSetService Service class used by the CoreContainer to load ConfigSets for use in SolrCore creation. CoreContainer CoreContainer.CoreLoadFailure CoreDescriptor Metadata about a SolrCore. CorePropertiesLocator Persists CoreDescriptors as properties files CoreSorter This is a utility class that sorts cores in such a way as to minimize other cores waiting for replicas in the current node. DelegatingEventListener A SolrEventListener wrapper that loads class from a package and reload if it's modified Diagnostics DirectoryFactory Provides access to a Directory implementation. EphemeralDirectoryFactory Directory provider for implementations that do not persist over reboots. FileSystemConfigSetService FileSystem ConfigSetService impl. IndexDeletionPolicyWrapper A wrapper for an IndexDeletionPolicy instance. IndexReaderFactory Factory used to build a new IndexReader instance. InitParams An Object which represents a <initParams> tag LuceneDefaultCodecFactory Simple factory for returning the Lucene default Codec MetricsConfig MetricsConfig.CacheConfig MetricsConfig.MetricsConfigBuilder MMapDirectoryFactory Directly provide MMapDirectory instead of relying on FSDirectory.open(java.nio.file.Path). NIOFSDirectoryFactory Factory to instantiate NIOFSDirectory NodeConfig NodeConfig.NodeConfigBuilder NodeRoles NRTCachingDirectoryFactory Factory to instantiate NRTCachingDirectory PluginBag<T> This manages the lifecycle of a set of plugin of the same type . PluginBag.JaxrsResourceToHandlerMappings Allows JAX-RS 'filters' to find the requestHandler (if any) associated particular JAX-RS resource classes PluginBag.PluginHolder<T> An indirect reference to a plugin. PluginInfo An Object which represents a Plugin of any type PluginInfo.ClassName QuerySenderListener RAMDirectoryFactory Factory to instantiate RAM-resident directory implementation. RateLimiterConfig RequestHandlers RequestParams The class encapsulates the request time parameters . RequestParams.ParamSet RequestParams.VersionedParams SchemaCodecFactory Per-field CodecFactory implementation, extends Lucene's and returns postings format implementations according to the schema configuration. SimpleTextCodecFactory SolrConfig Provides a static reference to a Config object modeling the main configuration data for a Solr instance -- typically found in ""solrconfig.xml"". SolrConfig.HttpCachingConfig SolrConfig.SolrPluginInfo SolrConfig.UpdateHandlerInfo SolrCore SolrCore got its name because it represents the ""core"" of Solr -- one index and everything needed to make it work. SolrCore.Provider Provides the core instance if the core instance is still alive. SolrCores AKA CoreManager: Holds/manages SolrCores within CoreContainer. SolrDeletionPolicy Standard Solr deletion policy that allows reserving index commit points for certain amounts of time to support features such as index replication or snapshotting directly out of a live index directory. SolrPaths Utility methods about paths in Solr. SolrPaths.AllowPathBuilder Builds a set of allowed Path. SolrResourceLoader SolrResourceLoader.SolrFileInputStream SolrXmlConfig Loads solr.xml. StandardDirectoryFactory Directory provider which mimics original Solr FSDirectory based behavior. StandardIndexReaderFactory Default IndexReaderFactory implementation. SyntheticSolrCore A synthetic core that is created only in memory and not registered against Zookeeper. TracerConfigurator Produces an OpenTracing Tracer from configuration. TransientSolrCoreCache Deprecated. TransientSolrCoreCacheDefault Deprecated. TransientSolrCores Deprecated. XmlConfigFile Wrapper around an XML DOM object to provide convenient accessors to it. ZkContainer Used by CoreContainer to hold ZooKeeper / SolrCloud info, especially ZkController."
core,Enum Summary Enum Description DirectoryFactory.DirContext NodeRoles.Role SolrConfig.HttpCachingConfig.LastModFrom SolrConfig.PluginOpts SolrInfoBean.Category Category of Solr component. SolrInfoBean.Group Top-level group of beans or metrics for a subsystem.
core,Exception Summary Exception Description SolrCoreInitializationException SolrResourceNotFoundException
core,The purpose of this class is to store the Jars loaded in memory and to keep only one copy of the Jar in a single node.
core,Factory to instantiate ByteBuffersDirectory
core,A DirectoryFactory impl base class for caching Directory instances per path.
core,Tracks metadata for active queries and provides methods for access
core,Helper class to manage the initial registration of ClusterSingleton plugins and to track the changes in loaded plugins in ContainerPluginsRegistry.
core,Factory for plugging in a custom Codec
core,This class encapsulates the config overlay json file.
core,Stores a core's configuration in the form of a SolrConfig and IndexSchema.
core,Utility methods for reading configSet properties.
core,Service class used by the CoreContainer to load ConfigSets for use in SolrCore creation.
core,Metadata about a SolrCore.
core,Persists CoreDescriptors as properties files
core,This is a utility class that sorts cores in such a way as to minimize other cores waiting for replicas in the current node.
core,A SolrEventListener wrapper that loads class from a package and reload if it's modified
core,Provides access to a Directory implementation.
core,Directory provider for implementations that do not persist over reboots.
core,FileSystem ConfigSetService impl.
core,A wrapper for an IndexDeletionPolicy instance.
core,Factory used to build a new IndexReader instance.
core,An Object which represents a <initParams> tag
core,Simple factory for returning the Lucene default Codec
core,Directly provide MMapDirectory instead of relying on FSDirectory.open(java.nio.file.Path).
core,Factory to instantiate NIOFSDirectory
core,Factory to instantiate NRTCachingDirectory
core,This manages the lifecycle of a set of plugin of the same type .
core,Allows JAX-RS 'filters' to find the requestHandler (if any) associated particular JAX-RS resource classes
core,An indirect reference to a plugin.
core,An Object which represents a Plugin of any type
core,Factory to instantiate RAM-resident directory implementation.
core,The class encapsulates the request time parameters .
core,"Per-field CodecFactory implementation, extends Lucene's and returns postings format implementations according to the schema configuration."
core,"Provides a static reference to a Config object modeling the main configuration data for a Solr instance -- typically found in ""solrconfig.xml""."
core,"SolrCore got its name because it represents the ""core"" of Solr -- one index and everything needed to make it work."
core,Provides the core instance if the core instance is still alive.
core,AKA CoreManager: Holds/manages SolrCores within CoreContainer.
core,Standard Solr deletion policy that allows reserving index commit points for certain amounts of time to support features such as index replication or snapshotting directly out of a live index directory.
core,Utility methods about paths in Solr.
core,Builds a set of allowed Path.
core,Loads solr.xml.
core,Directory provider which mimics original Solr FSDirectory based behavior.
core,Default IndexReaderFactory implementation.
core,A synthetic core that is created only in memory and not registered against Zookeeper.
core,Produces an OpenTracing Tracer from configuration.
core,Wrapper around an XML DOM object to provide convenient accessors to it.
core,"Used by CoreContainer to hold ZooKeeper / SolrCloud info, especially ZkController."
core,"Class Summary Class Description AggregateBackupStats Aggregate stats from multiple ShardBackupMetadata BackupFilePaths Utility class for getting paths related to backups, or parsing information out of those paths. BackupId Represents the ID of a particular backup. BackupManager This class implements functionality to create a backup with extension points provided to integrate with different types of file-systems. BackupProperties Represents a backup[-*].properties file, responsible for holding whole-collection and whole-backup metadata. Checksum Represents checksum information for an index file being backed up. ShardBackupId Represents the ID of a particular backup point for a particular shard. ShardBackupMetadata Represents the shard-backup metadata file. ShardBackupMetadata.BackedFile"
core,Aggregate stats from multiple ShardBackupMetadata
core,"Utility class for getting paths related to backups, or parsing information out of those paths."
core,Represents the ID of a particular backup.
core,This class implements functionality to create a backup with extension points provided to integrate with different types of file-systems.
core,"Represents a backup[-*].properties file, responsible for holding whole-collection and whole-backup metadata."
core,Represents checksum information for an index file being backed up.
core,Represents the ID of a particular backup point for a particular shard.
core,Represents the shard-backup metadata file.
core,Interface Summary Interface Description BackupRepository This interface defines the functionality required to backup/restore Solr indexes to an arbitrary storage system.
core,Class Summary Class Description AbstractBackupRepository Abstract BackupRepository implementation providing some logic shared between real implementations. BackupRepositoryFactory DelegatingBackupRepository Delegates to another BackupRepository. LocalFileSystemRepository A concrete implementation of BackupRepository interface supporting backup/restore of Solr indexes to a local file-system.
core,Enum Summary Enum Description BackupRepository.PathType This enumeration defines the type of a given path.
core,Abstract BackupRepository implementation providing some logic shared between real implementations.
core,Delegates to another BackupRepository.
core,A concrete implementation of BackupRepository interface supporting backup/restore of Solr indexes to a local file-system.
core,Class Summary Class Description CollectionSnapshotMetaData This class defines the meta-data about a collection level snapshot CollectionSnapshotMetaData.CoreSnapshotMetaData SolrSnapshotManager This class provides functionality required to handle the data files corresponding to Solr snapshots. SolrSnapshotMetaDataManager This class is responsible to manage the persistent snapshots meta-data for the Solr indexes. SolrSnapshotMetaDataManager.SnapshotMetaData A class defining the meta-data for a specific snapshot.
core,Enum Summary Enum Description CollectionSnapshotMetaData.SnapshotStatus
core,This class defines the meta-data about a collection level snapshot
core,This class provides functionality required to handle the data files corresponding to Solr snapshots.
core,This class is responsible to manage the persistent snapshots meta-data for the Solr indexes.
core,A class defining the meta-data for a specific snapshot.
filestore,Interface Summary Interface Description FileStore The interface to be implemented by any package store provider * @lucene.experimental FileStore.FileDetails
filestore,Class Summary Class Description ClusterFileStore DistribFileStore FileStore.FileEntry FileStoreAPI FileStoreAPI.MetaData FileStoreUtils Common utilities used by filestore-related code. NodeFileStore Implementation for NodeFileStoreApis
filestore,Enum Summary Enum Description FileStore.FileType
filestore,Common utilities used by filestore-related code.
filestore,Implementation for NodeFileStoreApis
handler,Interface Summary Interface Description AnalysisRequestHandlerBase.TokenTrackingAttribute This is an Attribute used to track the positions of tokens in the analysis chain. NestedRequestHandler An interface for RequestHandlers need to handle all paths under its registered path ReplicationHandler.PollListener
handler,"Class Summary Class Description AnalysisRequestHandlerBase A base class for all analysis request handlers. AnalysisRequestHandlerBase.AnalysisContext Serves as the context of an analysis process. AnalysisRequestHandlerBase.ListBasedTokenStream TokenStream that iterates over a list of pre-existing Tokens AnalysisRequestHandlerBase.TokenTrackingAttributeImpl Implementation of AnalysisRequestHandlerBase.TokenTrackingAttribute. AnalyzeEvaluator BlobHandler CatStream CatStream.CrawlFile ClassifyStream The classify expression retrieves a model trained by the train expression and uses it to classify documents from a stream Syntax: classif(model(...), anyStream(...), field=""body"") ClusterAPI All V2 APIs that have a prefix of /api/cluster/ ClusterAPI.RoleInfo ContentStreamHandlerBase Shares common code between various handlers that manipulate ContentStream objects. DocumentAnalysisRequestHandler An analysis handler that provides a breakdown of the analysis process of provided documents. DumpRequestHandler ExportHandler ExportHandler.ExportHandlerStreamFactory FieldAnalysisRequestHandler Provides the ability to specify multiple field types and field names in the same request. GraphHandler Solr Request Handler for graph traversal with streaming functions that responds with GraphML markup. GraphHandler.DummyErrorStream GraphHandler.TimerStream HaversineMetersEvaluator HaversineMetersEvaluator.HaversineDistance IncrementalShardBackup Responsible for orchestrating the actual incremental backup process. IncrementalShardBackup.IncrementalShardSnapshotResponse IndexFetcher Provides functionality of downloading changed index files as well as config files and a timer for scheduling fetches from the leader. IndexFetcher.CompareResult IndexFetcher.IndexFetchResult MoreLikeThisHandler Solr MoreLikeThis -- MoreLikeThisHandler.InterestingTerm MoreLikeThisHandler.MoreLikeThisHelper Helper class for MoreLikeThis that can be called from other request handlers NotFoundRequestHandler Does nothing other than showing a 404 message PingRequestHandler Ping Request Handler for reporting SolrCore health to a Load Balancer. RealTimeGetHandler ReplicationHandler A Handler which provides a REST API for replication and serves replication requests from Followers. ReplicationHandler.ReplicationHandlerConfig RequestHandlerBase Base class for all request handlers. RequestHandlerBase.HandlerMetrics Metrics for this handler. RequestHandlerUtils Common helper functions for RequestHandlers RestoreCore SchemaHandler SnapShooter Provides functionality equivalent to the snapshooter script This is no longer used in standard replication. SnapShooter.CoreSnapshotResponse SolrConfigHandler SolrDefaultStreamFactory A default collection of mappings, used to convert strings into stream expressions. StandardRequestHandler Deprecated. StreamHandler Solr Request Handler for streaming data. StreamHandler.DaemonCollectionStream StreamHandler.DaemonResponseStream StreamHandler.DummyErrorStream StreamHandler.ExpressibleHolder StreamHandler.TimerStream UpdateRequestHandler UpdateHandler that uses content-type to pick the right Loader V2UpdateRequestHandler An extension of UpdateRequestHandler used solely to register the v2 /update APIs"
handler,Enum Summary Enum Description PingRequestHandler.ACTIONS
handler,A base class for all analysis request handlers.
handler,Serves as the context of an analysis process.
handler,TokenStream that iterates over a list of pre-existing Tokens
handler,Implementation of AnalysisRequestHandlerBase.TokenTrackingAttribute.
handler,"The classify expression retrieves a model trained by the train expression and uses it to classify documents from a stream Syntax: classif(model(...), anyStream(...), field=""body"")"
handler,All V2 APIs that have a prefix of /api/cluster/
handler,Shares common code between various handlers that manipulate ContentStream objects.
handler,An analysis handler that provides a breakdown of the analysis process of provided documents.
handler,Provides the ability to specify multiple field types and field names in the same request.
handler,Solr Request Handler for graph traversal with streaming functions that responds with GraphML markup.
handler,Responsible for orchestrating the actual incremental backup process.
handler,Provides functionality of downloading changed index files as well as config files and a timer for scheduling fetches from the leader.
handler,Solr MoreLikeThis --
handler,Helper class for MoreLikeThis that can be called from other request handlers
handler,Does nothing other than showing a 404 message
handler,Ping Request Handler for reporting SolrCore health to a Load Balancer.
handler,A Handler which provides a REST API for replication and serves replication requests from Followers.
handler,Base class for all request handlers.
handler,Metrics for this handler.
handler,Common helper functions for RequestHandlers
handler,Provides functionality equivalent to the snapshooter script This is no longer used in standard replication.
handler,"A default collection of mappings, used to convert strings into stream expressions."
handler,Solr Request Handler for streaming data.
handler,UpdateHandler that uses content-type to pick the right Loader
handler,An extension of UpdateRequestHandler used solely to register the v2 /update APIs
handler,Interface Summary Interface Description BaseHandlerApiSupport.ApiCommand CoreAdminHandler.CoreAdminOp
handler,"Class Summary Class Description AdminHandlersProxy Static methods to proxy calls to an Admin (GET) API to other nodes in the cluster and return a combined response BaseHandlerApiSupport This is a utility class to provide an easy mapping of request handlers which support multiple commands to the V2 API format (core admin api, collections api). ClusterStatus CollectionsHandler ColStatus Report low-level details of collection. ConfigSetsHandler A SolrRequestHandler for ConfigSets API requests. ContainerPluginsApi API to maintain container-level plugin configurations. CoreAdminHandler CoreAdminHandler.CallInfo CoreAdminHandler.CoreAdminAsyncTracker CoreAdminHandler.CoreAdminAsyncTracker.TaskObject Helper class to manage the tasks to be tracked. HealthCheckHandler Health Check Handler for reporting the health of a specific node. IndexSizeEstimator Estimates the raw size of all uncompressed indexed data by scanning term, docValues and stored fields data. IndexSizeEstimator.Estimate IndexSizeEstimator.Item IndexSizeEstimator.ItemPriorityQueue IndexSizeEstimator.MapWriterSummaryStatistics InfoHandler InstallCoreDataOp v1 shim implementation of the ""Install Core Data"" API, a core-admin API used to implement the ""Install Shard Data"" Collection-Admin functionality LoggingHandler A request handler to show which loggers are registered and allows you to set them LukeRequestHandler Exposes the internal lucene index. MetricsCollectorHandler Handler to collect and aggregate metric reports. MetricsHandler Request handler to return metrics PluginInfoHandler PropertiesRequestHandler SecurityConfHandler SecurityConfHandler.SecurityConfig Object to hold security.json as nested Map<String,Object> and optionally its version. SecurityConfHandlerLocal Security Configuration Handler which works on standalone local files SecurityConfHandlerZk Security Configuration Handler which works with Zookeeper SegmentsInfoRequestHandler This handler exposes information about last commit generation segments ShowFileRequestHandler This handler uses the RawResponseWriter to give client access to files inside ${solr.home}/conf SolrEnvironment It is possible to define an environment code when starting Solr, through -Dsolr.environment=prod|stage|test|dev or by setting the cluster property ""environment"". SolrInfoMBeanHandler A request handler that provides info about all registered SolrInfoMBeans. SystemInfoHandler This handler returns system info ThreadDumpHandler ZookeeperInfoHandler Zookeeper Info ZookeeperRead v2 API definition exposing read-content in Zookeeper. ZookeeperStatusHandler Zookeeper Status handler, talks to ZK using sockets and four-letter words"
handler,Enum Summary Enum Description ClusterStatus.Health Shard / collection health state. CollectionsHandler.CollectionOperation CoreAdminOperation
handler,Static methods to proxy calls to an Admin (GET) API to other nodes in the cluster and return a combined response
handler,"This is a utility class to provide an easy mapping of request handlers which support multiple commands to the V2 API format (core admin api, collections api)."
handler,Report low-level details of collection.
handler,A SolrRequestHandler for ConfigSets API requests.
handler,API to maintain container-level plugin configurations.
handler,Helper class to manage the tasks to be tracked.
handler,Health Check Handler for reporting the health of a specific node.
handler,"Estimates the raw size of all uncompressed indexed data by scanning term, docValues and stored fields data."
handler,"v1 shim implementation of the ""Install Core Data"" API, a core-admin API used to implement the ""Install Shard Data"" Collection-Admin functionality"
handler,A request handler to show which loggers are registered and allows you to set them
handler,Exposes the internal lucene index.
handler,Handler to collect and aggregate metric reports.
handler,Request handler to return metrics
handler,"Object to hold security.json as nested Map<String,Object> and optionally its version."
handler,Security Configuration Handler which works on standalone local files
handler,Security Configuration Handler which works with Zookeeper
handler,This handler exposes information about last commit generation segments
handler,This handler uses the RawResponseWriter to give client access to files inside ${solr.home}/conf
handler,"It is possible to define an environment code when starting Solr, through -Dsolr.environment=prod|stage|test|dev or by setting the cluster property ""environment""."
handler,A request handler that provides info about all registered SolrInfoMBeans.
handler,This handler returns system info
handler,Zookeeper Info
handler,v2 API definition exposing read-content in Zookeeper.
handler,"Zookeeper Status handler, talks to ZK using sockets and four-letter words"
handler,"Class Summary Class Description AddReplicaProperty V2 API for adding a property to a collection replica AdminAPIBase A common parent for ""admin"" (i.e. AliasProperty V2 APIs for managing and inspecting properties for collection aliases AllCoresStatusAPI V2 API for retrieving status information for all cores on the receiving node. BackupAPIBase Base class that facilitates reuse of common validation logic for collection-backup APIs. BalanceReplicas V2 API for balancing the replicas that already exist across a set of nodes. BalanceShardUnique V2 API implementation for insuring that a particular property is distributed evenly amongst the physical nodes comprising a collection. CancelTaskAPI V2 API for cancelling a currently running ""task"". ClusterProperty CollectionProperty V2 API implementations for modifying collection-level properties. CollectionStatusAPI V2 API for displaying basic information about a single collection. CoreAdminAPIBase A common parent for admin Core Jersey-based APIs. CoreReplication V2 API implementation of ReplicationApis CoreSnapshot V2 API for Creating, Listing, and Deleting Core Snapshots. CreateAlias V2 API for creating an alias CreateAlias.CategoryRoutedAliasValidationHelper CreateAlias.TimeRoutedAliasValidationHelper CreateCollection V2 API for creating a SolrCLoud collection CreateCollectionBackup V2 API for creating a new ""backup"" of a specified collection CreateCollectionSnapshot V2 API implementation for creating a collection-level snapshot. CreateCoreAPI V2 API for creating a new core on the receiving node. CreateCoreBackup CreateReplica V2 API implementation for adding a new replica to an existing shard. CreateShard V2 API for creating a new shard in a collection. DeleteAlias DeleteCollection V2 API for deleting collections. DeleteCollectionBackup V2 API definitions for collection-backup deletion. DeleteCollectionSnapshot V2 API impl for Deleting Collection Snapshots. DeleteNode V2 API for deleting all replicas of all collections in one node. DeleteReplica V2 APIs for deleting one or more existing replicas from one or more shards. DeleteReplicaProperty V2 API implementation for removing a property from a collection replica DeleteShard V2 API implementation for deleting a particular shard from its collection. ForceLeader V2 API implementation for triggering a leader election on a particular collection and shard. GetAuthenticationConfigAPI V2 API for fetching the authentication section from Solr's security.json configuration. GetAuthorizationConfigAPI V2 API for fetching the authorization section of Solr's security.json configuration. GetBlobInfoAPI V2 APIs for fetching blob(s) and their metadata GetConfigAPI V2 APIs for retrieving some or all configuration relevant to a particular collection (or core). GetNodeCommandStatus Implementation of V2 API interface GetNodeCommandStatusApi for checking the status of a core-level asynchronous command. GetSchema GetSchemaField GetSchemaFieldAPI contains the V2 APIs for all field related endpoint which are /fields /fields/{fieldName} /copyfields /dynamicfields /dynamicfields/{fieldName} /fieldtypes /fieldtypes/{fieldTypeName} InstallCoreData V2 API implementation of the ""Install Core Data"" Core-Admin API InstallShardData V2 API implementation allowing users to import offline-constructed index into a shard. ListActiveTasksAPI V2 API for listing any currently running ""tasks"". ListAliases V2 API implementation for listing and inspecting collection aliases ListCollectionBackups V2 API implementations for collection-backup ""listing"". ListCollections V2 API for listing collections. ListCollectionSnapshots V2 API implementation for Listing Collection Snapshots. MergeIndexes Implementation of V2 API interface MergeIndexesApi for merging one or more indexes to another index. MigrateDocsAPI V2 API for migrating docs from one collection to another. MigrateReplicas V2 API for migrating replicas from a set of nodes to another set of nodes. ModifyBasicAuthConfigAPI V2 API to modify configuration for Solr's BasicAuthPlugin ModifyCollectionAPI V2 API for modifying collections. ModifyConfigComponentAPI V2 APIs for creating, updating, or deleting individual components in a collection configuration. ModifyMultiPluginAuthConfigAPI V2 API to modify configuration options for the MultiAuthPlugin. ModifyNoAuthPluginSecurityConfigAPI V2 API for POST requests received when no authentication plugin is active. ModifyNoAuthzPluginSecurityConfigAPI V2 API for POST requests received when no authorization plugin is active. ModifyParamSetAPI V2 APIs for creating, modifying, or deleting paramsets. ModifyRuleBasedAuthConfigAPI V2 API to modify configuration options for the RuleBasedAuthorizationPlugin. MoreLikeThisAPI V2 API for performing a more like this request to a solr collection. MoveReplicaAPI V2 API for moving a collection replica to a different physical node. NodeHealthAPI V2 API for checking the health of the receiving node. NodeLogging V2 APIs for getting or setting log levels on an individual node. NodePropertiesAPI V2 API for listing system properties for each node. NodeSystemInfoAPI V2 API for getting ""system"" information from the receiving node. NodeThreadsAPI V2 API for triggering a thread dump on the receiving node. OverseerOperationAPI V2 API for triggering a node to rejoin leader election for the 'overseer' role. PrepareCoreRecoveryAPI Internal V2 API used to prepare a core for recovery. RealTimeGetAPI V2 API for fetching the latest (possibly uncommitted) version of one or more documents. RebalanceLeadersAPI V2 API for balancing shard leaders in a collection across nodes. RejoinLeaderElectionAPI V2 API for triggering a core to rejoin leader election for the shard it constitutes. ReloadCollectionAPI V2 API implementation for reloading collections. ReloadCore V2 API implementation for reloading an individual core. RenameCollection V2 API implementation to ""rename"" an existing collection RenameCore V2 API for renaming an existing Solr core. RenameCoreAPI V2 API for renaming an existing Solr core. RenameCoreAPI.RenameCorePayload ReplaceNode V2 API for recreating replicas in one node (the source) on another node(s) (the target). ReplicationAPIBase A common parent for ""replication"" (i.e. RequestApplyCoreUpdatesAPI Internal V2 API used to apply updates to a core. RequestBufferUpdatesAPI Internal V2 API used to start update-buffering on the specified core. RequestCoreRecoveryAPI Internal V2 API triggering recovery on a core. RequestSyncShardAPI Internal V2 API used to request a core sync with its shard leader. RestoreCollection V2 API for restoring data into a collection RestoreCore V2 API implementation for restoring a previously taken backup to a core SchemaBulkModifyAPI V2 APIs for creating, updating, or deleting individual components in a collection's schema. SingleCoreStatusAPI V2 API for checking the status of a specific core. SnapshotBackupAPI v2 API implementation for replication-handler based backup creation. SplitCoreAPI V2 API for splitting a single core into multiple pieces SplitCoreAPI.SplitCorePayload SplitShardAPI V2 API for splitting an existing shard up into multiple pieces. SwapCores SyncShard V2 API implementation for triggering a shard-sync operation within a particular collection and shard. UnloadCore V2 API implementation for unloading a Solr core. UpdateAPI All v2 APIs that share a prefix of /update UploadBlobAPI V2 API for uploading blobs into Solr's .system blobstore"
handler,Exception Summary Exception Description CoreAdminAPIBase.CoreAdminAPIBaseException Helper RuntimeException to allow passing checked exceptions to the caller of the handle method.
handler,V2 API for adding a property to a collection replica
handler,"A common parent for ""admin"" (i.e."
handler,V2 APIs for managing and inspecting properties for collection aliases
handler,V2 API for retrieving status information for all cores on the receiving node.
handler,Base class that facilitates reuse of common validation logic for collection-backup APIs.
handler,V2 API for balancing the replicas that already exist across a set of nodes.
handler,V2 API implementation for insuring that a particular property is distributed evenly amongst the physical nodes comprising a collection.
handler,"V2 API for cancelling a currently running ""task""."
handler,V2 API implementations for modifying collection-level properties.
handler,V2 API for displaying basic information about a single collection.
handler,A common parent for admin Core Jersey-based APIs.
handler,V2 API implementation of ReplicationApis
handler,"V2 API for Creating, Listing, and Deleting Core Snapshots."
handler,V2 API for creating an alias
handler,V2 API for creating a SolrCLoud collection
handler,"V2 API for creating a new ""backup"" of a specified collection"
handler,V2 API implementation for creating a collection-level snapshot.
handler,V2 API for creating a new core on the receiving node.
handler,V2 API implementation for adding a new replica to an existing shard.
handler,V2 API for creating a new shard in a collection.
handler,V2 API for deleting collections.
handler,V2 API definitions for collection-backup deletion.
handler,V2 API impl for Deleting Collection Snapshots.
handler,V2 API for deleting all replicas of all collections in one node.
handler,V2 APIs for deleting one or more existing replicas from one or more shards.
handler,V2 API implementation for removing a property from a collection replica
handler,V2 API implementation for deleting a particular shard from its collection.
handler,V2 API implementation for triggering a leader election on a particular collection and shard.
handler,V2 API for fetching the authentication section from Solr's security.json configuration.
handler,V2 API for fetching the authorization section of Solr's security.json configuration.
handler,V2 APIs for fetching blob(s) and their metadata
handler,V2 APIs for retrieving some or all configuration relevant to a particular collection (or core).
handler,Implementation of V2 API interface GetNodeCommandStatusApi for checking the status of a core-level asynchronous command.
handler,GetSchemaFieldAPI contains the V2 APIs for all field related endpoint which are /fields /fields/{fieldName} /copyfields /dynamicfields /dynamicfields/{fieldName} /fieldtypes /fieldtypes/{fieldTypeName}
handler,"V2 API implementation of the ""Install Core Data"" Core-Admin API"
handler,V2 API implementation allowing users to import offline-constructed index into a shard.
handler,"V2 API for listing any currently running ""tasks""."
handler,V2 API implementation for listing and inspecting collection aliases
handler,"V2 API implementations for collection-backup ""listing""."
handler,V2 API for listing collections.
handler,V2 API implementation for Listing Collection Snapshots.
handler,Implementation of V2 API interface MergeIndexesApi for merging one or more indexes to another index.
handler,V2 API for migrating docs from one collection to another.
handler,V2 API for migrating replicas from a set of nodes to another set of nodes.
handler,V2 API to modify configuration for Solr's BasicAuthPlugin
handler,V2 API for modifying collections.
handler,"V2 APIs for creating, updating, or deleting individual components in a collection configuration."
handler,V2 API to modify configuration options for the MultiAuthPlugin.
handler,V2 API for POST requests received when no authentication plugin is active.
handler,V2 API for POST requests received when no authorization plugin is active.
handler,"V2 APIs for creating, modifying, or deleting paramsets."
handler,V2 API to modify configuration options for the RuleBasedAuthorizationPlugin.
handler,V2 API for performing a more like this request to a solr collection.
handler,V2 API for moving a collection replica to a different physical node.
handler,V2 API for checking the health of the receiving node.
handler,V2 APIs for getting or setting log levels on an individual node.
handler,V2 API for listing system properties for each node.
handler,"V2 API for getting ""system"" information from the receiving node."
handler,V2 API for triggering a thread dump on the receiving node.
handler,V2 API for triggering a node to rejoin leader election for the 'overseer' role.
handler,Internal V2 API used to prepare a core for recovery.
handler,V2 API for fetching the latest (possibly uncommitted) version of one or more documents.
handler,V2 API for balancing shard leaders in a collection across nodes.
handler,V2 API for triggering a core to rejoin leader election for the shard it constitutes.
handler,V2 API implementation for reloading collections.
handler,V2 API implementation for reloading an individual core.
handler,"V2 API implementation to ""rename"" an existing collection"
handler,V2 API for renaming an existing Solr core.
handler,V2 API for renaming an existing Solr core.
handler,V2 API for recreating replicas in one node (the source) on another node(s) (the target).
handler,"A common parent for ""replication"" (i.e."
handler,Internal V2 API used to apply updates to a core.
handler,Internal V2 API used to start update-buffering on the specified core.
handler,Internal V2 API triggering recovery on a core.
handler,Internal V2 API used to request a core sync with its shard leader.
handler,V2 API for restoring data into a collection
handler,V2 API implementation for restoring a previously taken backup to a core
handler,"V2 APIs for creating, updating, or deleting individual components in a collection's schema."
handler,V2 API for checking the status of a specific core.
handler,v2 API implementation for replication-handler based backup creation.
handler,V2 API for splitting a single core into multiple pieces
handler,V2 API for splitting an existing shard up into multiple pieces.
handler,V2 API implementation for triggering a shard-sync operation within a particular collection and shard.
handler,V2 API implementation for unloading a Solr core.
handler,All v2 APIs that share a prefix of /update
handler,V2 API for uploading blobs into Solr's .system blobstore
handler,Class Summary Class Description V2ApiUtils Utilities helpful for common V2 API declaration tasks.
handler,Utilities helpful for common V2 API declaration tasks.
handler,Interface Summary Interface Description MergeStrategy The MergeStrategy class defines custom merge logic for distributed searches. QueryElevationComponent.ElevationProvider Provides the elevations defined for queries. StatsValues StatsValue defines the interface for the collection of statistical values about fields and facets.
handler,"Class Summary Class Description ActiveTasksListComponent List the active tasks that can be cancelled ActiveTasksListHandler Handles request for listing all active cancellable tasks DebugComponent Adds debugging information to a request. ExpandComponent The ExpandComponent is designed to work with the CollapsingPostFilter. FacetComponent Computes facets -- aggregations with counts of terms or ranges over the whole search results. FacetComponent.DistribFieldFacet This API is experimental and subject to change FacetComponent.FacetBase This API is experimental and subject to change FacetComponent.FacetContext Encapsulates facet ranges and facet queries such that their parameters are parsed and cached for efficient re-use. FacetComponent.FacetInfo This class is used exclusively for merging results from each shard in a distributed facet request. FacetComponent.FieldFacet This API is experimental and subject to change FacetComponent.QueryFacet This API is experimental and subject to change FacetComponent.ShardFacetCount This API is experimental and subject to change FieldFacetStats FieldFacetStats is a utility to accumulate statistics on a set of values in one field, for facet values present in another field. HighlightComponent Highlights query words in the search results. HttpShardHandler Solr's default ShardHandler implementation; uses Jetty's async HTTP Client APIs for sending requests. HttpShardHandler.SimpleSolrResponse HttpShardHandlerFactory Creates HttpShardHandler instances IterativeMergeStrategy MoreLikeThisComponent TODO! ParallelHttpShardHandler A version of HttpShardHandler optimized for massively-sharded collections. ParallelHttpShardHandlerFactory Creates ParallelHttpShardHandler instances PhrasesIdentificationComponent A component that can be used in isolation, or in conjunction with QueryComponent to identify & score ""phrases"" found in the input string, based on shingles in indexed fields. PhrasesIdentificationComponent.Phrase Model the data known about a single (candidate) Phrase -- which may or may not be indexed PhrasesIdentificationComponent.PhrasesContextData Simple container for all request options and data this component needs to store in the Request Context PivotFacet Models a single instance of a ""pivot"" specified by a FacetParams.FACET_PIVOT param, which may contain multiple nested fields. PivotFacetField Models a single field somewhere in a hierarchy of fields as part of a pivot facet. PivotFacetFieldValueCollection Emcapsulates a collection of PivotFacetValues associated with a PivotFacetField withs pecial tracking of a PivotFacetValue corrisponding to the null value when FacetParams.FACET_MISSING is used. PivotFacetFieldValueCollection.PivotFacetCountComparator Sorts PivotFacetValue instances by their count PivotFacetFieldValueCollection.PivotFacetValueComparator Sorts PivotFacetValue instances by their value PivotFacetHelper PivotFacetProcessor Processes all Pivot facet logic for a single node -- both non-distrib, and per-shard PivotFacetValue Models a single (value, count) pair that will exist in the collection of values for a PivotFacetField parent. QueryCancellationComponent Responsible for handling query cancellation requests QueryCancellationHandler Handles requests for query cancellation for cancellable queries QueryComponent TODO! QueryComponent.ScoreAndDoc Fake scorer for a single document QueryElevationComponent A component to elevate some documents to the top of the result set. QueryElevationComponent.ElevatingQuery Query triggering elevation. QueryElevationComponent.Elevation Elevation of some documents in search results, with potential exclusion of others. QueryElevationComponent.TrieSubsetMatcher<E extends Comparable<? super E>,M> Matches a potentially large collection of subsets with a trie implementation. QueryElevationComponent.TrieSubsetMatcher.Builder<E extends Comparable<? super E>,M> RangeFacetProcessor Processor for Range Facets RangeFacetRequest Encapsulates a single facet.range request along with all its parameters. RangeFacetRequest.FacetRange Represents a single facet range (or gap) for which the count is to be calculated RealTimeGetComponent ResponseBuilder This class is experimental and will be changing in the future. ResponseLogComponent Adds to the log file the document IDs that are sent in the query response. SearchComponent TODO! SearchHandler Refer SOLR-281 ShardDoc ShardFieldSortedHitQueue ShardHandler Executes, tracks, and awaits all shard-requests made in the course of a distributed request. ShardHandlerFactory ShardRequest ShardResponse SortedDateStatsValues SortedNumericStatsValues SpatialHeatmapFacets A 2D spatial faceting summary of a rectangular region. SpatialHeatmapFacets.HeatmapFacet Goes in FacetComponent.FacetInfo.heatmapFacets, created by SpatialHeatmapFacets.distribParse(org.apache.solr.common.params.SolrParams, ResponseBuilder). SpellCheckComponent A SearchComponent implementation which provides support for spell checking and suggestions using the Lucene contributed SpellChecker. SpellCheckMergeData StatsComponent Stats component calculates simple statistics on numeric field values StatsField Models all of the information associated with a single StatsParams.STATS_FIELD instance. StatsField.HllOptions Helper Struct for parsing and encapsulating all of the options relaed to building a HLL StatsValuesFactory Factory class for creating instance of StatsValues SuggestComponent SuggestComponent: interacts with multiple SolrSuggester to serve up suggestions Responsible for routing commands and queries to the appropriate SolrSuggester and for initializing them as specified by SolrConfig TaskManagementHandler Abstract class which serves as the root of all task managing handlers TermsComponent Return TermEnum information, useful for things like auto suggest. TermsComponent.TermCountComparator Comparator for TermsResponse.Term sorting This sorts term by frequency in descending order TermsComponent.TermsHelper TermVectorComponent Return term vectors for the documents in a query result set."
handler,Enum Summary Enum Description HighlightComponent.HighlightMethod QueryElevationComponent.InitializationExceptionCause RealTimeGetComponent.Resolution Lookup strategy for some methods on this class. StatsField.Stat An enumeration representing the sumer set of all possible stat values that can be computed.
handler,The MergeStrategy class defines custom merge logic for distributed searches.
handler,Provides the elevations defined for queries.
handler,StatsValue defines the interface for the collection of statistical values about fields and facets.
handler,List the active tasks that can be cancelled
handler,Handles request for listing all active cancellable tasks
handler,Adds debugging information to a request.
handler,The ExpandComponent is designed to work with the CollapsingPostFilter.
handler,Computes facets -- aggregations with counts of terms or ranges over the whole search results.
handler,This API is experimental and subject to change
handler,This API is experimental and subject to change
handler,Encapsulates facet ranges and facet queries such that their parameters are parsed and cached for efficient re-use.
handler,This class is used exclusively for merging results from each shard in a distributed facet request.
handler,This API is experimental and subject to change
handler,This API is experimental and subject to change
handler,This API is experimental and subject to change
handler,"FieldFacetStats is a utility to accumulate statistics on a set of values in one field, for facet values present in another field."
handler,Highlights query words in the search results.
handler,Solr's default ShardHandler implementation; uses Jetty's async HTTP Client APIs for sending requests.
handler,Creates HttpShardHandler instances
handler,A version of HttpShardHandler optimized for massively-sharded collections.
handler,Creates ParallelHttpShardHandler instances
handler,"A component that can be used in isolation, or in conjunction with QueryComponent to identify & score ""phrases"" found in the input string, based on shingles in indexed fields."
handler,Model the data known about a single (candidate) Phrase -- which may or may not be indexed
handler,Simple container for all request options and data this component needs to store in the Request Context
handler,"Models a single instance of a ""pivot"" specified by a FacetParams.FACET_PIVOT param, which may contain multiple nested fields."
handler,Models a single field somewhere in a hierarchy of fields as part of a pivot facet.
handler,Emcapsulates a collection of PivotFacetValues associated with a PivotFacetField withs pecial tracking of a PivotFacetValue corrisponding to the null value when FacetParams.FACET_MISSING is used.
handler,Sorts PivotFacetValue instances by their count
handler,Sorts PivotFacetValue instances by their value
handler,"Processes all Pivot facet logic for a single node -- both non-distrib, and per-shard"
handler,"Models a single (value, count) pair that will exist in the collection of values for a PivotFacetField parent."
handler,Responsible for handling query cancellation requests
handler,Handles requests for query cancellation for cancellable queries
handler,Fake scorer for a single document
handler,A component to elevate some documents to the top of the result set.
handler,Query triggering elevation.
handler,"Elevation of some documents in search results, with potential exclusion of others."
handler,"QueryElevationComponent.TrieSubsetMatcher<E extends Comparable<? super E>,M>"
handler,Matches a potentially large collection of subsets with a trie implementation.
handler,"QueryElevationComponent.TrieSubsetMatcher.Builder<E extends Comparable<? super E>,M>"
handler,Processor for Range Facets
handler,Encapsulates a single facet.range request along with all its parameters.
handler,Represents a single facet range (or gap) for which the count is to be calculated
handler,This class is experimental and will be changing in the future.
handler,Adds to the log file the document IDs that are sent in the query response.
handler,Refer SOLR-281
handler,"Executes, tracks, and awaits all shard-requests made in the course of a distributed request."
handler,A 2D spatial faceting summary of a rectangular region.
handler,"Goes in FacetComponent.FacetInfo.heatmapFacets, created by SpatialHeatmapFacets.distribParse(org.apache.solr.common.params.SolrParams, ResponseBuilder)."
handler,A SearchComponent implementation which provides support for spell checking and suggestions using the Lucene contributed SpellChecker.
handler,Stats component calculates simple statistics on numeric field values
handler,Models all of the information associated with a single StatsParams.STATS_FIELD instance.
handler,Helper Struct for parsing and encapsulating all of the options relaed to building a HLL
handler,Factory class for creating instance of StatsValues
handler,SuggestComponent: interacts with multiple SolrSuggester to serve up suggestions Responsible for routing commands and queries to the appropriate SolrSuggester and for initializing them as specified by SolrConfig
handler,Abstract class which serves as the root of all task managing handlers
handler,"Return TermEnum information, useful for things like auto suggest."
handler,Comparator for TermsResponse.Term sorting This sorts term by frequency in descending order
handler,Return term vectors for the documents in a query result set.
handler,Lookup strategy for some methods on this class.
handler,An enumeration representing the sumer set of all possible stat values that can be computed.
handler,Class Summary Class Description ConfigSetAPIBase Parent class for all APIs that manipulate configsets CreateConfigSetAPI V2 API for creating a new configset as a copy of an existing one. DeleteConfigSetAPI V2 API for deleting an existing configset ListConfigSets V2 API implementation for listing all available configsets. UploadConfigSetAPI V2 API for uploading a new configset (or overwriting an existing one). UploadConfigSetFileAPI V2 API for adding or updating a single file within a configset.
handler,Parent class for all APIs that manipulate configsets
handler,V2 API for creating a new configset as a copy of an existing one.
handler,V2 API for deleting an existing configset
handler,V2 API implementation for listing all available configsets.
handler,V2 API for uploading a new configset (or overwriting an existing one).
handler,V2 API for adding or updating a single file within a configset.
handler,Interface Summary Interface Description SampleDocumentsLoader SchemaDesignerConstants SchemaSuggester
handler,Class Summary Class Description DefaultSampleDocumentsLoader DefaultSchemaSuggester ManagedSchemaDiff Utility methods for comparing managed index schemas SampleDocuments SchemaDesignerAPI All V2 APIs that have a prefix of /api/schema-designer/
handler,Utility methods for comparing managed index schemas
handler,All V2 APIs that have a prefix of /api/schema-designer/
handler,Interface Summary Interface Description IntComp
handler,Class Summary Class Description ExportWriter Prepares and writes the documents requested by /export requests ExportWriterStream Stream implementation that helps supporting 'expr' streaming in export writer. IntComp.IntAsc IntComp.IntDesc IntValue LongValue
handler,Exception Summary Exception Description ExportWriter.IgnoreException
handler,Prepares and writes the documents requested by /export requests
handler,Stream implementation that helps supporting 'expr' streaming in export writer.
handler,Class Summary Class Description CborLoader This class can load a single document or a stream of documents in CBOR format this is equivalent of loading a single json documet or an array of json documents ContentStreamLoader Load a ContentStream into Solr CSVLoader CSVLoaderBase JavabinLoader Update handler which uses the JavaBin format JsonLoader XMLLoader
handler,This class can load a single document or a stream of documents in CBOR format this is equivalent of loading a single json documet or an array of json documents
handler,Load a ContentStream into Solr
handler,Update handler which uses the JavaBin format
handler,Interface Summary Interface Description TagClusterReducer TaggingAttribute Attribute used by the Tagger to decide if a token can start a new tag.
handler,"Class Summary Class Description OffsetCorrector Tagger Tags maximum string of words in a corpus. TaggerRequestHandler Scans posted text, looking for matching strings in the Solr index. TaggingAttributeImpl Implementation of the TaggingAttribute TagLL This is a Tag -- a startOffset, endOffset and value. XmlOffsetCorrector Corrects offsets to adjust for XML formatted data."
handler,Tags maximum string of words in a corpus.
handler,"Scans posted text, looking for matching strings in the Solr index."
handler,Implementation of the TaggingAttribute
handler,"This is a Tag -- a startOffset, endOffset and value."
handler,Corrects offsets to adjust for XML formatted data.
highlight,Interface Summary Interface Description SolrEncoder SolrFormatter SolrFragListBuilder SolrFragmenter
highlight,"Class Summary Class Description BreakIteratorBoundaryScanner DefaultEncoder Use the DefaultEncoder DefaultSolrHighlighter DefaultSolrHighlighter.FvhContainer GapFragmenter HighlightingPluginBase HtmlEncoder Use the SimpleHTMLEncoder HtmlFormatter Use the SimpleHTMLFormatter RegexFragmenter Fragmenter that tries to produce snippets that ""look"" like a regular expression. ScoreOrderFragmentsBuilder SimpleBoundaryScanner SimpleFragListBuilder SimpleFragmentsBuilder SingleFragListBuilder SolrBoundaryScanner SolrFragmentsBuilder SolrHighlighter UnifiedSolrHighlighter Highlighter impl that uses UnifiedHighlighter UnifiedSolrHighlighter.SolrExtendedUnifiedHighlighter From UnifiedSolrHighlighter.getHighlighter(org.apache.solr.request.SolrQueryRequest). WeightedFragListBuilder"
highlight,Use the DefaultEncoder
highlight,Use the SimpleHTMLEncoder
highlight,Use the SimpleHTMLFormatter
highlight,"Fragmenter that tries to produce snippets that ""look"" like a regular expression."
highlight,Highlighter impl that uses UnifiedHighlighter
highlight,From UnifiedSolrHighlighter.getHighlighter(org.apache.solr.request.SolrQueryRequest).
index,Class Summary Class Description DefaultMergePolicyFactory A MergePolicyFactory for the default MergePolicy. LogByteSizeMergePolicyFactory A MergePolicyFactory for LogByteSizeMergePolicy objects. LogDocMergePolicyFactory A MergePolicyFactory for LogDocMergePolicy objects. MergePolicyFactory A factory for creating a MergePolicy. MergePolicyFactoryArgs NoMergePolicyFactory SimpleMergePolicyFactory A MergePolicyFactory for simple MergePolicy objects. SlowCompositeReaderWrapper This class forces a composite reader (eg a MultiReader or DirectoryReader) to emulate a LeafReader. SortingMergePolicy SortingMergePolicyFactory A MergePolicyFactory for SortingMergePolicy objects. TieredMergePolicyFactory A MergePolicyFactory for TieredMergePolicy objects. UpgradeIndexMergePolicyFactory A MergePolicyFactory for UpgradeIndexMergePolicy objects. WrapperMergePolicyFactory A MergePolicyFactory for wrapping additional factories.
index,A MergePolicyFactory for the default MergePolicy.
index,A MergePolicyFactory for LogByteSizeMergePolicy objects.
index,A MergePolicyFactory for LogDocMergePolicy objects.
index,A factory for creating a MergePolicy.
index,A MergePolicyFactory for simple MergePolicy objects.
index,This class forces a composite reader (eg a MultiReader or DirectoryReader) to emulate a LeafReader.
index,A MergePolicyFactory for SortingMergePolicy objects.
index,A MergePolicyFactory for TieredMergePolicy objects.
index,A MergePolicyFactory for UpgradeIndexMergePolicy objects.
index,A MergePolicyFactory for wrapping additional factories.
internal,Class Summary Class Description CharBuffer A simple StringBuffer replacement that aims to reduce copying as much as possible. CSVParser Parses CSV files according to the specified configuration. CSVPrinter Print values as a comma separated list. CSVStrategy CSVStrategy CSVUtils Utility methods for dealing with CSV files
internal,A simple StringBuffer replacement that aims to reduce copying as much as possible.
internal,Parses CSV files according to the specified configuration.
internal,Print values as a comma separated list.
internal,Utility methods for dealing with CSV files
jersey,Interface Summary Interface Description APIConfigProvider<T extends APIConfigProvider.APIConfig> Interface to be implemented by the Request Handlers that need to provide some custom configuration to the V2 APIs APIConfigProvider.APIConfig JacksonReflectMapWriter A MapWriter implementation that relies on Jackson's JsonProperty annotation. RequestContextKeys Keys used to store and retrieve values from the Jersey request context.
jersey,"Class Summary Class Description APIConfigProviderBinder Jersey binder for APIConfigProvider CatchAllExceptionMapper Flattens the exception and sets on a SolrJerseyResponse. InjectionFactories InjectionFactories.RequestContextBasedFactory Allows access to a ContainerRequestContext via a ServiceLocator InjectionFactories.ReuseFromContextIndexSchemaFactory InjectionFactories.ReuseFromContextSolrCoreFactory Fetch the (existing) SolrCore from the request context InjectionFactories.ReuseFromContextSolrParamsFactory InjectionFactories.SingletonFactory<T> InjectionFactories.SolrQueryRequestFactory InjectionFactories.SolrQueryResponseFactory JerseyAppHandlerCache Stores Jersey 'ApplicationHandler' instances by an ID or hash derived from their ConfigSet. JerseyApplications JAX-RS ""application"" configurations for Solr's CoreContainer and SolrCore instances JerseyApplications.CoreContainerApp JerseyApplications.SolrCoreApp MediaTypeOverridingFilter Overrides the content-type of the response based on an optional user-provided 'wt' parameter MessageBodyReaders A collection point for various MessageBodyReader implementations. MessageBodyReaders.CachingDelegatingMessageBodyReader Caches the deserialized request body in the ContainerRequestContext for use later in the request lifecycle. MessageBodyReaders.CachingJsonMessageBodyReader A JSON MessageBodyReader that caches request bodies for use later in the request lifecycle. MessageBodyWriters A collection of thin Jersey shims around Solr's existing QueryResponseWriter interface MessageBodyWriters.BaseMessageBodyWriter MessageBodyWriters.CsvMessageBodyWriter MessageBodyWriters.JavabinMessageBodyWriter MessageBodyWriters.RawMessageBodyWriter MessageBodyWriters.XmlMessageBodyWriter NotFoundExceptionMapper An ExceptionMapper for the exception produced by JAX-RS when no match could be found for an incoming request. PostRequestDecorationFilter Applies standard post-processing decorations to a SolrJerseyResponse that are needed on all responses. PostRequestLoggingFilter RequestMetricHandling A request and response filter used to initialize and report per-request metrics. RequestMetricHandling.PostRequestMetricsFilter Adjusts post-request metrics (timing, etc.)for individual Jersey requests. RequestMetricHandling.PreRequestMetricsFilter Sets up the metrics-context for individual requests SolrJacksonMapper Customizes the ObjectMapper settings used for serialization/deserialization in Jersey SolrJacksonMapper.NamedListSerializer SolrRequestAuthorizer A JAX-RS request filter that blocks or allows requests based on the authorization plugin configured in security.json."
jersey,Annotation Types Summary Annotation Type Description PermissionName Associates the resource method with a particular PermissionNameProvider value.
jersey,Jersey binder for APIConfigProvider
jersey,Flattens the exception and sets on a SolrJerseyResponse.
jersey,Allows access to a ContainerRequestContext via a ServiceLocator
jersey,Fetch the (existing) SolrCore from the request context
jersey,Stores Jersey 'ApplicationHandler' instances by an ID or hash derived from their ConfigSet.
jersey,"JAX-RS ""application"" configurations for Solr's CoreContainer and SolrCore instances"
jersey,Overrides the content-type of the response based on an optional user-provided 'wt' parameter
jersey,A collection point for various MessageBodyReader implementations.
jersey,Caches the deserialized request body in the ContainerRequestContext for use later in the request lifecycle.
jersey,A JSON MessageBodyReader that caches request bodies for use later in the request lifecycle.
jersey,A collection of thin Jersey shims around Solr's existing QueryResponseWriter interface
jersey,An ExceptionMapper for the exception produced by JAX-RS when no match could be found for an incoming request.
jersey,Applies standard post-processing decorations to a SolrJerseyResponse that are needed on all responses.
jersey,A request and response filter used to initialize and report per-request metrics.
jersey,"Adjusts post-request metrics (timing, etc.)for individual Jersey requests."
jersey,Sets up the metrics-context for individual requests
jersey,Customizes the ObjectMapper settings used for serialization/deserialization in Jersey
jersey,A JAX-RS request filter that blocks or allows requests based on the authorization plugin configured in security.json.
jersey,Class Summary Class Description ContainerRequestUtils Utility methods for creating and populating a ContainerRequest for use with Jersey ApplicationHandlers JettyBridgeResponseWriter A ResponseWriter which copies that output of JAX-RS computation over to HttpServletResponse object used by the Jetty server.
jersey,Utility methods for creating and populating a ContainerRequest for use with Jersey ApplicationHandlers
jersey,A ResponseWriter which copies that output of JAX-RS computation over to HttpServletResponse object used by the Jetty server.
legacy,Interface Summary Interface Description LegacyNumericTokenStream.LegacyNumericTermAttribute Expert: Use this attribute to get the details of the currently generated token.
legacy,"Class Summary Class Description BBoxStrategy Deprecated. LegacyDoubleField Deprecated. Please use DoublePoint instead LegacyField Deprecated. Please switch to PointValues instead LegacyFieldType Deprecated. Please switch to PointValues instead LegacyFloatField Deprecated. Please use FloatPoint instead LegacyIntField Deprecated. Please use IntPoint instead LegacyLongField Deprecated. Please use LongPoint instead LegacyNumericRangeQuery<T extends Number> Deprecated. Instead index with IntPoint, LongPoint, FloatPoint, DoublePoint, and create range queries with IntPoint.newRangeQuery(), LongPoint.newRangeQuery(), FloatPoint.newRangeQuery(), DoublePoint.newRangeQuery() respectively. LegacyNumericTokenStream Deprecated. Please switch to PointValues instead LegacyNumericTokenStream.LegacyNumericTermAttributeImpl Implementation of LegacyNumericTokenStream.LegacyNumericTermAttribute. LegacyNumericUtils Deprecated. Please use PointValues instead. LegacyNumericUtils.IntRangeBuilder Callback for LegacyNumericUtils.splitIntRange(org.apache.solr.legacy.LegacyNumericUtils.IntRangeBuilder, int, int, int). LegacyNumericUtils.LongRangeBuilder Callback for LegacyNumericUtils.splitLongRange(org.apache.solr.legacy.LegacyNumericUtils.LongRangeBuilder, int, long, long)."
legacy,Enum Summary Enum Description LegacyNumericType Deprecated. Please switch to PointValues instead
legacy,Deprecated. Please use DoublePoint instead
legacy,Deprecated. Please switch to PointValues instead
legacy,Deprecated. Please switch to PointValues instead
legacy,Deprecated. Please use FloatPoint instead
legacy,Deprecated. Please use IntPoint instead
legacy,Deprecated. Please use LongPoint instead
legacy,LegacyNumericRangeQuery<T extends Number>
legacy,"Deprecated. Instead index with IntPoint, LongPoint, FloatPoint, DoublePoint, and create range queries with IntPoint.newRangeQuery(), LongPoint.newRangeQuery(), FloatPoint.newRangeQuery(), DoublePoint.newRangeQuery() respectively."
legacy,Deprecated. Please switch to PointValues instead
legacy,Implementation of LegacyNumericTokenStream.LegacyNumericTermAttribute.
legacy,Deprecated. Please use PointValues instead.
legacy,"Callback for LegacyNumericUtils.splitIntRange(org.apache.solr.legacy.LegacyNumericUtils.IntRangeBuilder, int, int, int)."
legacy,"Callback for LegacyNumericUtils.splitLongRange(org.apache.solr.legacy.LegacyNumericUtils.LongRangeBuilder, int, long, long)."
logging,Class Summary Class Description CircularList<T> FIFO Circular List. DeprecationLog Utility to log a deprecation. ListenerConfig LoggerInfo Wrapper class for Logger implementations LogWatcher<E> A Class to monitor Logging events and hold N events in memory LogWatcherConfig Defines the configuration of a LogWatcher MDCLoggingContext Set's per thread context info for logging. MDCSnapshot Takes a 'snapshot' of the current MDC context map which is restored on (auto) close.
logging,FIFO Circular List.
logging,Utility to log a deprecation.
logging,Wrapper class for Logger implementations
logging,A Class to monitor Logging events and hold N events in memory
logging,Defines the configuration of a LogWatcher
logging,Set's per thread context info for logging.
logging,Takes a 'snapshot' of the current MDC context map which is restored on (auto) close.
logging,Class Summary Class Description JulInfo JulWatcher RecordHandler
logging,Class Summary Class Description Log4j2Watcher Log4j2Watcher.Log4j2Appender Log4j2Watcher.Log4j2Info
metrics,Interface Summary Interface Description MetricSuppliers.NoOpMetric Marker interface for all no-op metrics. SolrMetricProducer Used by objects that expose metrics through SolrMetricManager.
metrics,"Class Summary Class Description AggregateMetric This class is used for keeping several partial named values and providing useful statistics over them. AggregateMetric.Update Simple class to represent current value and how many times it was set. AltBufferPoolMetricSet This is an alternative implementation of BufferPoolMetricSet that doesn't need an MBean server. DelegateRegistryCounter A counter implementation that is aware of both primary and delegate metrics belonging to different registries and able to update metrics in multiple registries DelegateRegistryHistogram A meter implementation that is aware of both primary and delegate metrics belonging to different registries and able to update metrics in multiple registries DelegateRegistryMeter A meter implementation that is aware of both primary and delegate metrics belonging to different registries and able to update metrics in multiple registries DelegateRegistryTimer A timer implementation that is aware of both primary and delegate metrics belonging to different registries and able to update metrics in multiple registries FilteringSolrMetricReporter A SolrMetricReporter that supports (prefix) filters. MetricsMap Dynamically constructed map of metrics, intentionally different from MetricSet where each metric had to be known in advance and registered separately in MetricRegistry. MetricSuppliers Helper class for constructing instances of MetricRegistry.MetricSupplier based on plugin configuration. MetricSuppliers.DefaultCounterSupplier Default Counter supplier. MetricSuppliers.DefaultHistogramSupplier Default supplier of Histogram instances, with configurable reservoir. MetricSuppliers.DefaultMeterSupplier Default Meter supplier. MetricSuppliers.DefaultTimerSupplier Default supplier of Timer instances, with configurable clock and reservoir. MetricSuppliers.NoOpCounterSupplier No-op implementation of Counter supplier. MetricSuppliers.NoOpGauge No-op implementation of Gauge. MetricSuppliers.NoOpHistogramSupplier No-op implementation of Histogram supplier. MetricSuppliers.NoOpMeterSupplier No-op implementation of Meter supplier. MetricSuppliers.NoOpTimerSupplier No-op implementation of Timer supplier. OperatingSystemMetricSet This is an extended replacement for FileDescriptorRatioGauge - that class uses reflection and doesn't work under Java 9. SolrCoreContainerReporter A SolrMetricReporter that has access to its CoreContainer. SolrCoreMetricManager Helper class for managing registration of SolrMetricProducer's and SolrMetricReporter's specific to a SolrCore instance. SolrCoreReporter A FilteringSolrMetricReporter that has access to its SolrCore. SolrDelegateRegistryMetricsContext This class represents a metrics context that is delegate aware in that it is aware of multiple metric registries, a primary and a delegate. SolrMetricInfo Wraps meta-data for a metric. SolrMetricManager This class maintains a repository of named MetricRegistry instances, and provides several helper methods for managing various aspects of metrics reporting: registry creation, clearing and removal, creation of most common metric implementations, management of SolrMetricReporter-s specific to a named registry. SolrMetricManager.AndFilter An implementation of MetricFilter that selects metrics that match all filters in a list of filters. SolrMetricManager.GaugeWrapper<T> This is a wrapper for Gauge metrics, which are usually implemented as lambdas that often keep a reference to their parent instance. SolrMetricManager.OrFilter An implementation of MetricFilter that selects metrics that match any filter in a list of filters. SolrMetricManager.PrefixFilter An implementation of MetricFilter that selects metrics with names that start with one of prefixes. SolrMetricManager.RegexFilter An implementation of MetricFilter that selects metrics with names that match regular expression patterns. SolrMetricReporter Interface for 'pluggable' metric reporters. SolrMetricsContext This class represents a metrics context that ties together components with the same life-cycle and provides convenient access to the metric registry."
metrics,Enum Summary Enum Description SolrMetricManager.ResolutionStrategy Potential conflict resolution strategies when attempting to register a new metric that already exists
metrics,This class is used for keeping several partial named values and providing useful statistics over them.
metrics,Simple class to represent current value and how many times it was set.
metrics,This is an alternative implementation of BufferPoolMetricSet that doesn't need an MBean server.
metrics,A counter implementation that is aware of both primary and delegate metrics belonging to different registries and able to update metrics in multiple registries
metrics,A meter implementation that is aware of both primary and delegate metrics belonging to different registries and able to update metrics in multiple registries
metrics,A meter implementation that is aware of both primary and delegate metrics belonging to different registries and able to update metrics in multiple registries
metrics,A timer implementation that is aware of both primary and delegate metrics belonging to different registries and able to update metrics in multiple registries
metrics,A SolrMetricReporter that supports (prefix) filters.
metrics,"Dynamically constructed map of metrics, intentionally different from MetricSet where each metric had to be known in advance and registered separately in MetricRegistry."
metrics,Helper class for constructing instances of MetricRegistry.MetricSupplier based on plugin configuration.
metrics,Default Counter supplier.
metrics,"Default supplier of Histogram instances, with configurable reservoir."
metrics,Default Meter supplier.
metrics,"Default supplier of Timer instances, with configurable clock and reservoir."
metrics,No-op implementation of Counter supplier.
metrics,No-op implementation of Gauge.
metrics,No-op implementation of Histogram supplier.
metrics,No-op implementation of Meter supplier.
metrics,No-op implementation of Timer supplier.
metrics,This is an extended replacement for FileDescriptorRatioGauge - that class uses reflection and doesn't work under Java 9.
metrics,A SolrMetricReporter that has access to its CoreContainer.
metrics,Helper class for managing registration of SolrMetricProducer's and SolrMetricReporter's specific to a SolrCore instance.
metrics,A FilteringSolrMetricReporter that has access to its SolrCore.
metrics,"This class represents a metrics context that is delegate aware in that it is aware of multiple metric registries, a primary and a delegate."
metrics,Wraps meta-data for a metric.
metrics,"This class maintains a repository of named MetricRegistry instances, and provides several helper methods for managing various aspects of metrics reporting: registry creation, clearing and removal, creation of most common metric implementations, management of SolrMetricReporter-s specific to a named registry."
metrics,An implementation of MetricFilter that selects metrics that match all filters in a list of filters.
metrics,"This is a wrapper for Gauge metrics, which are usually implemented as lambdas that often keep a reference to their parent instance."
metrics,An implementation of MetricFilter that selects metrics that match any filter in a list of filters.
metrics,An implementation of MetricFilter that selects metrics with names that start with one of prefixes.
metrics,An implementation of MetricFilter that selects metrics with names that match regular expression patterns.
metrics,Interface for 'pluggable' metric reporters.
metrics,This class represents a metrics context that ties together components with the same life-cycle and provides convenient access to the metric registry.
metrics,Class Summary Class Description SolrMetric Base class is a wrapper to categorize and export Metric to DataPointSnapshot and register to a SolrPrometheusFormatter. SolrNoOpMetric SolrPrometheusFormatter Base class for all SolrPrometheusFormatter holding MetricSnapshots.
metrics,Base class is a wrapper to categorize and export Metric to DataPointSnapshot and register to a SolrPrometheusFormatter.
metrics,Base class for all SolrPrometheusFormatter holding MetricSnapshots.
metrics,Interface Summary Interface Description PrometheusCoreFormatterInfo
metrics,Class Summary Class Description SolrCoreCacheMetric Dropwizard metrics of name CACHE.* SolrCoreHandlerMetric Dropwizard metrics of name ADMIN/QUERY/UPDATE/REPLICATION.* SolrCoreHighlighterMetric Dropwizard metrics of name HIGHLIGHTER.* SolrCoreIndexMetric Dropwizard metrics of name INDEX.* SolrCoreMetric Base class is a wrapper to export a solr.core Metric SolrCoreSearcherMetric Dropwizard metrics of name SEARCHER.* SolrCoreTlogMetric Dropwizard metrics of name TLOG.* SolrPrometheusCoreFormatter This class maintains a MetricSnapshots exported from solr.core MetricRegistry
metrics,Enum Summary Enum Description PrometheusCoreFormatterInfo.CoreCategory Category of prefix Solr Core dropwizard handler metric names
metrics,Dropwizard metrics of name CACHE.*
metrics,Dropwizard metrics of name ADMIN/QUERY/UPDATE/REPLICATION.*
metrics,Dropwizard metrics of name HIGHLIGHTER.*
metrics,Dropwizard metrics of name INDEX.*
metrics,Base class is a wrapper to export a solr.core Metric
metrics,Dropwizard metrics of name SEARCHER.*
metrics,Dropwizard metrics of name TLOG.*
metrics,This class maintains a MetricSnapshots exported from solr.core MetricRegistry
metrics,Class Summary Class Description SolrJettyDispatchesMetric SolrJettyMetric Base class is a wrapper to export a solr.jetty Metric SolrJettyReqRespMetric SolrPrometheusJettyFormatter This class maintains a MetricSnapshots exported from solr.jetty MetricRegistry
metrics,Base class is a wrapper to export a solr.jetty Metric
metrics,This class maintains a MetricSnapshots exported from solr.jetty MetricRegistry
metrics,Interface Summary Interface Description PrometheusJvmFormatterInfo
metrics,Class Summary Class Description SolrJvmBuffersMetric SolrJvmGcMetrics SolrJvmMemoryMetric SolrJvmMetric Base class is a wrapper to export a solr.jvm Metric SolrJvmOsMetric SolrPrometheusJvmFormatter This class maintains a MetricSnapshots exported from solr.jvm MetricRegistry
metrics,Enum Summary Enum Description PrometheusJvmFormatterInfo.JvmCategory Category of prefix Solr JVM dropwizard handler metric names
metrics,Base class is a wrapper to export a solr.jvm Metric
metrics,This class maintains a MetricSnapshots exported from solr.jvm MetricRegistry
metrics,Interface Summary Interface Description PrometheusNodeFormatterInfo
metrics,Class Summary Class Description SolrNodeContainerMetric SolrNodeHandlerMetric SolrNodeMetric Base class is a wrapper to export a solr.node Metric SolrPrometheusNodeFormatter This class maintains a MetricSnapshots exported from solr.node MetricRegistry
metrics,Enum Summary Enum Description PrometheusNodeFormatterInfo.NodeCategory Category of prefix Solr Node dropwizard handler metric names
metrics,Base class is a wrapper to export a solr.node Metric
metrics,This class maintains a MetricSnapshots exported from solr.node MetricRegistry
metrics,Interface Summary Interface Description ReporterClientCache.ClientProvider<T> Provide an instance of service client.
metrics,Class Summary Class Description ReporterClientCache<T> Simple cache for reusable service clients used by some implementations of SolrMetricReporter. SolrGraphiteReporter Metrics reporter that wraps GraphiteReporter. SolrJmxReporter A SolrMetricReporter that finds (or creates) a MBeanServer from the given configuration and registers metrics to it with JMX. SolrSlf4jReporter Metrics reporter that wraps Slf4jReporter.
metrics,Simple cache for reusable service clients used by some implementations of SolrMetricReporter.
metrics,Metrics reporter that wraps GraphiteReporter.
metrics,A SolrMetricReporter that finds (or creates) a MBeanServer from the given configuration and registers metrics to it with JMX.
metrics,Metrics reporter that wraps Slf4jReporter.
metrics,Interface Summary Interface Description JmxMetricsReporter.JmxCounterMBean JmxMetricsReporter.JmxGaugeMBean JmxMetricsReporter.JmxHistogramMBean JmxMetricsReporter.JmxMeterMBean JmxMetricsReporter.JmxTimerMBean JmxMetricsReporter.MetricMBean
metrics,"Class Summary Class Description JmxMetricsReporter This is a modified copy of Dropwizard's JmxReporter and classes that it internally uses, with a few important differences: this class knows that it can directly use MetricsMap as a dynamic MBean. JmxMetricsReporter.Builder Builder for the JmxMetricsReporter class. JmxObjectNameFactory Factory to create MBean names for a given metric."
metrics,"This is a modified copy of Dropwizard's JmxReporter and classes that it internally uses, with a few important differences: this class knows that it can directly use MetricsMap as a dynamic MBean."
metrics,Builder for the JmxMetricsReporter class.
metrics,Factory to create MBean names for a given metric.
metrics,Class Summary Class Description SolrReporter Implementation of ScheduledReporter that reports metrics from selected registries and sends them periodically as update requests to a selected Solr collection and to a configured handler. SolrReporter.Builder Builder for the SolrReporter class. SolrReporter.Report Specification of what registries and what metrics to send.
metrics,Implementation of ScheduledReporter that reports metrics from selected registries and sends them periodically as update requests to a selected Solr collection and to a configured handler.
metrics,Builder for the SolrReporter class.
metrics,Specification of what registries and what metrics to send.
packagemanager,"Class Summary Class Description DefaultPackageRepository This is a serializable bean (for the JSON that is stored in /repository.json) representing a repository of Solr packages. PackageManager Handles most of the management of packages that are already installed in Solr. PackageRepository Abstract class for a repository, holding SolrPackage items. PackageUtils RepositoryManager Handles most of the management of repositories and packages present in external repositories. SolrPackage Describes a package (along with all released versions) as it appears in a repository. SolrPackage.Artifact SolrPackage.Command SolrPackage.Manifest SolrPackage.Plugin SolrPackage.SolrPackageRelease SolrPackageInstance Describes one instance of a package as it exists in Solr when installed."
packagemanager,This is a serializable bean (for the JSON that is stored in /repository.json) representing a repository of Solr packages.
packagemanager,Handles most of the management of packages that are already installed in Solr.
packagemanager,"Abstract class for a repository, holding SolrPackage items."
packagemanager,Handles most of the management of repositories and packages present in external repositories.
packagemanager,Describes a package (along with all released versions) as it appears in a repository.
packagemanager,Describes one instance of a package as it exists in Solr when installed.
parser,Interface Summary Interface Description QueryParserConstants Token literal values and constants.
parser,Class Summary Class Description QueryParser QueryParserTokenManager Token Manager. SolrQueryParserBase This class is overridden by QueryParser in QueryParser.jj and acts to separate the majority of the Java code from the .jj grammar file. SolrQueryParserBase.RawQuery Token Describes the input token stream.
parser,"Enum Summary Enum Description QueryParser.Operator The default operator for parsing queries. SolrQueryParserBase.MagicFieldName Identifies the list of all known ""magic fields"" that trigger special parsing behavior SolrQueryParserBase.SynonymQueryStyle Query strategy when analyzed query terms overlap the same position (ie synonyms) consider if pants and khakis are query time synonyms"
parser,Exception Summary Exception Description ParseException This exception is thrown when parse errors are encountered.
parser,Error Summary Error Description TokenMgrError Token Manager Error.
parser,Token Manager.
parser,This class is overridden by QueryParser in QueryParser.jj and acts to separate the majority of the Java code from the .jj grammar file.
parser,Describes the input token stream.
pkg,Interface Summary Interface Description PackageListeners.Listener
pkg,Class Summary Class Description PackageAPI This implements the public end points (/api/cluster/package) of package API. PackageAPI.Packages PackageAPI.PkgVersion PackageListeners PackageListeners.Listener.Ctx PackageListeningClassLoader A SolrClassLoader that is designed to listen to a set of packages. PackagePluginHolder<T> SolrPackageLoader The class that holds a mapping of various packages and classloaders
pkg,This implements the public end points (/api/cluster/package) of package API.
pkg,A SolrClassLoader that is designed to listen to a set of packages.
pkg,The class that holds a mapping of various packages and classloaders
query,Class Summary Class Description FilterQuery A filtered query wrapped around another query similar to BooleanClause.Occur.FILTER -- it scores as 0. SolrRangeQuery
query,A filtered query wrapped around another query similar to BooleanClause.Occur.FILTER -- it scores as 0.
request,Interface Summary Interface Description SolrQueryRequest Container for a request to execute a query. SolrRequestHandler Implementations of SolrRequestHandler are called to handle query requests.
request,"Class Summary Class Description DelegatingSolrQueryRequest A SolrQueryRequest implementation that defers to a delegate in all cases. DocValuesFacets Computes term facets for docvalues field (single or multivalued). DocValuesStats Computes term stats for docvalues field (single or multivalued). IntervalFacets Computes interval facets for docvalues field (single or multivalued). IntervalFacets.FacetInterval Helper class to match and count of documents in specified intervals LocalSolrQueryRequest RegexBytesRefFilter An implementation of Predicate which returns true if the BytesRef matches the supplied regular expression. SimpleFacets A class that generates simple Facet information for a request. SimpleFacets.CountPair<K extends Comparable<? super K>,V extends Comparable<? super V>> A simple key=>val pair whose natural order is such that higher vals come before lower vals. SimpleFacets.ParsedParams SolrQueryRequestBase Base implementation of SolrQueryRequest that provides some convenience methods for accessing parameters, and manages an IndexSearcher reference. SolrRequestInfo Information about the Solr request/response held in a ThreadLocal. SubstringBytesRefFilter An implementation of Predicate which returns true if the BytesRef contains a given substring."
request,A SolrQueryRequest implementation that defers to a delegate in all cases.
request,Computes term facets for docvalues field (single or multivalued).
request,Computes term stats for docvalues field (single or multivalued).
request,Computes interval facets for docvalues field (single or multivalued).
request,Helper class to match and count of documents in specified intervals
request,An implementation of Predicate which returns true if the BytesRef matches the supplied regular expression.
request,A class that generates simple Facet information for a request.
request,"SimpleFacets.CountPair<K extends Comparable<? super K>,V extends Comparable<? super V>>"
request,A simple key=>val pair whose natural order is such that higher vals come before lower vals.
request,"Base implementation of SolrQueryRequest that provides some convenience methods for accessing parameters, and manages an IndexSearcher reference."
request,Information about the Solr request/response held in a ThreadLocal.
request,An implementation of Predicate which returns true if the BytesRef contains a given substring.
request,Class Summary Class Description JSONUtil ObjectUtil ObjectUtil.ConflictHandler RequestUtil
request,Class Summary Class Description MacroExpander
response,Interface Summary Interface Description BinaryQueryResponseWriter Implementations of BinaryQueryResponseWriter are used to write response in binary format. QueryResponseWriter Implementations of QueryResponseWriter are used to format responses to query requests.
response,Class Summary Class Description BasicResultContext BinaryResponseWriter BinaryResponseWriter.Resolver CborResponseWriter A response writer impl that can write results in CBOR (cbor.io) format when wt=cbor. CSVResponseWriter Response writer for csv data DocsStreamer This streams SolrDocuments from a DocList and applies transformer GeoJSONResponseWriter Extend the standard JSONResponseWriter to support GeoJSON. GraphMLResponseWriter JacksonJsonWriter A JSON ResponseWriter that uses jackson. JacksonJsonWriter.WriterImpl JSONResponseWriter JSONWriter PHPResponseWriter Deprecated. PHPSerializedResponseWriter Deprecated. PrometheusResponseWriter Response writer for Prometheus metrics. PythonResponseWriter Deprecated. QueryResponseWriterUtil Static utility methods relating to QueryResponseWriters RawResponseWriter Writes a ContentStream directly to the output. ResultContext A class to hold the QueryResult and the Query RubyResponseWriter Deprecated. SchemaXmlResponseWriter SchemaXmlWriter SmileResponseWriter SmileResponseWriter.SmileWriter SolrQueryResponse SolrQueryResponse is used by a query handler to return the response to a query request. TabularResponseWriter Base response writer for table-oriented data TextResponseWriter Base class for text-oriented response writers. XMLResponseWriter XMLWriter
response,A response writer impl that can write results in CBOR (cbor.io) format when wt=cbor.
response,Response writer for csv data
response,This streams SolrDocuments from a DocList and applies transformer
response,Extend the standard JSONResponseWriter to support GeoJSON.
response,A JSON ResponseWriter that uses jackson.
response,Response writer for Prometheus metrics.
response,Static utility methods relating to QueryResponseWriters
response,Writes a ContentStream directly to the output.
response,A class to hold the QueryResult and the Query
response,SolrQueryResponse is used by a query handler to return the response to a query request.
response,Base response writer for table-oriented data
response,Base class for text-oriented response writers.
response,"Interface Summary Interface Description TransformerFactory.FieldRenamer The TransformerFactory.FieldRenamer interface should be implemented by any TransformerFactory capable of generating transformers that might rename fields, and should implement TransformerFactory.FieldRenamer.create(String, SolrParams, SolrQueryRequest, Map, Set) in place of TransformerFactory.create(String, SolrParams, SolrQueryRequest) (with the latter method overridden to throw UnsupportedOperationException)."
response,"Class Summary Class Description BaseEditorialTransformer ChildDocTransformerFactory Attaches all descendants (child documents) to each parent document. CoreAugmenterFactory DocIdAugmenterFactory Augments the document with a [docid] integer containing it's current (internal) id in the lucene index. DocTransformer A DocTransformer can add, remove or alter a Document before it is written out to the Response. DocTransformer.NoopFieldTransformer Trivial Impl that ensure that the specified field is requested as an ""extra"" field, but then does nothing during the transformation phase. DocTransformers Transform a document before it gets sent out ElevatedMarkerFactory Used to mark whether a document has been elevated or not ExcludedMarkerFactory ExplainAugmenterFactory GeoTransformerFactory This DocumentTransformer will write a Shape to the SolrDocument using the requested format. RawValueTransformerFactory RenameFieldTransformer Return a field with a name that is different that what is indexed ScoreAugmenter Simple Augmenter that adds the score ShardAugmenterFactory SubQueryAugmenterFactory This transformer executes subquery per every result document. TransformerFactory New instance for each request ValueAugmenterFactory ValueAugmenterFactory.ValueAugmenter ValueSourceAugmenter Add values from a ValueSource (function query etc)"
response,Enum Summary Enum Description ExplainAugmenterFactory.Style ShardAugmenterFactory.Style
response,Attaches all descendants (child documents) to each parent document.
response,Augments the document with a [docid] integer containing it's current (internal) id in the lucene index.
response,"A DocTransformer can add, remove or alter a Document before it is written out to the Response."
response,"Trivial Impl that ensure that the specified field is requested as an ""extra"" field, but then does nothing during the transformation phase."
response,Transform a document before it gets sent out
response,Used to mark whether a document has been elevated or not
response,This DocumentTransformer will write a Shape to the SolrDocument using the requested format.
response,Return a field with a name that is different that what is indexed
response,Simple Augmenter that adds the score
response,This transformer executes subquery per every result document.
response,New instance for each request
response,Add values from a ValueSource (function query etc)
rest,"Interface Summary Interface Description ManagedResource.ChildResourceSupport Marker interface to indicate a ManagedResource implementation class also supports managing child resources at path: /<resource>/{child} ManagedResourceObserver Allows a Solr component to register as an observer of important ManagedResource events, such as when the managed data is loaded. ManagedResourceStorage.StorageIO Hides the underlying storage implementation for data being managed by a ManagedResource."
rest,"Class Summary Class Description BaseSolrResource Base class for delegating REST-oriented requests to ManagedResources. ManagedResource Supports Solr components that have external data that needs to be managed using the REST API. ManagedResourceStorage Abstract base class that provides most of the functionality needed to store arbitrary data for managed resources. ManagedResourceStorage.FileStorageIO Local file-based storage implementation. ManagedResourceStorage.InMemoryStorageIO Memory-backed storage IO; not really intended for storage large amounts of data in production, but useful for testing and other transient workloads. ManagedResourceStorage.JsonStorage Default storage implementation that uses JSON as the storage format for managed data. ManagedResourceStorage.ZooKeeperStorageIO ZooKeeper based storage implementation that uses the SolrZkClient provided by the CoreContainer. RestManager Supports runtime mapping of REST API endpoints to ManagedResource implementations; endpoints can be registered at either the /schema or /config base paths, depending on which base path is more appropriate for the type of managed resource. RestManager.ManagedEndpoint Request handling needs a lightweight object to delegate a request to. RestManager.Registry Per-core registry of ManagedResources found during core initialization."
rest,Marker interface to indicate a ManagedResource implementation class also supports managing child resources at path: /<resource>/{child}
rest,"Allows a Solr component to register as an observer of important ManagedResource events, such as when the managed data is loaded."
rest,Hides the underlying storage implementation for data being managed by a ManagedResource.
rest,Base class for delegating REST-oriented requests to ManagedResources.
rest,Supports Solr components that have external data that needs to be managed using the REST API.
rest,Abstract base class that provides most of the functionality needed to store arbitrary data for managed resources.
rest,Local file-based storage implementation.
rest,"Memory-backed storage IO; not really intended for storage large amounts of data in production, but useful for testing and other transient workloads."
rest,Default storage implementation that uses JSON as the storage format for managed data.
rest,ZooKeeper based storage implementation that uses the SolrZkClient provided by the CoreContainer.
rest,"Supports runtime mapping of REST API endpoints to ManagedResource implementations; endpoints can be registered at either the /schema or /config base paths, depending on which base path is more appropriate for the type of managed resource."
rest,Request handling needs a lightweight object to delegate a request to.
rest,Per-core registry of ManagedResources found during core initialization.
rest,Class Summary Class Description FieldTypeXmlAdapter Utility class for converting a JSON definition of a FieldType into the XML format expected by the FieldTypePluginLoader.
rest,Utility class for converting a JSON definition of a FieldType into the XML format expected by the FieldTypePluginLoader.
rest,"Class Summary Class Description BaseManagedTokenFilterFactory Abstract based class for implementing TokenFilterFactory objects that are managed by the REST API. ManagedStopFilterFactory TokenFilterFactory that uses the ManagedWordSetResource implementation for managing stop words using the REST API. ManagedSynonymFilterFactory Deprecated. Use ManagedSynonymGraphFilterFactory instead, but be sure to also use FlattenGraphFilterFactory at index time (not at search time) as well. ManagedSynonymFilterFactory.SynonymManager ManagedResource implementation for synonyms, which are so specialized that it makes sense to implement this class as an inner class as it has little application outside the SynonymFilterFactory use cases. ManagedSynonymGraphFilterFactory TokenFilterFactory and ManagedResource implementation for doing CRUD on synonyms using the REST API. ManagedSynonymGraphFilterFactory.SynonymManager ManagedResource implementation for synonyms, which are so specialized that it makes sense to implement this class as an inner class as it has little application outside the SynonymFilterFactory use cases. ManagedWordSetResource ManagedResource implementation for managing a set of words using the REST API; useful for managing stop words and/or protected words for analysis components like the KeywordMarkerFilter."
rest,Abstract based class for implementing TokenFilterFactory objects that are managed by the REST API.
rest,TokenFilterFactory that uses the ManagedWordSetResource implementation for managing stop words using the REST API.
rest,"Deprecated. Use ManagedSynonymGraphFilterFactory instead, but be sure to also use FlattenGraphFilterFactory at index time (not at search time) as well."
rest,"ManagedResource implementation for synonyms, which are so specialized that it makes sense to implement this class as an inner class as it has little application outside the SynonymFilterFactory use cases."
rest,TokenFilterFactory and ManagedResource implementation for doing CRUD on synonyms using the REST API.
rest,"ManagedResource implementation for synonyms, which are so specialized that it makes sense to implement this class as an inner class as it has little application outside the SynonymFilterFactory use cases."
rest,ManagedResource implementation for managing a set of words using the REST API; useful for managing stop words and/or protected words for analysis components like the KeywordMarkerFilter.
schema,"Interface Summary Interface Description DateValueFieldType Marker interface for Date-valued field types. DoubleValueFieldType Marker interface for double-valued field types. ExchangeRateProvider Interface for providing pluggable exchange rate providers to @CurrencyField FloatValueFieldType Marker interface for float-valued field types. HasImplicitIndexAnalyzer Marker interface for field types that have an implicit (non-user-configurable) index-time schema. IntValueFieldType Marker interface for int-valued field types. LongValueFieldType Marker interface for long-valued field types. NumericValueFieldType Marker interface for numeric-valued field types. PreAnalyzedField.PreAnalyzedParser Parse the input and return the stored part and the tokens with attributes. SchemaAware An interface that can be extended to provide a callback mechanism for informing an IndexSchema instance of changes to it, dynamically performed at runtime. SpatialQueryable Indicate that the implementing class is capable of generating a Query against spatial resources."
schema,"Class Summary Class Description AbstractEnumField Abstract Field type for support of string values with custom sort order. AbstractEnumField.EnumMapping Models all the info contained in an enums config XML file AbstractSpatialFieldType<T extends org.apache.lucene.spatial.SpatialStrategy> Abstract base class for Solr FieldTypes based on a Lucene 4 SpatialStrategy. AbstractSpatialPrefixTreeFieldType<T extends org.apache.lucene.spatial.prefix.PrefixTreeStrategy> AbstractSubTypeFieldType An abstract base class for FieldTypes that delegate work to another FieldType. BBoxField BinaryField BoolField ClassicIndexSchemaFactory CollationField Field for collated sort keys. CoordinateFieldType A CoordinateFieldType is the base class for FieldTypes that have semantics related to items in a coordinate system. CopyField CopyField contains all the information of a valid copy fields in an index. CurrencyField Deprecated. Use CurrencyFieldType CurrencyFieldType Field type for support of monetary values. CurrencyValue Represents a Currency field value, which includes a long amount and ISO currency code. DatePointField FieldType that can represent any Date/Time with millisecond precision. DateRangeField A field for indexed dates and date ranges. DenseVectorField Provides a field type to support Lucene's KnnVectorField. DoublePointField PointField implementation for Double values. EnumField Deprecated. use EnumFieldType instead. EnumFieldType Field type for support of string values with custom sort order. ExternalFileField Get values from an external file instead of the index. ExternalFileFieldReloader An event listener to reload ExternalFileFields for new searchers. FieldProperties FieldType Base class for all field types used by an index schema. FieldTypePluginLoader FileExchangeRateProvider Configuration for currency. FloatPointField PointField implementation for Float values. IndexSchema IndexSchema contains information about the valid fields in an index and the types of those fields. IndexSchema.DynamicCopy IndexSchema.DynamicField IndexSchema.DynamicReplacement IndexSchema.DynamicReplacement.DynamicPattern IndexSchema.SchemaProps IndexSchemaFactory Base class for factories for IndexSchema implementations IndexSchemaFactory.VersionedConfig IntPointField PointField implementation for Integer values. JsonPreAnalyzedParser LatLonPointSpatialField A spatial implementation based on Lucene's LatLonPoint and LatLonDocValuesField. LatLonPointSpatialField.LatLonPointSpatialStrategy LongPointField PointField implementation for Long values. ManagedIndexSchema Solr-managed schema - non-user-editable, but can be mutable via internal and external REST API requests. ManagedIndexSchemaFactory Factory for ManagedIndexSchema NestPathField To be used for field IndexSchema.NEST_PATH_FIELD_NAME for enhanced nested doc information. NumericFieldType OpenExchangeRatesOrgProvider Exchange Rates Provider for CurrencyField and CurrencyFieldType capable of fetching & parsing the freely available exchange rates from openexchangerates.org PointField Provides field types to support for Lucene's IntPoint, LongPoint, FloatPoint and DoublePoint. PointType A point type that indexes a point in an n-dimensional space as separate fields and supports range queries. PreAnalyzedField Pre-analyzed field type provides a way to index a serialized token stream, optionally with an independent stored value of a field. PreAnalyzedField.ParseResult This is a simple holder of a stored part and the collected states (tokens with attributes). PrimitiveFieldType Abstract class defining shared behavior for primitive types Intended to be used as base class for non-analyzed fields like int, float, string, date etc, and set proper defaults for them RandomSortField Utility Field used for random sorting. RandomSortField.RandomValueSource RankField RankFields can be used to store scoring factors to improve document ranking. RptWithGeometrySpatialField A Solr Spatial FieldType based on CompositeSpatialStrategy. SchemaField Encapsulates all information about a Field in a Solr Schema SchemaManager A utility class to manipulate schema using the bulk mode. SimilarityFactory A factory interface for configuring a Similarity in the Solr schema.xml. SimplePreAnalyzedParser Simple plain text format parser for PreAnalyzedField. SortableTextField SortableTextField is a specialized form of TextField that supports Sorting and ValueSource functions, using docValues built from the first maxCharsForDocValues characters of the original (pre-analyzed) String values of this field. SpatialRecursivePrefixTreeFieldType StrField StrFieldSource TextField TextField is the basic type for configurable text analysis. TrieDateField Deprecated. Trie fields are deprecated as of Solr 7.0 TrieDoubleField Deprecated. Trie fields are deprecated as of Solr 7.0 TrieField Deprecated. Trie fields are deprecated as of Solr 7.0 TrieFloatField Deprecated. Trie fields are deprecated as of Solr 7.0 TrieIntField Deprecated. Trie fields are deprecated as of Solr 7.0 TrieLongField Deprecated. Trie fields are deprecated as of Solr 7.0 UUIDField This FieldType accepts UUID string values, as well as the special value of ""NEW"" which triggers generation of a new random UUID. ZkIndexSchemaReader Keeps a ManagedIndexSchema up-to-date when changes are made to the serialized managed schema in ZooKeeper ZkIndexSchemaReader.SchemaWatcher Watches for schema changes and triggers updates in the ZkIndexSchemaReader."
schema,Enum Summary Enum Description FieldType.MultiValueSelector An enumeration representing various options that may exist for selecting a single value from a multivalued field. IndexSchema.SchemaProps.Handler NumberType SchemaManager.OpType
schema,Exception Summary Exception Description ManagedIndexSchema.FieldExistsException ManagedIndexSchema.SchemaChangedInZkException
schema,Marker interface for Date-valued field types.
schema,Marker interface for double-valued field types.
schema,Interface for providing pluggable exchange rate providers to @CurrencyField
schema,Marker interface for float-valued field types.
schema,Marker interface for field types that have an implicit (non-user-configurable) index-time schema.
schema,Marker interface for int-valued field types.
schema,Marker interface for long-valued field types.
schema,Marker interface for numeric-valued field types.
schema,Parse the input and return the stored part and the tokens with attributes.
schema,"An interface that can be extended to provide a callback mechanism for informing an IndexSchema instance of changes to it, dynamically performed at runtime."
schema,Indicate that the implementing class is capable of generating a Query against spatial resources.
schema,Abstract Field type for support of string values with custom sort order.
schema,Models all the info contained in an enums config XML file
schema,AbstractSpatialFieldType<T extends org.apache.lucene.spatial.SpatialStrategy>
schema,Abstract base class for Solr FieldTypes based on a Lucene 4 SpatialStrategy.
schema,AbstractSpatialPrefixTreeFieldType<T extends org.apache.lucene.spatial.prefix.PrefixTreeStrategy>
schema,An abstract base class for FieldTypes that delegate work to another FieldType.
schema,Field for collated sort keys.
schema,A CoordinateFieldType is the base class for FieldTypes that have semantics related to items in a coordinate system.
schema,CopyField contains all the information of a valid copy fields in an index.
schema,Deprecated. Use CurrencyFieldType
schema,Field type for support of monetary values.
schema,"Represents a Currency field value, which includes a long amount and ISO currency code."
schema,FieldType that can represent any Date/Time with millisecond precision.
schema,A field for indexed dates and date ranges.
schema,Provides a field type to support Lucene's KnnVectorField.
schema,PointField implementation for Double values.
schema,Deprecated. use EnumFieldType instead.
schema,Field type for support of string values with custom sort order.
schema,Get values from an external file instead of the index.
schema,An event listener to reload ExternalFileFields for new searchers.
schema,Base class for all field types used by an index schema.
schema,Configuration for currency.
schema,PointField implementation for Float values.
schema,IndexSchema contains information about the valid fields in an index and the types of those fields.
schema,Base class for factories for IndexSchema implementations
schema,PointField implementation for Integer values.
schema,A spatial implementation based on Lucene's LatLonPoint and LatLonDocValuesField.
schema,PointField implementation for Long values.
schema,"Solr-managed schema - non-user-editable, but can be mutable via internal and external REST API requests."
schema,Factory for ManagedIndexSchema
schema,To be used for field IndexSchema.NEST_PATH_FIELD_NAME for enhanced nested doc information.
schema,Exchange Rates Provider for CurrencyField and CurrencyFieldType capable of fetching & parsing the freely available exchange rates from openexchangerates.org
schema,"Provides field types to support for Lucene's IntPoint, LongPoint, FloatPoint and DoublePoint."
schema,A point type that indexes a point in an n-dimensional space as separate fields and supports range queries.
schema,"Pre-analyzed field type provides a way to index a serialized token stream, optionally with an independent stored value of a field."
schema,This is a simple holder of a stored part and the collected states (tokens with attributes).
schema,"Abstract class defining shared behavior for primitive types Intended to be used as base class for non-analyzed fields like int, float, string, date etc, and set proper defaults for them"
schema,Utility Field used for random sorting.
schema,RankFields can be used to store scoring factors to improve document ranking.
schema,A Solr Spatial FieldType based on CompositeSpatialStrategy.
schema,Encapsulates all information about a Field in a Solr Schema
schema,A utility class to manipulate schema using the bulk mode.
schema,A factory interface for configuring a Similarity in the Solr schema.xml.
schema,Simple plain text format parser for PreAnalyzedField.
schema,"SortableTextField is a specialized form of TextField that supports Sorting and ValueSource functions, using docValues built from the first maxCharsForDocValues characters of the original (pre-analyzed) String values of this field."
schema,TextField is the basic type for configurable text analysis.
schema,Deprecated. Trie fields are deprecated as of Solr 7.0
schema,Deprecated. Trie fields are deprecated as of Solr 7.0
schema,Deprecated. Trie fields are deprecated as of Solr 7.0
schema,Deprecated. Trie fields are deprecated as of Solr 7.0
schema,Deprecated. Trie fields are deprecated as of Solr 7.0
schema,Deprecated. Trie fields are deprecated as of Solr 7.0
schema,"This FieldType accepts UUID string values, as well as the special value of ""NEW"" which triggers generation of a new random UUID."
schema,Keeps a ManagedIndexSchema up-to-date when changes are made to the serialized managed schema in ZooKeeper
schema,Watches for schema changes and triggers updates in the ZkIndexSchemaReader.
search,"Interface Summary Interface Description CacheRegenerator Implementations of CacheRegenerator are used in autowarming to populate a new cache based on an old cache. DocIterator Simple Iterator of document Ids which may include score information. DocList DocList represents the result of a query: an ordered list of document ids with optional score. DocSetProducer ExtendedQuery The ExtendedQuery interface provides extra metadata to a query. PostFilter The PostFilter interface provides a mechanism to further filter documents after they have already gone through the main query and other filters. QueryLimit SolrCache<K,V> Primary API for dealing with Solr's internal caches. SolrSearcherRequirer Marker interface indicating that the tagged class assumes access to SolrIndexSearcher functionality and cannot be used by a vanilla Lucene IndexSearcher"
search,"Class Summary Class Description AbstractReRankQuery AnalyticsQuery Note: This API is experimental and may change in non backward-compatible ways in the future BitDocSet A FixedBitSet based implementation of a DocSet. BitsFilteredPostingsEnum BoolQParserPlugin Create a boolean query from sub queries. BoostQParserPlugin Create a boosted query from the input value. CacheConfig Contains the knowledge of how cache config is stored in the solrconfig.xml file, and implements a factory to create caches. CaffeineCache<K,V> A SolrCache backed by the Caffeine caching library [1]. CancellableCollector Allows a query to be cancelled CollapsingQParserPlugin The CollapsingQParserPlugin is a PostFilter that performs field collapsing. CollapsingQParserPlugin.CollapseScore CollapsingQParserPlugin.CollapsingPostFilter CollapsingQParserPlugin.GroupHeadSelector Models all the information about how group head documents should be selected ComplexPhraseQParserPlugin Parse Solr's variant on the Lucene ComplexPhraseQueryParser syntax. CpuAllowedLimit Enforces a CPU-time based timeout on a given SolrQueryRequest, as specified by the cpuAllowed query parameter. CursorMark An object that encapsulates the basic information about the current Mark Point of a ""Cursor"" based request. DelegatingCollector A simple delegating collector where one can set the delegate after creation DisMaxQParser Query parser for dismax queries DisMaxQParserPlugin Create a dismax query from the input value. DocListAndSet A struct whose only purpose is to hold both a DocList and a DocSet so that both may be returned from a single method. DocSet An immutable ordered set of Lucene Document Ids. DocSetBuilder Adapted from DocIdSetBuilder to build DocSets DocSetCollector DocSetCollector.ExpandingIntArray DocSetUtil DocSlice DocSlice implements DocList as an array of docids and optional scores. DocValuesIteratorCache A helper class for random-order value access over docValues (such as in the case of useDocValuesAsStored). DocValuesIteratorCache.FieldDocValuesSupplier Supplies (and coordinates arbitrary-order value retrieval over) docValues iterators for a particular field, encapsulating the logic of iterator creation, reuse/caching, and advancing. EarlyTerminatingCollector A wrapper Collector that throws EarlyTerminatingCollectorException) once a specified maximum number of documents are collected. ExportQParserPlugin ExportQParserPlugin.ExportQParser ExportQParserPlugin.ExportQuery ExtendedDismaxQParser Query parser that generates DisjunctionMaxQueries based on user configuration. ExtendedDismaxQParser.Clause ExtendedDismaxQParser.ExtendedDismaxConfiguration Simple container for configuration information used when parsing queries ExtendedDismaxQParser.ExtendedSolrQueryParser A subclass of SolrQueryParser that supports aliasing fields for constructing DisjunctionMaxQueries. ExtendedDismaxQParser.ExtendedSolrQueryParser.Alias A simple container for storing alias info ExtendedDismaxQParserPlugin An advanced multi-field query parser based on the DisMax parser. ExtendedQueryBase FieldParams A class to hold ""phrase slop"" and ""boost"" parameters for pf, pf2, pf3 parameters FieldQParserPlugin Create a field query from the input value, applying text analysis and constructing a phrase query if appropriate. FilteredDocIdSet Abstract decorator class for a DocIdSet implementation that provides on-demand filtering/validation mechanism on a given DocIdSet. FloatPayloadValueSource FunctionQParser FunctionQParserPlugin Create a function query from the input value. FunctionRangeQParserPlugin Create a range query over a function. FunctionRangeQuery GraphTermsQParserPlugin The GraphTermsQuery builds a disjunction query from a list of terms. Grouping Basic Solr Grouping infrastructure. HashQParserPlugin syntax fq={!hash workers=11 worker=4 keys=field1,field2} IGainTermsQParserPlugin JoinQParserPlugin LegacyNumericRangeQueryBuilder Deprecated. Index with points and use PointRangeQueryBuilder instead LuceneQParser LuceneQParserPlugin Parse Solr's variant on the Lucene QueryParser syntax. MatchCostQuery Wraps a Query to customize the TwoPhaseIterator.matchCost(). MaxScoreCollector A Collector for the maximum score value. MaxScoreQParser MaxScoreQParserPlugin Parses a query like Lucene query parser, but scoring with max score, not sum Accepts the ""tie"" request parameter as with dismax. MemAllowedLimit Enforces a memory-based limit on a given SolrQueryRequest, as specified by the memAllowed query parameter. MinHashQParser The query parser can be used in two modes 1) where text is analysed and generates min hashes as part of normal lucene analysis 2) where text is pre-analysed and hashes are added as string to the index An analyzer can still be defined to support text based query against the text field MinHashQParserPlugin QParserPlugin based on MinHashQParser. MultiThreadedSearcher NestedQParserPlugin Create a nested query, with the ability of that query to redefine its type via local parameters. NoOpRegenerator Cache regenerator that just populates the new cache with the old items. NumericHidingLeafReader Deprecated. PayloadCheckQParserPlugin PayloadScoreQParserPlugin Creates a PayloadScoreQuery wrapping a SpanQuery created from the input value, applying text analysis and constructing SpanTermQuery or SpanNearQuery based on number of terms. PointMerger Merge multiple numeric point fields (segments) together. PointMerger.ValueIterator PrefixQParserPlugin Create a prefix query from the input value. QParser Note: This API is experimental and may change in non backward-compatible ways in the future QParserPlugin QueryCommand A query request command to avoid having to change the method signatures if we want to pass additional information to the searcher. QueryContext QueryLimits Represents the limitations on the query. QueryParsing Collection of static utilities useful for query parsing. QueryResult The result of a search. QueryResultKey A hash key encapsulating a query, a list of filters, and a sort QueryUtils RankQParserPlugin RankQParserPlugin can be used to introduce document-depending scoring factors to ranking. RankQParserPlugin.RankQParser RankQuery Note: This API is experimental and may change in non backward-compatible ways in the future RawQParserPlugin Create a term query from the input value without any text analysis or transformation whatsoever. ReRankCollector ReRankCollector.BoostedComp ReRankQParserPlugin ReRankScaler ReRankScaler.MinMaxExplain ReRankScaler.ReRankScalerExplain ReRankWeight A Weight used by reranking queries. ReturnFields A class representing the return fields SignificantTermsQParserPlugin SimpleQParserPlugin Create a query from the input value that will be parsed by Lucene's SimpleQueryParser. SolrCacheBase Common base class of reusable functionality for SolrCaches SolrCacheBase.AutoWarmCountRef Decides how many things to autowarm based on the size of another cache SolrCoreParser Assembles a QueryBuilder which uses Query objects from Solr's search module in addition to Query objects supported by the Lucene CoreParser. SolrDocumentFetcher A helper class of SolrIndexSearcher for stored Document related matters including DocValue substitutions. SolrFieldCacheBean A SolrInfoBean that provides introspection of the Solr FieldCache SolrIndexSearcher SolrIndexSearcher adds schema awareness and caching functionality over IndexSearcher. SolrIndexSearcher.DocsEnumState SolrIndexSearcher.ProcessedFilter INTERNAL: The response object from SolrIndexSearcher.getProcessedFilter(DocSet, List). SolrMultiCollectorManager A CollectorManager implements which wrap a set of CollectorManager as MultiCollector acts for Collector. SolrQueryBuilder SolrQueryParser Solr's default query parser, a schema-driven superset of the classic lucene query parser. SolrReturnFields The default implementation of return fields parsing for Solr. SolrSearcherRequirementDetector Detects whether a query can be run using a standard Lucene IndexSearcher SolrSpanQueryBuilder SortedIntDocSet A simple sorted int[] array implementation of DocSet, good for small sets. SortSpec SortSpec encapsulates a Lucene Sort and a count of the number of documents to return. SortSpecParsing SpatialBoxQParserPlugin SpatialFilterQParser SpatialFilterQParserPlugin Creates a spatial Filter based on the type of spatial point used. SpatialOptions StrParser Simple class to help with parsing a string. SurroundQParserPlugin Plugin for lucene Surround query parser, bringing SpanQuery support to Solr. SwitchQParserPlugin A QParserPlugin that acts like a ""switch/case"" statement. TermQParserPlugin Create a single term query from the input value equivalent to readableToIndexed(). TermsQParserPlugin Finds documents whose specified field has any of the specified values. TextLogisticRegressionQParserPlugin Returns an AnalyticsQuery implementation that performs one Gradient Descent iteration of a result set to train a logistic regression model TimeAllowedLimit Enforces a wall clock based timeout on a given SolrQueryRequest. TopLevelJoinQuery JoinQuery implementation using global (top-level) DocValues ordinals to efficiently compare values in the ""from"" and ""to"" fields. TopLevelJoinQuery.BitsetBounds ValueSourceParser A factory that parses user queries to generate ValueSource instances. VectorSimilaritySourceParser This class provides implementation for two variants for parsing function query vectorSimilarity which is used to calculate the similarity between two vectors. WrappedQuery A simple query that wraps another query and implements ExtendedQuery. XmlQParserPlugin The XmlQParserPlugin extends the QParserPlugin and supports the creation of queries from XML."
search,Enum Summary Enum Description CollapsingQParserPlugin.GroupHeadSelectorType CollapsingQParserPlugin.NullPolicy Grouping.Format Grouping.TotalCount ReRankOperator SolrCache.State Enumeration of possible States for cache instances. SolrReturnFields.FIELD_SOURCES
search,"Exception Summary Exception Description CancellableCollector.QueryCancelledException Thrown when a query gets cancelled EarlyTerminatingCollectorException Thrown by EarlyTerminatingCollector when the maximum to abort the scoring / collection process early, when the specified maximum number of documents were collected. IncompleteRerankingException QueryLimitsExceededException SyntaxError Simple checked exception for parsing errors"
search,Implementations of CacheRegenerator are used in autowarming to populate a new cache based on an old cache.
search,Simple Iterator of document Ids which may include score information.
search,DocList represents the result of a query: an ordered list of document ids with optional score.
search,The ExtendedQuery interface provides extra metadata to a query.
search,The PostFilter interface provides a mechanism to further filter documents after they have already gone through the main query and other filters.
search,Primary API for dealing with Solr's internal caches.
search,Marker interface indicating that the tagged class assumes access to SolrIndexSearcher functionality and cannot be used by a vanilla Lucene IndexSearcher
search,Note: This API is experimental and may change in non backward-compatible ways in the future
search,A FixedBitSet based implementation of a DocSet.
search,Create a boolean query from sub queries.
search,Create a boosted query from the input value.
search,"Contains the knowledge of how cache config is stored in the solrconfig.xml file, and implements a factory to create caches."
search,A SolrCache backed by the Caffeine caching library [1].
search,Allows a query to be cancelled
search,The CollapsingQParserPlugin is a PostFilter that performs field collapsing.
search,Models all the information about how group head documents should be selected
search,Parse Solr's variant on the Lucene ComplexPhraseQueryParser syntax.
search,"Enforces a CPU-time based timeout on a given SolrQueryRequest, as specified by the cpuAllowed query parameter."
search,"An object that encapsulates the basic information about the current Mark Point of a ""Cursor"" based request."
search,A simple delegating collector where one can set the delegate after creation
search,Query parser for dismax queries
search,Create a dismax query from the input value.
search,A struct whose only purpose is to hold both a DocList and a DocSet so that both may be returned from a single method.
search,An immutable ordered set of Lucene Document Ids.
search,Adapted from DocIdSetBuilder to build DocSets
search,DocSlice implements DocList as an array of docids and optional scores.
search,A helper class for random-order value access over docValues (such as in the case of useDocValuesAsStored).
search,"Supplies (and coordinates arbitrary-order value retrieval over) docValues iterators for a particular field, encapsulating the logic of iterator creation, reuse/caching, and advancing."
search,A wrapper Collector that throws EarlyTerminatingCollectorException) once a specified maximum number of documents are collected.
search,Query parser that generates DisjunctionMaxQueries based on user configuration.
search,Simple container for configuration information used when parsing queries
search,A subclass of SolrQueryParser that supports aliasing fields for constructing DisjunctionMaxQueries.
search,A simple container for storing alias info
search,An advanced multi-field query parser based on the DisMax parser.
search,"A class to hold ""phrase slop"" and ""boost"" parameters for pf, pf2, pf3 parameters"
search,"Create a field query from the input value, applying text analysis and constructing a phrase query if appropriate."
search,Abstract decorator class for a DocIdSet implementation that provides on-demand filtering/validation mechanism on a given DocIdSet.
search,Create a function query from the input value.
search,Create a range query over a function.
search,The GraphTermsQuery builds a disjunction query from a list of terms.
search,Basic Solr Grouping infrastructure.
search,"syntax fq={!hash workers=11 worker=4 keys=field1,field2}"
search,Deprecated. Index with points and use PointRangeQueryBuilder instead
search,Parse Solr's variant on the Lucene QueryParser syntax.
search,Wraps a Query to customize the TwoPhaseIterator.matchCost().
search,A Collector for the maximum score value.
search,"Parses a query like Lucene query parser, but scoring with max score, not sum Accepts the ""tie"" request parameter as with dismax."
search,"Enforces a memory-based limit on a given SolrQueryRequest, as specified by the memAllowed query parameter."
search,The query parser can be used in two modes 1) where text is analysed and generates min hashes as part of normal lucene analysis 2) where text is pre-analysed and hashes are added as string to the index An analyzer can still be defined to support text based query against the text field
search,QParserPlugin based on MinHashQParser.
search,"Create a nested query, with the ability of that query to redefine its type via local parameters."
search,Cache regenerator that just populates the new cache with the old items.
search,"Creates a PayloadScoreQuery wrapping a SpanQuery created from the input value, applying text analysis and constructing SpanTermQuery or SpanNearQuery based on number of terms."
search,Merge multiple numeric point fields (segments) together.
search,Create a prefix query from the input value.
search,Note: This API is experimental and may change in non backward-compatible ways in the future
search,A query request command to avoid having to change the method signatures if we want to pass additional information to the searcher.
search,Represents the limitations on the query.
search,Collection of static utilities useful for query parsing.
search,The result of a search.
search,"A hash key encapsulating a query, a list of filters, and a sort"
search,RankQParserPlugin can be used to introduce document-depending scoring factors to ranking.
search,Note: This API is experimental and may change in non backward-compatible ways in the future
search,Create a term query from the input value without any text analysis or transformation whatsoever.
search,A Weight used by reranking queries.
search,A class representing the return fields
search,Create a query from the input value that will be parsed by Lucene's SimpleQueryParser.
search,Common base class of reusable functionality for SolrCaches
search,Decides how many things to autowarm based on the size of another cache
search,Assembles a QueryBuilder which uses Query objects from Solr's search module in addition to Query objects supported by the Lucene CoreParser.
search,A helper class of SolrIndexSearcher for stored Document related matters including DocValue substitutions.
search,A SolrInfoBean that provides introspection of the Solr FieldCache
search,SolrIndexSearcher adds schema awareness and caching functionality over IndexSearcher.
search,"INTERNAL: The response object from SolrIndexSearcher.getProcessedFilter(DocSet, List)."
search,A CollectorManager implements which wrap a set of CollectorManager as MultiCollector acts for Collector.
search,"Solr's default query parser, a schema-driven superset of the classic lucene query parser."
search,The default implementation of return fields parsing for Solr.
search,Detects whether a query can be run using a standard Lucene IndexSearcher
search,"A simple sorted int[] array implementation of DocSet, good for small sets."
search,SortSpec encapsulates a Lucene Sort and a count of the number of documents to return.
search,Creates a spatial Filter based on the type of spatial point used.
search,Simple class to help with parsing a string.
search,"Plugin for lucene Surround query parser, bringing SpanQuery support to Solr."
search,"A QParserPlugin that acts like a ""switch/case"" statement."
search,Create a single term query from the input value equivalent to readableToIndexed().
search,Finds documents whose specified field has any of the specified values.
search,Returns an AnalyticsQuery implementation that performs one Gradient Descent iteration of a result set to train a logistic regression model
search,Enforces a wall clock based timeout on a given SolrQueryRequest.
search,"JoinQuery implementation using global (top-level) DocValues ordinals to efficiently compare values in the ""from"" and ""to"" fields."
search,A factory that parses user queries to generate ValueSource instances.
search,This class provides implementation for two variants for parsing function query vectorSimilarity which is used to calculate the similarity between two vectors.
search,A simple query that wraps another query and implements ExtendedQuery.
search,The XmlQParserPlugin extends the QParserPlugin and supports the creation of queries from XML.
search,Interface Summary Interface Description FieldUtil.OrdFunc The following ord visitors and wrappers are a work in progress and experimental UnInvertedField.Callback
search,"Class Summary Class Description AggUtil AggValueSource AvgAgg BlockJoin Constants constants used in facets package CountAgg CountValsAgg AggValueSource to count values for given ValueSource DocValuesAcc Accumulates stats separated by slot number for the fields with DocValues FacetBucket FacetContext FacetDebugInfo FacetField FacetFieldMerger FacetHeatmap JSON Facet API request for a 2D spatial summary of a rectangular region. FacetMerger FacetMerger.Context FacetModule FacetProcessor<T extends FacetRequest> Base abstraction for a class that computes facets. FacetQuery FacetRange FacetRangeMerger FacetRequest A request to do facets/stats that might itself be composed of sub-FacetRequests. FacetRequest.Domain FacetRequest.Domain.GraphField Are we doing a query time graph across other documents FacetRequest.Domain.JoinField Are we doing a query time join across other documents FacetRequest.FacetSort Simple structure for encapsulating a sort variable and a direction FieldUtil FieldUtil.DVOrdValues FieldUtil.FCOrdValues FieldUtil.OrdValues HLLAgg HLLAgg.HLLFactory LegacyFacet LegacyFacet.Subfacet MinMaxAgg MissingAgg AggValueSource to compute missing counts for given ValueSource PercentileAgg PercentileAgg.Parser RelatednessAgg An aggregation function designed to be nested under other (possibly deeply nested) facets for the purposes of computing the ""relatedness"" of facet buckets relative to ""foreground"" and ""background"" sets -- primarily for the purpose of building ""Semantic Knowledge Graphs"" SimpleAggValueSource SlotAcc Accumulates statistics separated by a slot number. SlotAcc.DoubleFuncSlotAcc SlotAcc.FuncSlotAcc SlotAcc.IntSlotAcc SlotAcc.LongFuncSlotAcc SlotAcc.Resizer SlotAcc.SlotContext Incapsulates information about the current slot, for Accumulators that may want additional info during collection. StddevAgg StrAggValueSource SumAgg SumAgg.Merger SumsqAgg UnInvertedField Final form of the un-inverted field: Each document points to a list of term numbers that are contained in that document. UnInvertedFieldAcc Base accumulator for UnInvertedField UniqueAgg UniqueBlockAgg UniqueBlockAgg.UniqueBlockSlotAcc UniqueBlockFieldAgg UniqueBlockQueryAgg VarianceAgg"
search,Enum Summary Enum Description FacetField.FacetMethod FacetRequest.RefineMethod FacetRequest.SortDirection
search,constants used in facets package
search,AggValueSource to count values for given ValueSource
search,Accumulates stats separated by slot number for the fields with DocValues
search,JSON Facet API request for a 2D spatial summary of a rectangular region.
search,FacetProcessor<T extends FacetRequest>
search,Base abstraction for a class that computes facets.
search,A request to do facets/stats that might itself be composed of sub-FacetRequests.
search,Are we doing a query time graph across other documents
search,Are we doing a query time join across other documents
search,Simple structure for encapsulating a sort variable and a direction
search,AggValueSource to compute missing counts for given ValueSource
search,"An aggregation function designed to be nested under other (possibly deeply nested) facets for the purposes of computing the ""relatedness"" of facet buckets relative to ""foreground"" and ""background"" sets -- primarily for the purpose of building ""Semantic Knowledge Graphs"""
search,Accumulates statistics separated by a slot number.
search,"Incapsulates information about the current slot, for Accumulators that may want additional info during collection."
search,Final form of the un-inverted field: Each document points to a list of term numbers that are contained in that document.
search,Base accumulator for UnInvertedField
search,Interface Summary Interface Description SolrComparisonBoolFunction.Compare
search,Class Summary Class Description CollapseScoreFunction CollapseScoreFunction.CollapseScoreFunctionValues ConcatStringFunction ConcatStringFunction concatenates the string values of its components in the order given. DualDoubleFunction Abstract ValueSource implementation which wraps two ValueSources and applies an extendible double function to their values. EqualFunction Compares two values for equality. FieldNameValueSource Placeholder value source. FileFloatSource Obtains float field values from an external file. FileFloatSource.ReloadCacheRequestHandler MultiStringFunction Abstract ValueSource implementation which wraps multiple ValueSources and applies an extendible string function to their values. OrdFieldSource Obtains the ordinal of the field value from LeafReader.getSortedDocValues(java.lang.String). ReverseOrdFieldSource Obtains the ordinal of the field value from LeafReader.getSortedDocValues(java.lang.String) and reverses the order. SolrComparisonBoolFunction Refines ComparisonBoolFunction to compare based on a 'long' or 'double' depending on if the any of the FunctionValues are LongDocValues. ValueSourceRangeFilter RangeFilter over a ValueSource.
search,ConcatStringFunction concatenates the string values of its components in the order given.
search,Abstract ValueSource implementation which wraps two ValueSources and applies an extendible double function to their values.
search,Compares two values for equality.
search,Placeholder value source.
search,Obtains float field values from an external file.
search,Abstract ValueSource implementation which wraps multiple ValueSources and applies an extendible string function to their values.
search,Obtains the ordinal of the field value from LeafReader.getSortedDocValues(java.lang.String).
search,Obtains the ordinal of the field value from LeafReader.getSortedDocValues(java.lang.String) and reverses the order.
search,Refines ComparisonBoolFunction to compare based on a 'long' or 'double' depending on if the any of the FunctionValues are LongDocValues.
search,RangeFilter over a ValueSource.
search,"Class Summary Class Description GeoDistValueSourceParser Parses ""geodist"" creating HaversineConstFunction or HaversineFunction or calling SpatialStrategy.makeDistanceValueSource(org.locationtech.spatial4j.shape.Point,double). GeohashFunction Deprecated. GeohashHaversineFunction Deprecated. HaversineConstFunction Haversine function with one point constant HaversineFunction Calculate the Haversine formula (distance) between any two points on a sphere Takes in four value sources: (latA, lonA); (latB, lonB). SquaredEuclideanFunction While not strictly a distance, the Sq. StringDistanceFunction VectorDistanceFunction Calculate the p-norm for a Vector."
search,"Parses ""geodist"" creating HaversineConstFunction or HaversineFunction or calling SpatialStrategy.makeDistanceValueSource(org.locationtech.spatial4j.shape.Point,double)."
search,Haversine function with one point constant
search,"Calculate the Haversine formula (distance) between any two points on a sphere Takes in four value sources: (latA, lonA); (latB, lonB)."
search,"While not strictly a distance, the Sq."
search,Calculate the p-norm for a Vector.
search,Interface Summary Interface Description Command<T> Defines a grouping command.
search,Class Summary Class Description CommandHandler Responsible for executing a search with a number of Command instances. CommandHandler.Builder GroupingSpecification Encapsulates the grouping options like fields group sort and more specified by clients.
search,Responsible for executing a search with a number of Command instances.
search,Encapsulates the grouping options like fields group sort and more specified by clients.
search,Class Summary Class Description FilterCollector A collector that filters incoming doc ids that are not in the filter.
search,A collector that filters incoming doc ids that are not in the filter.
search,Class Summary Class Description QueryCommand QueryCommand.Builder QueryCommandResult Encapsulates TopDocs and the number of matches. SearchGroupsFieldCommand Creates all the collectors needed for the first phase and how to handle the results. SearchGroupsFieldCommand.Builder SearchGroupsFieldCommandResult Encapsulates the result of a SearchGroupsFieldCommand command TopGroupsFieldCommand Defines all collectors for retrieving the second phase and how to handle the collector result. TopGroupsFieldCommand.Builder
search,Encapsulates TopDocs and the number of matches.
search,Creates all the collectors needed for the first phase and how to handle the results.
search,Encapsulates the result of a SearchGroupsFieldCommand command
search,Defines all collectors for retrieving the second phase and how to handle the collector result.
search,Class Summary Class Description SearchGroupsRequestFactory Concrete implementation of ShardRequestFactory that creates ShardRequest instances for getting the search groups from all shards. StoredFieldsShardRequestFactory TopGroupsShardRequestFactory Concrete implementation of ShardRequestFactory that creates ShardRequest instances for getting the top groups from all shards.
search,Concrete implementation of ShardRequestFactory that creates ShardRequest instances for getting the search groups from all shards.
search,Concrete implementation of ShardRequestFactory that creates ShardRequest instances for getting the top groups from all shards.
search,Class Summary Class Description SearchGroupShardResponseProcessor Concrete implementation for merging SearchGroup instances from shard responses. StoredFieldsShardResponseProcessor Concrete implementation for processing the stored field values from shard responses. TopGroupsShardResponseProcessor Concrete implementation for merging TopGroups instances from shard responses.
search,Concrete implementation for merging SearchGroup instances from shard responses.
search,Concrete implementation for processing the stored field values from shard responses.
search,Concrete implementation for merging TopGroups instances from shard responses.
search,"Interface Summary Interface Description ShardResultTransformer<T,R> A ShardResultTransformer is responsible for transforming a grouped shard result into group related structures (such as TopGroups and SearchGroup) and visa versa."
search,Class Summary Class Description SearchGroupsResultTransformer Implementation for transforming SearchGroup into a NamedList structure and visa versa. TopGroupsResultTransformer Implementation for transforming TopGroups and TopDocs into a NamedList structure and vice versa.
search,Implementation for transforming SearchGroup into a NamedList structure and visa versa.
search,Implementation for transforming TopGroups and TopDocs into a NamedList structure and vice versa.
search,Interface Summary Interface Description EndResultTransformer Responsible for transforming the grouped result into the final format for displaying purposes. EndResultTransformer.SolrDocumentSource Abstracts the source for SolrDocument instances.
search,Class Summary Class Description GroupedEndResultTransformer Implementation of EndResultTransformer that keeps each grouped result separate in the final response. MainEndResultTransformer Implementation of EndResultTransformer that transforms the grouped result into the main result list in the response. SimpleEndResultTransformer Implementation of EndResultTransformer that transforms the grouped result into a single flat list.
search,Implementation of EndResultTransformer that keeps each grouped result separate in the final response.
search,Implementation of EndResultTransformer that transforms the grouped result into the main result list in the response.
search,Implementation of EndResultTransformer that transforms the grouped result into a single flat list.
search,"Class Summary Class Description BlockJoinChildQParser BlockJoinChildQParserPlugin Usage: {!child of=""PARENT:true""}PARENT_PRICE:10 BlockJoinParentQParser BlockJoinParentQParserPlugin Usage: {!parent which=""PARENT:true""}CHILD_PRICE:10 supports optional score parameter with one of ScoreMode values: None,Avg,Total,Min,Max. ChildFieldValueSourceParser CrossCollectionJoinQParser CrossCollectionJoinQuery FiltersQParser FiltersQParserPlugin GraphPointsCollector GraphQParserPlugin Query parser plugin for solr to wrap the graph query parser. GraphQuery GraphQuery - search for nodes and traverse edges in an index. GraphQueryParser Solr query parser that will handle parsing graph query requests. HashRangeQParser HashRangeQParserPlugin Matches documents where the specified field hashes to a value within the given range. HashRangeQuery MultiValueTermOrdinalCollector Populates a bitset of (top-level) ordinals based on field values in a multi-valued field. ScoreJoinQParserPlugin Create a query-time join query with scoring."
search,"Usage: {!child of=""PARENT:true""}PARENT_PRICE:10"
search,"Usage: {!parent which=""PARENT:true""}CHILD_PRICE:10 supports optional score parameter with one of ScoreMode values: None,Avg,Total,Min,Max."
search,Query parser plugin for solr to wrap the graph query parser.
search,GraphQuery - search for nodes and traverse edges in an index.
search,Solr query parser that will handle parsing graph query requests.
search,Matches documents where the specified field hashes to a value within the given range.
search,Populates a bitset of (top-level) ordinals based on field values in a multi-valued field.
search,Create a query-time join query with scoring.
search,"Class Summary Class Description CloudMLTQParser MLTContentQParserPlugin MLTQParserPlugin Usage: {!mlt qf=queryField1,queryField2}uniqueId SimpleMLTQParser"
search,"Usage: {!mlt qf=queryField1,queryField2}uniqueId"
search,Class Summary Class Description AbstractVectorQParserBase KnnQParser KnnQParserPlugin A neural query parser to run K-nearest neighbors search on Dense Vector fields. VectorSimilarityQParser VectorSimilarityQParserPlugin A neural query parser to run min-similarity search on Dense Vector fields.
search,A neural query parser to run K-nearest neighbors search on Dense Vector fields.
search,A neural query parser to run min-similarity search on Dense Vector fields.
search,"Class Summary Class Description BM25SimilarityFactory Factory for BM25Similarity. BooleanSimilarityFactory Factory for BooleanSimilarity ClassicSimilarityFactory Factory for ClassicSimilarity DFISimilarityFactory Factory for DFISimilarity DFRSimilarityFactory Factory for DFRSimilarity IBSimilarityFactory Factory for IBSimilarity LMDirichletSimilarityFactory Factory for LMDirichletSimilarity LMJelinekMercerSimilarityFactory Factory for LMJelinekMercerSimilarity SchemaSimilarityFactory SimilarityFactory that returns a global PerFieldSimilarityWrapper that delegates to the field type, if it's configured. SweetSpotSimilarityFactory Factory for SweetSpotSimilarity."
search,Factory for BM25Similarity.
search,Factory for BooleanSimilarity
search,Factory for ClassicSimilarity
search,Factory for DFISimilarity
search,Factory for DFRSimilarity
search,Factory for IBSimilarity
search,Factory for LMDirichletSimilarity
search,Factory for LMJelinekMercerSimilarity
search,"SimilarityFactory that returns a global PerFieldSimilarityWrapper that delegates to the field type, if it's configured."
search,Factory for SweetSpotSimilarity.
search,"Class Summary Class Description CollectionStats Modifiable version of CollectionStatistics useful for aggregation of per-shard stats. ExactSharedStatsCache This class implements exact caching of statistics. ExactStatsCache This class implements exact caching of statistics. ExactStatsCache.ExactStatsSource LocalStatsCache Default implementation that simply ignores global term statistics, and always uses local term statistics. LocalStatsSource Convenience class that wraps a local SolrIndexSearcher to provide local statistics. LRUStatsCache Unlike ExactStatsCache this implementation preserves term stats across queries in a set of LRU caches (with the same life-cycle as SolrIndexSearcher), and based on surface features of a query it determines the need to send additional requests to retrieve local term and collection statistics from shards. StatsCache This class represents a cache of global document frequency information for selected terms. StatsCache.StatsCacheMetrics StatsSource The purpose of this class is only to provide two pieces of information necessary to create Weight from a Query, that is TermStatistics for a term and CollectionStatistics for the whole collection. StatsUtil Various utilities for de/serialization of term stats and collection stats. TermStats Modifiable version of TermStatistics useful for aggregation of per-shard stats."
search,Modifiable version of CollectionStatistics useful for aggregation of per-shard stats.
search,This class implements exact caching of statistics.
search,This class implements exact caching of statistics.
search,"Default implementation that simply ignores global term statistics, and always uses local term statistics."
search,Convenience class that wraps a local SolrIndexSearcher to provide local statistics.
search,"Unlike ExactStatsCache this implementation preserves term stats across queries in a set of LRU caches (with the same life-cycle as SolrIndexSearcher), and based on surface features of a query it determines the need to send additional requests to retrieve local term and collection statistics from shards."
search,This class represents a cache of global document frequency information for selected terms.
search,"The purpose of this class is only to provide two pieces of information necessary to create Weight from a Query, that is TermStatistics for a term and CollectionStatistics for the whole collection."
search,Various utilities for de/serialization of term stats and collection stats.
search,Modifiable version of TermStatistics useful for aggregation of per-shard stats.
security,Interface Summary Interface Description AuditLoggerPlugin.AuditEventFormatter Interface for formatting the event AuditLoggerPlugin.MuteRule AuthorizationPlugin Authorization interface that needs to be implemented to write an authorization plugin. BasicAuthPlugin.AuthenticationProvider ConfigEditablePlugin An interface to be implemented by a Plugin whose Configuration is runtime editable HttpClientBuilderPlugin Plugin interface for configuring internal HttpClients. PermissionNameProvider A requestHandler should implement this interface to provide the well known permission at request time VerifiedUserRoles Interface used to pass verified user roles in a Principal object.
security,"Class Summary Class Description AllowListUrlChecker Validates URLs based on an allow list or a ClusterState in SolrCloud. AuditEvent Audit event that takes request and auth context as input to be able to audit log custom things. AuditLoggerPlugin Base class for Audit logger plugins. AuditLoggerPlugin.JSONAuditEventFormatter Event formatter that returns event as JSON string AuthenticationPlugin AuthorizationContext Request context for Solr to be used by Authorization plugin. AuthorizationContext.CollectionRequest AuthorizationResponse AuthorizationUtils AuthorizationUtils.AuthorizationFailure BasicAuthPlugin CertAuthPlugin An authentication plugin that sets principal based on the certificate subject ExternalRoleRuleBasedAuthorizationPlugin Rule Based Authz plugin implementation which reads user roles from the request. GetPublicKey V2 API implementation to fetch the public key of the receiving node. HttpServletAuthorizationContext An AuthorizationContext implementation that delegates many methods to an underlying HttpServletRequest MultiAuthPlugin Authentication plugin that supports multiple Authorization schemes, such as Bearer and Basic. MultiAuthRuleBasedAuthorizationPlugin Authorization plugin designed to work with the MultiAuthPlugin to support different AuthorizationPlugin per scheme. MultiDestinationAuditLogger Audit logger that chains other loggers. PKIAuthenticationPlugin PKIAuthenticationPlugin.PKIHeaderData PrintWriterWrapper Wrapper for PrintWriter that delegates to constructor arg PublicKeyHandler RuleBasedAuthorizationPlugin Original implementation of Rule Based Authz plugin which configures user/role mapping in the security.json configuration RuleBasedAuthorizationPluginBase Base class for rule based authorization plugins SecurityPluginHolder<T> Sha256AuthenticationProvider SolrLogAuditLoggerPlugin Audit logger that writes to the Solr log. SolrNodeKeyPair Creates and mediates access to the CryptoKeys.RSAKeyPair used by this Solr node."
security,Enum Summary Enum Description AuditEvent.EventType AuditEvent.Level AuditEvent.RequestType AuthorizationContext.RequestType PermissionNameProvider.Name
security,Validates URLs based on an allow list or a ClusterState in SolrCloud.
security,Audit event that takes request and auth context as input to be able to audit log custom things.
security,Base class for Audit logger plugins.
security,Event formatter that returns event as JSON string
security,Request context for Solr to be used by Authorization plugin.
security,An authentication plugin that sets principal based on the certificate subject
security,Rule Based Authz plugin implementation which reads user roles from the request.
security,V2 API implementation to fetch the public key of the receiving node.
security,An AuthorizationContext implementation that delegates many methods to an underlying HttpServletRequest
security,"Authentication plugin that supports multiple Authorization schemes, such as Bearer and Basic."
security,Authorization plugin designed to work with the MultiAuthPlugin to support different AuthorizationPlugin per scheme.
security,Audit logger that chains other loggers.
security,Wrapper for PrintWriter that delegates to constructor arg
security,Original implementation of Rule Based Authz plugin which configures user/role mapping in the security.json configuration
security,Base class for rule based authorization plugins
security,Audit logger that writes to the Solr log.
security,Creates and mediates access to the CryptoKeys.RSAKeyPair used by this Solr node.
servlet,"Interface Summary Interface Description PathExcluder Denotes an object, usually a servlet that denies access to some paths based on the supplied patterns. RequestRateLimiter.SlotReservation SolrDispatchFilter.HttpSolrCallFactory internal API"
servlet,"Class Summary Class Description CoordinatorHttpSolrCall A coordinator node can serve requests as if it hosts all collections in the cluster. CoordinatorHttpSolrCall.Factory CoreContainerProvider A service that can provide access to solr cores. DirectSolrConnection DirectSolrConnection provides an interface to Solr that is similar to the HTTP interface, but does not require an HTTP connection. HttpSolrCall This class represents a call made to Solr LoadAdminUiServlet A simple servlet to load the Solr Admin UI QueryRateLimiter Implementation of RequestRateLimiter specific to query request types. RateLimitManager This class is responsible for managing rate limiting per request type. RateLimitManager.Builder RedirectServlet A Simple redirection servlet to help us deprecate old UI elements RequestRateLimiter Handles rate limiting for a specific request type. ResponseUtils Response helper methods. ServletInputStreamWrapper Provides a convenient extension of the ServletInputStream class that can be subclassed by developers wishing to adapt the behavior of a Stream. ServletOutputStreamWrapper Provides a convenient extension of the ServletOutputStream class that can be subclassed by developers wishing to adapt the behavior of a Stream. ServletUtils Various Util methods for interaction on servlet level, i.e. ServletUtils.ClosedServletInputStream ServletUtils.ClosedServletOutputStream SolrDispatchFilter This filter looks at the incoming URL maps them to handlers defined in solrconfig.xml SolrRequestParsers"
servlet,Enum Summary Enum Description SolrDispatchFilter.Action Enum to define action that needs to be processed.
servlet,Exception Summary Exception Description ExceptionWhileTracing SolrAuthenticationException
servlet,A coordinator node can serve requests as if it hosts all collections in the cluster.
servlet,A service that can provide access to solr cores.
servlet,"DirectSolrConnection provides an interface to Solr that is similar to the HTTP interface, but does not require an HTTP connection."
servlet,This class represents a call made to Solr
servlet,A simple servlet to load the Solr Admin UI
servlet,Implementation of RequestRateLimiter specific to query request types.
servlet,This class is responsible for managing rate limiting per request type.
servlet,A Simple redirection servlet to help us deprecate old UI elements
servlet,Handles rate limiting for a specific request type.
servlet,Response helper methods.
servlet,Provides a convenient extension of the ServletInputStream class that can be subclassed by developers wishing to adapt the behavior of a Stream.
servlet,Provides a convenient extension of the ServletOutputStream class that can be subclassed by developers wishing to adapt the behavior of a Stream.
servlet,"Various Util methods for interaction on servlet level, i.e."
servlet,This filter looks at the incoming URL maps them to handlers defined in solrconfig.xml
servlet,Class Summary Class Description HttpCacheHeaderUtil
servlet,Enum Summary Enum Description Method
spelling,"Class Summary Class Description AbstractLuceneSpellChecker Abstract base class for all Lucene-based spell checking implementations. ConjunctionSolrSpellChecker This class lets a query be run through multiple spell checkers. DirectSolrSpellChecker Spellchecker implementation that uses DirectSpellChecker FileBasedSpellChecker A spell checker implementation that loads words from a text file (one word per line). IndexBasedSpellChecker A spell checker implementation that loads words from Solr as well as arbitrary Lucene indices. PossibilityIterator Given a list of possible Spelling Corrections for multiple mis-spelled words in a query, This iterator returns Possible Correction combinations ordered by reasonable probability that such a combination will return actual hits if re-queried. PossibilityIterator.RankedSpellPossibility QueryConverter The QueryConverter is an abstract base class defining a method for converting input ""raw"" queries into a set of tokens for spell checking. ResultEntry SolrSpellChecker Refer to https://solr.apache.org/guide/solr/latest/query-guide/spell-checking.html for more details. SpellCheckCollation SpellCheckCollator SpellCheckCorrection SpellingOptions SpellingQueryConverter Converts the query string to a Collection of Lucene tokens using a regular expression. SpellingResult Implementations of SolrSpellChecker must return suggestions as SpellResult instance. SuggestQueryConverter Passes the entire query string to the configured analyzer as-is. Token Deprecated. WordBreakSolrSpellChecker A spellchecker that breaks and combines words."
spelling,"Enum Summary Enum Description WordBreakSolrSpellChecker.BreakSuggestionTieBreaker Specify a value on the ""breakSuggestionTieBreaker"" parameter."
spelling,Abstract base class for all Lucene-based spell checking implementations.
spelling,This class lets a query be run through multiple spell checkers.
spelling,Spellchecker implementation that uses DirectSpellChecker
spelling,A spell checker implementation that loads words from a text file (one word per line).
spelling,A spell checker implementation that loads words from Solr as well as arbitrary Lucene indices.
spelling,"Given a list of possible Spelling Corrections for multiple mis-spelled words in a query, This iterator returns Possible Correction combinations ordered by reasonable probability that such a combination will return actual hits if re-queried."
spelling,"The QueryConverter is an abstract base class defining a method for converting input ""raw"" queries into a set of tokens for spell checking."
spelling,Refer to https://solr.apache.org/guide/solr/latest/query-guide/spell-checking.html for more details.
spelling,Converts the query string to a Collection of Lucene tokens using a regular expression.
spelling,Implementations of SolrSpellChecker must return suggestions as SpellResult instance.
spelling,Passes the entire query string to the configured analyzer as-is.
spelling,A spellchecker that breaks and combines words.
spelling,Interface Summary Interface Description SuggesterParams
spelling,Class Summary Class Description DictionaryFactory Encapsulates shared fields for all types of dictionaryFactory classes DocumentDictionaryFactory Factory for DocumentDictionary DocumentExpressionDictionaryFactory Factory for DocumentValueSourceDictionary FileDictionaryFactory Factory for FileDictionary HighFrequencyDictionaryFactory Factory for HighFrequencyDictionary LookupFactory Suggester factory for creating Lookup instances. SolrSuggester Responsible for loading the lookup and dictionary Implementations specified by the SolrConfig. Suggester SuggesterOptions Encapsulates the inputs required to be passed on to the underlying suggester in SolrSuggester SuggesterResult Encapsulates the results returned by the suggester in SolrSuggester
spelling,Encapsulates shared fields for all types of dictionaryFactory classes
spelling,Factory for DocumentDictionary
spelling,Factory for DocumentValueSourceDictionary
spelling,Factory for FileDictionary
spelling,Factory for HighFrequencyDictionary
spelling,Suggester factory for creating Lookup instances.
spelling,Responsible for loading the lookup and dictionary Implementations specified by the SolrConfig.
spelling,Encapsulates the inputs required to be passed on to the underlying suggester in SolrSuggester
spelling,Encapsulates the results returned by the suggester in SolrSuggester
spelling,Class Summary Class Description AnalyzingInfixLookupFactory Factory for AnalyzingInfixSuggester AnalyzingLookupFactory Factory for AnalyzingSuggester BlendedInfixLookupFactory Factory for BlendedInfixLookupFactory FreeTextLookupFactory LookupFactory implementation for FreeTextSuggester FSTLookupFactory Factory for FSTCompletionLookup FuzzyLookupFactory Factory for FuzzySuggester WFSTLookupFactory Factory for WFSTCompletionLookup
spelling,Factory for AnalyzingInfixSuggester
spelling,Factory for AnalyzingSuggester
spelling,Factory for BlendedInfixLookupFactory
spelling,LookupFactory implementation for FreeTextSuggester
spelling,Factory for FSTCompletionLookup
spelling,Factory for FuzzySuggester
spelling,Factory for WFSTCompletionLookup
spelling,Class Summary Class Description JaspellLookup Deprecated. Migrate to one of the newer suggesters which are much more RAM efficient. JaspellLookupFactory Factory for JaspellLookup Note: This Suggester is not very RAM efficient. JaspellTernarySearchTrie Deprecated. Migrate to one of the newer suggesters which are much more RAM efficient. JaspellTernarySearchTrie.TSTNode An inner class of Ternary Search Trie that represents a node in the trie.
spelling,Deprecated. Migrate to one of the newer suggesters which are much more RAM efficient.
spelling,Factory for JaspellLookup Note: This Suggester is not very RAM efficient.
spelling,Deprecated. Migrate to one of the newer suggesters which are much more RAM efficient.
spelling,An inner class of Ternary Search Trie that represents a node in the trie.
spelling,Class Summary Class Description TSTLookupFactory Factory for TSTLookup
spelling,Factory for TSTLookup
uninverting,Interface Summary Interface Description FieldCache Expert: Maintains caches of term values. FieldCache.Parser interface to all parsers.
uninverting,"Class Summary Class Description DocTermOrds This class enables fast access to multiple term ords for a specified field across all docIDs. FieldCache.CacheEntry EXPERT: A unique Identifier/Description for each item in the FieldCache. FieldCache.CreationPlaceholder Placeholder indicating creation of this cache is currently in-progress. FieldCache.PointParser Base class for points parsers. FieldCacheImpl Expert: The default cache implementation, storing all values in memory. FieldCacheImpl.BinaryDocValuesImpl FieldCacheImpl.LongsFromArray FieldCacheImpl.SortedDocValuesImpl UninvertingReader A FilterReader that exposes indexed values as if they also had docvalues. UninvertingReader.FieldCacheStats Return information about the backing cache"
uninverting,Enum Summary Enum Description UninvertingReader.Type Specifies the type of uninversion to apply for the field.
uninverting,This class enables fast access to multiple term ords for a specified field across all docIDs.
uninverting,EXPERT: A unique Identifier/Description for each item in the FieldCache.
uninverting,Placeholder indicating creation of this cache is currently in-progress.
uninverting,Base class for points parsers.
uninverting,"Expert: The default cache implementation, storing all values in memory."
uninverting,A FilterReader that exposes indexed values as if they also had docvalues.
uninverting,Return information about the backing cache
update,Interface Summary Interface Description SolrCoreState.IndexWriterCloser TransactionLog.ChannelInputStreamOpener Opens TransactionLog.ChannelFastInputStream from FileChannel. TransactionLog.OutputStreamOpener Opens OutputStream from FileChannel.
update,"Class Summary Class Description AddUpdateCommand An UpdateCommand for adding or updating one document. CommitTracker Helper class for tracking autoCommit state. CommitUpdateCommand A commit index command encapsulated in an object. DefaultSolrCoreState DeleteUpdateCommand DirectUpdateHandler2 DirectUpdateHandler2 implements an UpdateHandler where documents are added directly to the main Lucene index as opposed to adding to a separate smaller index. DocumentBuilder Builds a Lucene Document from a SolrInputDocument. IndexFingerprint LoggingInfoStream An InfoStream implementation which passes messages on to Solr's logging. MemOutputStream MergeIndexesCommand A merge indexes command encapsulated in an object. PeerSync This class is useful for performing peer to peer synchronization of recently indexed update commands during recovery process. PeerSync.MissedUpdatesFinder Helper class for doing comparison ourUpdates and other replicas's updates to find the updates that we missed PeerSync.MissedUpdatesRequest Result of PeerSync.MissedUpdatesFinder PeerSync.PeerSyncResult PeerSyncWithLeader PeerSyncWithLeader.MissedUpdatesFinder Helper class for doing comparison ourUpdates and other replicas's updates to find the updates that we missed RollbackUpdateCommand SolrCmdDistributor Used for distributing commands from a shard leader to its replicas. SolrCmdDistributor.ForwardNode SolrCmdDistributor.Node SolrCmdDistributor.Req SolrCmdDistributor.Response SolrCmdDistributor.SolrError SolrCmdDistributor.StdNode SolrCoreState The state in this class can be easily shared between SolrCores across SolrCore reloads. SolrIndexConfig This config object encapsulates IndexWriter config params, defined in the <indexConfig> section of solrconfig.xml SolrIndexSplitter SolrIndexWriter An IndexWriter that is configured via Solr config mechanisms. SplitIndexCommand A split index command encapsulated in an object. StreamingSolrClients TransactionLog Log Format: List{Operation, Version, ...} ADD, VERSION, DOC DELETE, VERSION, ID_BYTES DELETE_BY_QUERY, VERSION, String TransactionLog.ChannelFastInputStream TransactionLog.ReverseReader UpdateCommand An index update command encapsulated in an object (Command pattern) UpdateHandler UpdateHandler handles requests to change the index (adds, deletes, commits, optimizes, etc). UpdateLocks Locks associated with updates in connection with the UpdateLog. UpdateLog This holds references to the transaction logs. UpdateLog.DBQ Holds the query and the version for a DeleteByQuery command UpdateLog.DeleteUpdate UpdateLog.LogPtr UpdateLog.RecoveryInfo UpdateLog.Update UpdateShardHandler UpdateShardHandlerConfig VersionInfo Related to the _version_ field, in connection with the UpdateLog."
update,Enum Summary Enum Description SolrIndexSplitter.SplitMethod UpdateLog.State UpdateLog.SyncLevel
update,Exception Summary Exception Description SolrCoreState.CoreIsClosedException
update,An UpdateCommand for adding or updating one document.
update,Helper class for tracking autoCommit state.
update,A commit index command encapsulated in an object.
update,DirectUpdateHandler2 implements an UpdateHandler where documents are added directly to the main Lucene index as opposed to adding to a separate smaller index.
update,Builds a Lucene Document from a SolrInputDocument.
update,An InfoStream implementation which passes messages on to Solr's logging.
update,A merge indexes command encapsulated in an object.
update,This class is useful for performing peer to peer synchronization of recently indexed update commands during recovery process.
update,Helper class for doing comparison ourUpdates and other replicas's updates to find the updates that we missed
update,Result of PeerSync.MissedUpdatesFinder
update,Helper class for doing comparison ourUpdates and other replicas's updates to find the updates that we missed
update,Used for distributing commands from a shard leader to its replicas.
update,The state in this class can be easily shared between SolrCores across SolrCore reloads.
update,"This config object encapsulates IndexWriter config params, defined in the <indexConfig> section of solrconfig.xml"
update,An IndexWriter that is configured via Solr config mechanisms.
update,A split index command encapsulated in an object.
update,"Log Format: List{Operation, Version, ...} ADD, VERSION, DOC DELETE, VERSION, ID_BYTES DELETE_BY_QUERY, VERSION, String"
update,An index update command encapsulated in an object (Command pattern)
update,"UpdateHandler handles requests to change the index (adds, deletes, commits, optimizes, etc)."
update,Locks associated with updates in connection with the UpdateLog.
update,This holds references to the transaction logs.
update,Holds the query and the version for a DeleteByQuery command
update,"Related to the _version_ field, in connection with the UpdateLog."
update,Interface Summary Interface Description DistributingUpdateProcessorFactory A marker interface for denoting that a factory is responsible for handling distributed communication of updates across a SolrCloud cluster. FieldMutatingUpdateProcessor.FieldNameSelector Interface for identifying which fields should be mutated UpdateRequestProcessorFactory.RunAlways A marker interface for UpdateRequestProcessorFactory implementations indicating that the factory should be used even if the update.distrib parameter would otherwise cause it to not be run.
update,"Class Summary Class Description AbstractDefaultValueUpdateProcessorFactory Base class that can be extended by any UpdateRequestProcessorFactory designed to add a default value to the document in an AddUpdateCommand when that field is not already specified. AddSchemaFieldsUpdateProcessorFactory This processor will dynamically add fields to the schema if an input document contains one or more fields that don't match any field or dynamic field in the schema. AllValuesOrNoneFieldMutatingUpdateProcessor Abstract subclass of FieldMutatingUpdateProcessor for implementing UpdateProcessors that will mutate all individual values of a selected field independently. AtomicUpdateDocumentMerger AtomicUpdateProcessorFactory An update processor that will convert conventional field-value document to atomic update document ClassificationUpdateProcessorFactory This class implements an UpdateProcessorFactory for the Classification Update Processor. ClassificationUpdateProcessorParams CloneFieldUpdateProcessorFactory Clones the values found in any matching source field into a configured dest field. ConcatFieldUpdateProcessorFactory Concatenates multiple values for fields matching the specified conditions using a configurable delimiter which defaults to "", "". CountFieldValuesUpdateProcessorFactory Replaces any list of values for a field matching the specified conditions with the count of the number of values for that field. DefaultValueUpdateProcessorFactory An update processor that adds a constant default value to any document being added that does not already have a value in the specified field. DistributedUpdateProcessor DistributedUpdateProcessor.LeaderRequestReplicationTracker DistributedUpdateProcessor.RollupRequestReplicationTracker DistributedUpdateProcessorFactory Factory for DistributedUpdateProcessor. DistributedZkUpdateProcessor DocBasedVersionConstraintsProcessor DocBasedVersionConstraintsProcessorFactory This Factory generates an UpdateProcessor that helps to enforce Version constraints on documents based on per-document version numbers using a configured versionField, a comma-delimited list of fields to check for version numbers. DocExpirationUpdateProcessorFactory Update Processor Factory for managing automatic ""expiration"" of documents. FieldLengthUpdateProcessorFactory Replaces any CharSequence values found in fields matching the specified conditions with the lengths of those CharSequences (as an Integer). FieldMutatingUpdateProcessor Reusable base class for UpdateProcessors that will consider AddUpdateCommands and mutate the values associated with configured fields. FieldMutatingUpdateProcessorFactory Base class for implementing Factories for FieldMutatingUpdateProcessors and FieldValueMutatingUpdateProcessors. FieldMutatingUpdateProcessorFactory.SelectorParams FieldNameMutatingUpdateProcessorFactory In the FieldNameMutatingUpdateProcessorFactory configured below, fields names will be mutated if the name contains space. FieldValueMutatingUpdateProcessor Abstract subclass of FieldMutatingUpdateProcessor for implementing UpdateProcessors that will mutate all individual values of a selected field independently FieldValueSubsetUpdateProcessorFactory Base class for processors that want to mutate selected fields to only keep a subset of the original values. FirstFieldValueUpdateProcessorFactory Keeps only the first value of fields matching the specified conditions. HTMLStripFieldUpdateProcessorFactory Strips all HTML Markup in any CharSequence values found in fields matching the specified conditions. IgnoreCommitOptimizeUpdateProcessorFactory Gives system administrators a way to ignore explicit commit or optimize requests from clients. IgnoreFieldUpdateProcessorFactory Ignores & removes fields matching the specified conditions from any document being added to the index. IgnoreLargeDocumentProcessorFactory Gives system administrators a way to ignore very large update from clients. LastFieldValueUpdateProcessorFactory Keeps only the last value of fields matching the specified conditions. LogUpdateProcessorFactory A logging processor. Lookup3Signature MaxFieldValueUpdateProcessorFactory An update processor that keeps only the maximum value from any selected fields where multiple values are found. MD5Signature MinFieldValueUpdateProcessorFactory An update processor that keeps only the minimum value from any selected fields where multiple values are found. NestedUpdateProcessorFactory Adds fields to nested documents to support some nested search requirements. NoOpDistributingUpdateProcessorFactory A No-Op implementation of DistributingUpdateProcessorFactory that allways returns the next processor instead of inserting a new URP in front of it. NumFieldLimitingUpdateRequestProcessorFactory This factory generates an UpdateRequestProcessor which fails update requests once a core has exceeded a configurable maximum number of fields. ParseBooleanFieldUpdateProcessorFactory Attempts to mutate selected fields that have only CharSequence-typed values into Boolean values. ParseDateFieldUpdateProcessorFactory Attempts to mutate selected fields that have only CharSequence-typed values into Date values. ParseDoubleFieldUpdateProcessorFactory Attempts to mutate selected fields that have only CharSequence-typed values into Double values. ParseFloatFieldUpdateProcessorFactory Attempts to mutate selected fields that have only CharSequence-typed values into Float values. ParseIntFieldUpdateProcessorFactory Attempts to mutate selected fields that have only CharSequence-typed values into Integer values. ParseLongFieldUpdateProcessorFactory Attempts to mutate selected fields that have only CharSequence-typed values into Long values. ParseNumericFieldUpdateProcessorFactory Abstract base class for numeric parsing update processor factories. PreAnalyzedUpdateProcessorFactory An update processor that parses configured fields of any document being added using PreAnalyzedField with the configured format parser. RegexpBoostProcessor A processor which will match content of ""inputField"" against regular expressions found in ""boostFilename"", and if it matches will return the corresponding boost value from the file and output this to ""boostField"" as a double value. RegexpBoostProcessorFactory Factory which creates RegexBoostProcessors RegexReplaceProcessorFactory An updated processor that applies a configured regex to any CharSequence values found in the selected fields, and replaces any matches with the configured replacement string. RemoveBlankFieldUpdateProcessorFactory Removes any values found which are CharSequence with a length of 0. RoutedAliasUpdateProcessor Distributes update requests to a series of collections partitioned by a ""routing"" field. RunUpdateProcessorFactory Executes the update commands using the underlying UpdateHandler. Signature SignatureUpdateProcessorFactory SimpleUpdateProcessorFactory A base class for writing a very simple UpdateProcessor without worrying too much about the API. SkipExistingDocumentsProcessorFactory This Factory generates an UpdateProcessor that will (by default) skip inserting new documents if there already exists a document with the same uniqueKey value in the index. TemplateUpdateProcessorFactory Adds new fields to documents based on a template pattern specified via Template.field request parameters (multi-valued) or 'field' value specified in initArgs. TemplateUpdateProcessorFactory.Resolved TextProfileSignature This implementation is copied from Apache Nutch. TimestampUpdateProcessorFactory An update processor that adds a newly generated Date value of ""NOW"" to any document being added that does not already have a value in the specified field. TolerantUpdateProcessor Suppresses errors for individual add/delete commands within a single request. TolerantUpdateProcessorFactory Suppresses errors for individual add/delete commands within a single request. TrimFieldUpdateProcessorFactory Trims leading and trailing whitespace from any CharSequence values found in fields matching the specified conditions and returns the resulting String. TruncateFieldUpdateProcessorFactory Truncates any CharSequence values found in fields matching the specified conditions to a maximum character length. UniqFieldsUpdateProcessorFactory Removes duplicate values found in fields matching the specified conditions. UpdateRequestProcessor This is a good place for subclassed update handlers to process the document before it is indexed. UpdateRequestProcessorChain Manages a chain of UpdateRequestProcessorFactories. UpdateRequestProcessorChain.LazyUpdateProcessorFactoryHolder UpdateRequestProcessorChain.LazyUpdateProcessorFactoryHolder.LazyUpdateRequestProcessorFactory UpdateRequestProcessorChain.ProcessorInfo UpdateRequestProcessorFactory A factory to generate an UpdateRequestProcessor for each request. URLClassifyProcessor Update processor which examines a URL and outputs to various other fields characteristics of that URL, including length, number of path levels, whether it is a top level URL (levels==0), whether it looks like a landing/index page, a canonical representation of the URL (e.g. URLClassifyProcessorFactory Creates URLClassifyProcessor UUIDUpdateProcessorFactory An update processor that adds a newly generated UUID value to any document being added that does not already have a value in the specified field."
update,Enum Summary Enum Description ClassificationUpdateProcessorFactory.Algorithm DistributedUpdateProcessor.DistribPhase Values this processor supports for the DISTRIB_UPDATE_PARAM.
update,Exception Summary Exception Description DistributedUpdateProcessor.DistributedUpdatesAsyncException
update,Base class that can be extended by any UpdateRequestProcessorFactory designed to add a default value to the document in an AddUpdateCommand when that field is not already specified.
update,This processor will dynamically add fields to the schema if an input document contains one or more fields that don't match any field or dynamic field in the schema.
update,Abstract subclass of FieldMutatingUpdateProcessor for implementing UpdateProcessors that will mutate all individual values of a selected field independently.
update,An update processor that will convert conventional field-value document to atomic update document
update,This class implements an UpdateProcessorFactory for the Classification Update Processor.
update,Clones the values found in any matching source field into a configured dest field.
update,"Concatenates multiple values for fields matching the specified conditions using a configurable delimiter which defaults to "", ""."
update,Replaces any list of values for a field matching the specified conditions with the count of the number of values for that field.
update,An update processor that adds a constant default value to any document being added that does not already have a value in the specified field.
update,Factory for DistributedUpdateProcessor.
update,"This Factory generates an UpdateProcessor that helps to enforce Version constraints on documents based on per-document version numbers using a configured versionField, a comma-delimited list of fields to check for version numbers."
update,"Update Processor Factory for managing automatic ""expiration"" of documents."
update,Replaces any CharSequence values found in fields matching the specified conditions with the lengths of those CharSequences (as an Integer).
update,Reusable base class for UpdateProcessors that will consider AddUpdateCommands and mutate the values associated with configured fields.
update,Base class for implementing Factories for FieldMutatingUpdateProcessors and FieldValueMutatingUpdateProcessors.
update,"In the FieldNameMutatingUpdateProcessorFactory configured below, fields names will be mutated if the name contains space."
update,Abstract subclass of FieldMutatingUpdateProcessor for implementing UpdateProcessors that will mutate all individual values of a selected field independently
update,Base class for processors that want to mutate selected fields to only keep a subset of the original values.
update,Keeps only the first value of fields matching the specified conditions.
update,Strips all HTML Markup in any CharSequence values found in fields matching the specified conditions.
update,Gives system administrators a way to ignore explicit commit or optimize requests from clients.
update,Ignores & removes fields matching the specified conditions from any document being added to the index.
update,Gives system administrators a way to ignore very large update from clients.
update,Keeps only the last value of fields matching the specified conditions.
update,A logging processor.
update,An update processor that keeps only the maximum value from any selected fields where multiple values are found.
update,An update processor that keeps only the minimum value from any selected fields where multiple values are found.
update,Adds fields to nested documents to support some nested search requirements.
update,A No-Op implementation of DistributingUpdateProcessorFactory that allways returns the next processor instead of inserting a new URP in front of it.
update,This factory generates an UpdateRequestProcessor which fails update requests once a core has exceeded a configurable maximum number of fields.
update,Attempts to mutate selected fields that have only CharSequence-typed values into Boolean values.
update,Attempts to mutate selected fields that have only CharSequence-typed values into Date values.
update,Attempts to mutate selected fields that have only CharSequence-typed values into Double values.
update,Attempts to mutate selected fields that have only CharSequence-typed values into Float values.
update,Attempts to mutate selected fields that have only CharSequence-typed values into Integer values.
update,Attempts to mutate selected fields that have only CharSequence-typed values into Long values.
update,Abstract base class for numeric parsing update processor factories.
update,An update processor that parses configured fields of any document being added using PreAnalyzedField with the configured format parser.
update,"A processor which will match content of ""inputField"" against regular expressions found in ""boostFilename"", and if it matches will return the corresponding boost value from the file and output this to ""boostField"" as a double value."
update,Factory which creates RegexBoostProcessors
update,"An updated processor that applies a configured regex to any CharSequence values found in the selected fields, and replaces any matches with the configured replacement string."
update,Removes any values found which are CharSequence with a length of 0.
update,"Distributes update requests to a series of collections partitioned by a ""routing"" field."
update,Executes the update commands using the underlying UpdateHandler.
update,A base class for writing a very simple UpdateProcessor without worrying too much about the API.
update,This Factory generates an UpdateProcessor that will (by default) skip inserting new documents if there already exists a document with the same uniqueKey value in the index.
update,Adds new fields to documents based on a template pattern specified via Template.field request parameters (multi-valued) or 'field' value specified in initArgs.
update,This implementation is copied from Apache Nutch.
update,"An update processor that adds a newly generated Date value of ""NOW"" to any document being added that does not already have a value in the specified field."
update,Suppresses errors for individual add/delete commands within a single request.
update,Suppresses errors for individual add/delete commands within a single request.
update,Trims leading and trailing whitespace from any CharSequence values found in fields matching the specified conditions and returns the resulting String.
update,Truncates any CharSequence values found in fields matching the specified conditions to a maximum character length.
update,Removes duplicate values found in fields matching the specified conditions.
update,This is a good place for subclassed update handlers to process the document before it is indexed.
update,Manages a chain of UpdateRequestProcessorFactories.
update,A factory to generate an UpdateRequestProcessor for each request.
update,"Update processor which examines a URL and outputs to various other fields characteristics of that URL, including length, number of path levels, whether it is a top level URL (levels==0), whether it looks like a landing/index page, a canonical representation of the URL (e.g."
update,Creates URLClassifyProcessor
update,An update processor that adds a newly generated UUID value to any document being added that does not already have a value in the specified field.
update,Values this processor supports for the DISTRIB_UPDATE_PARAM.
util,"Interface Summary Interface Description ConcurrentLRUCache.EvictionListener<K,V> DynamicMap An efficient map for storing keys as integer in range from 0..n with n can be estimated up-front. FloatConsumer Represents an operation that accepts a single float-valued argument and returns no result. IOFunction<T,R> A Function that may throw an IOException LongIterator A long-based iterator. RTimer.TimerImpl TestInjection.Hook"
util,"Class Summary Class Description AddressUtils Simple utilities for working Hostname/IP Addresses AdjustableSemaphore BoundedTreeSet<E> A TreeSet that ensures it never grows beyond a max size. ConcurrentLRUCache<K,V> A LRU cache implementation based upon ConcurrentHashMap and other techniques to reduce contention and synchronization overhead to utilize multiple CPU cores more effectively. ConcurrentLRUCache.CacheEntry<K,V> ConcurrentLRUCache.Stats CryptoKeys A utility class with helpers for various signature and certificate tasks CryptoKeys.RSAKeyPair DataConfigNode ConfigNode impl that copies and maintains data internally from DOM DateMathParser A Simple Utility class for parsing ""math"" like strings relating to Dates. DistanceUnits Used with a spatial field type for all distance measurements. DOMConfigNode Read using DOM FileTypeMagicUtil Utility class to guess the mime type of file based on its magic number. FileUtils IdUtils Helper class for generating unique ID-s. IndexOutputOutputStream Wraps an IndexOutput to expose it as an OutputStream. IntFloatDynamicMap IntIntDynamicMap IntLongDynamicMap JmxUtil Utility methods to find a MBeanServer. LocaleUtils LongPriorityQueue A native long priority queue. MapListener<K,V> Wraps another map, keeping track of each key that was seen via MapListener.get(Object) or MapListener.remove(Object). MockSearchableSolrClient Simple mock client that collects added documents and supports simple search by id (both {!term f=id} and id: syntax is supported) or *:*. ModuleUtils Parses the list of modules the user has requested in solr.xml, property solr.modules or environment SOLR_MODULES. NumberUtils OrderedExecutor<T> PayloadUtils PrimUtils Utilities for primitive Java data types. PrimUtils.IntComparator PropertiesInputStream RecordingJSONParser RefCounted<Type> Keep track of a reference count on a resource and close it when the count hits zero. RegexFileFilter Accepts any file whose name matches the pattern RTimer A simple timer. RTimerTree A recursive timer. SafeXMLParsing Some utility methods for parsing XML in a safe way. SolrJacksonAnnotationInspector this class provides a mapping between Solr's JsonProperty annotation to a corresponding annotation in jackson see SOLR-13841 for more details SolrPluginUtils Utilities that may be of use to RequestHandlers. SolrPluginUtils.DisjunctionMaxQueryParser A subclass of SolrQueryParser that supports aliasing fields for constructing DisjunctionMaxQueries. SolrPluginUtils.DisjunctionMaxQueryParser.Alias A simple container for storing alias info SolrResponseUtil SpatialUtils Utility methods pertaining to spatial. StartupLoggingUtils Handles programmatic modification of logging during startup SystemIdResolver This is a helper class to support resolving of XIncludes or other hrefs inside XML files on top of a ResourceLoader. TestInjection Allows random faults to be injected in running code during test runs. ThreadCpuTimer Allows tracking information about the current thread using the JVM's built-in management bean ThreadMXBean. TimeOut TimeZoneUtils Simple utilities for working with TimeZones VersionedFile"
util,Enum Summary Enum Description PivotListEntry Enum for modeling the elements of a (nested) pivot entry as expressed in a NamedList
util,Error Summary Error Description TestInjection.TestShutdownFailError
util,Simple utilities for working Hostname/IP Addresses
util,A TreeSet that ensures it never grows beyond a max size.
util,A LRU cache implementation based upon ConcurrentHashMap and other techniques to reduce contention and synchronization overhead to utilize multiple CPU cores more effectively.
util,A utility class with helpers for various signature and certificate tasks
util,ConfigNode impl that copies and maintains data internally from DOM
util,"A Simple Utility class for parsing ""math"" like strings relating to Dates."
util,Used with a spatial field type for all distance measurements.
util,Read using DOM
util,Utility class to guess the mime type of file based on its magic number.
util,Helper class for generating unique ID-s.
util,Wraps an IndexOutput to expose it as an OutputStream.
util,Utility methods to find a MBeanServer.
util,A native long priority queue.
util,"Wraps another map, keeping track of each key that was seen via MapListener.get(Object) or MapListener.remove(Object)."
util,Simple mock client that collects added documents and supports simple search by id (both {!term f=id} and id: syntax is supported) or *:*.
util,"Parses the list of modules the user has requested in solr.xml, property solr.modules or environment SOLR_MODULES."
util,Utilities for primitive Java data types.
util,Keep track of a reference count on a resource and close it when the count hits zero.
util,Accepts any file whose name matches the pattern
util,A simple timer.
util,A recursive timer.
util,Some utility methods for parsing XML in a safe way.
util,this class provides a mapping between Solr's JsonProperty annotation to a corresponding annotation in jackson see SOLR-13841 for more details
util,Utilities that may be of use to RequestHandlers.
util,A subclass of SolrQueryParser that supports aliasing fields for constructing DisjunctionMaxQueries.
util,A simple container for storing alias info
util,Utility methods pertaining to spatial.
util,Handles programmatic modification of logging during startup
util,This is a helper class to support resolving of XIncludes or other hrefs inside XML files on top of a ResourceLoader.
util,Allows random faults to be injected in running code during test runs.
util,Allows tracking information about the current thread using the JVM's built-in management bean ThreadMXBean.
util,Simple utilities for working with TimeZones
util,Interface Summary Interface Description AveragingMetricProvider.MetricProvider Interface to provide the metric value.
util,Class Summary Class Description AveragingMetricProvider Averages the metric value over a period of time CircuitBreaker Default base class to define circuit breaker plugins for Solr. CircuitBreakerManager Deprecated. Use individual Circuit Breakers instead CircuitBreakerRegistry Keeps track of all registered circuit breaker instances for various request types. CircuitBreakerUtils CPUCircuitBreaker Tracks current CPU usage and triggers if the specified threshold is breached. LoadAverageCircuitBreaker Tracks current system load average and triggers if the specified threshold is breached. MemoryCircuitBreaker Tracks the current JVM heap usage and triggers if a moving heap usage average over 30 seconds exceeds the defined percentage of the maximum heap size allocated to the JVM.
util,Averages the metric value over a period of time
util,Default base class to define circuit breaker plugins for Solr.
util,Deprecated. Use individual Circuit Breakers instead
util,Keeps track of all registered circuit breaker instances for various request types.
util,Tracks current CPU usage and triggers if the specified threshold is breached.
util,Tracks current system load average and triggers if the specified threshold is breached.
util,Tracks the current JVM heap usage and triggers if a moving heap usage average over 30 seconds exceeds the defined percentage of the maximum heap size allocated to the JVM.
util,Interface Summary Interface Description SSLCredentialProvider Interface for different source of SSL configurations.
util,Class Summary Class Description SSLConfigurations Dedicated object to handle Solr configurations SSLConfigurations.SysProps SSLConfigurationsFactory SSLCredentialProviderFactory Class responsible to build SSL credential providers
util,Enum Summary Enum Description SSLCredentialProvider.CredentialType
util,Dedicated object to handle Solr configurations
util,Class responsible to build SSL credential providers
util,Class Summary Class Description AbstractSSLCredentialProvider Abstract provider with default implementation EnvSSLCredentialProvider Environment variable based SSL configuration provider EnvSSLCredentialProvider.EnvVars SysPropSSLCredentialProvider System property based SSL configuration provider
util,Abstract provider with default implementation
util,Environment variable based SSL configuration provider
util,System property based SSL configuration provider
util,"Interface Summary Interface Description ISchemaVersion A serialization schema for HLLs. IWordDeserializer Reads 'words' of a fixed width, in sequence, from a byte array."
util,Class Summary Class Description HLL A probabilistic set of hashed long elements.
util,Enum Summary Enum Description HLLType The types of algorithm/data structure that HLL can utilize.
util,A probabilistic set of hashed long elements.
util,"Interface Summary Interface Description MapInitializedPlugin A plugin that can be initialized with a Map<String,String> NamedListInitializedPlugin A plugin that can be initialized with a NamedList PluginInfoInitialized A plugin that can be initialized with a PluginInfo SolrCoreAware"
util,Class Summary Class Description AbstractPluginLoader<T> An abstract super class that manages standard solr-style plugin configuration. MapPluginLoader<T extends MapInitializedPlugin> NamedListPluginLoader<T extends NamedListInitializedPlugin>
util,An abstract super class that manages standard solr-style plugin configuration.
util,MapPluginLoader<T extends MapInitializedPlugin>
util,NamedListPluginLoader<T extends NamedListInitializedPlugin>
util,Interface Summary Interface Description HttpClientMetricNameStrategy Strategy for creating metric names for HttpClient Copied from metrics-httpclient library InstrumentedHttpListenerFactory.NameStrategy
util,Class Summary Class Description InstrumentedHttpListenerFactory A HttpListenerFactory tracking metrics and distributed tracing. InstrumentedHttpRequestExecutor Sub-class of HttpRequestExecutor which tracks metrics interesting to solr Inspired and partially copied from dropwizard httpclient library InstrumentedPoolingHttpClientConnectionManager Sub-class of PoolingHttpClientConnectionManager which tracks metrics interesting to Solr. MetricUtils Metrics specific utility functions.
util,A HttpListenerFactory tracking metrics and distributed tracing.
util,Sub-class of HttpRequestExecutor which tracks metrics interesting to solr Inspired and partially copied from dropwizard httpclient library
util,Sub-class of PoolingHttpClientConnectionManager which tracks metrics interesting to Solr.
util,Metrics specific utility functions.
util,Class Summary Class Description HttpServletCarrier A Carrier for extract Span context out of request headers SimplePropagator SolrApacheHttpRequestCarrier An OpenTracing Carrier for injecting Span context through an Apache HttpRequest SolrJettyRequestCarrier An OpenTracing Carrier for injecting Span context through a Jetty Request TraceUtils Utilities for distributed tracing.
util,A Carrier for extract Span context out of request headers
util,An OpenTracing Carrier for injecting Span context through an Apache HttpRequest
util,An OpenTracing Carrier for injecting Span context through a Jetty Request
util,Utilities for distributed tracing.
util,Class Summary Class Description ByteDenseVectorParser DenseVectorParser FloatDenseVectorParser
util,Enum Summary Enum Description DenseVectorParser.BuilderPhase
