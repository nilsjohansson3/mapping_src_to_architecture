Module,Text
appender,Related Packages Package Description org.apache.logging.log4j.core Implementation of Log4j 2. org.apache.logging.log4j.core.appender.db The classes in this package and sub packages provide appenders for various types of databases and methods for accessing databases. org.apache.logging.log4j.core.appender.mom Message oriented middleware appenders. org.apache.logging.log4j.core.appender.nosql The NoSQL Appender supports writing log events to NoSQL databases. org.apache.logging.log4j.core.appender.rewrite Apache Flume Appender. org.apache.logging.log4j.core.appender.rolling Rolling File Appender and support classes. org.apache.logging.log4j.core.appender.routing Apache Flume Appender.
appender,"All Classes and InterfacesInterfacesClassesEnumsExceptions Class Description AbstractAppender Abstract base class for Appenders. AbstractAppender.Builder<B extends AbstractAppender.Builder<B>> Subclasses can extend this abstract Builder. AbstractFileAppender<M extends OutputStreamManager> Abstract File Appender. AbstractFileAppender.Builder<B extends AbstractFileAppender.Builder<B>> Builds FileAppender instances. AbstractManager Abstract base class used to register managers. AbstractManager.AbstractFactoryData Implementations should extend this class for passing data between the getManager method and the manager factory class. AbstractOutputStreamAppender<M extends OutputStreamManager> Appends log events as bytes to a byte output stream. AbstractOutputStreamAppender.Builder<B extends AbstractOutputStreamAppender.Builder<B>> Subclasses can extend this abstract Builder. AbstractWriterAppender<M extends WriterManager> Appends log events as strings to a writer. AppenderLoggingException Thrown from an appender when a log event could not be written. AppenderSet A deferred plugin for appenders. AppenderSet.Builder AsyncAppender Appends to one or more Appenders asynchronously. AsyncAppender.Builder<B extends AsyncAppender.Builder<B>> ConfigurationFactoryData Factory Data that carries a configuration. ConsoleAppender Appends log events to System.out or System.err using a layout specified by the user. ConsoleAppender.Builder<B extends ConsoleAppender.Builder<B>> Builds ConsoleAppender instances. ConsoleAppender.Target Enumeration of console destinations. CountingNoOpAppender No-Operation Appender that counts events. DefaultErrorHandler The default ErrorHandler implementation falling back to StatusLogger. FailoverAppender The FailoverAppender will capture exceptions in an Appender and then route the event to a different appender. FailoversPlugin The array of failover Appenders. FileAppender File Appender. FileAppender.Builder<B extends FileAppender.Builder<B>> Builds FileAppender instances. FileManager Manages actual File I/O for File Appenders. HttpAppender Sends log events over HTTP. HttpAppender.Builder<B extends HttpAppender.Builder<B>> Builds HttpAppender instances. HttpManager HttpURLConnectionManager ManagerFactory<M,T> Creates Manager objects. MemoryMappedFileAppender Memory Mapped File Appender. MemoryMappedFileAppender.Builder<B extends MemoryMappedFileAppender.Builder<B>> Builds RandomAccessFileAppender instances. MemoryMappedFileManager Extends OutputStreamManager but instead of using a buffered output stream, this class maps a region of a file into memory and writes to this memory region. NullAppender An Appender that ignores log events. OutputStreamAppender Appends log events to a given output stream using a layout. OutputStreamAppender.Builder<B extends OutputStreamAppender.Builder<B>> Builds OutputStreamAppender instances. OutputStreamManager Manages an OutputStream so that it can be shared by multiple Appenders and will allow appenders to reconfigure without requiring a new stream. RandomAccessFileAppender File Appender. RandomAccessFileAppender.Builder<B extends RandomAccessFileAppender.Builder<B>> Builds RandomAccessFileAppender instances. RandomAccessFileManager Extends OutputStreamManager but instead of using a buffered output stream, this class uses a ByteBuffer and a RandomAccessFile to do the I/O. RollingFileAppender An appender that writes to files and can roll over at intervals. RollingFileAppender.Builder<B extends RollingFileAppender.Builder<B>> Builds FileAppender instances. RollingRandomAccessFileAppender An appender that writes to random access files and can roll over at intervals. RollingRandomAccessFileAppender.Builder<B extends RollingRandomAccessFileAppender.Builder<B>> ScriptAppenderSelector ScriptAppenderSelector.Builder Builds an appender. SmtpAppender Send an e-mail when a specific logging event occurs, typically on errors or fatal errors. SmtpAppender.Builder SocketAppender An Appender that delivers events over socket connections. SocketAppender.AbstractBuilder<B extends SocketAppender.AbstractBuilder<B>> Subclasses can extend this abstract Builder. SocketAppender.Builder Builds a SocketAppender. SyslogAppender The Syslog Appender. SyslogAppender.Builder<B extends SyslogAppender.Builder<B>> TlsSyslogFrame Wraps messages that are formatted according to RFC 5425. WriterAppender Appends log events to a Writer. WriterAppender.Builder<B extends WriterAppender.Builder<B>> Builds WriterAppender instances. WriterManager Manages a Writer so that it can be shared by multiple Appenders and will allow appenders to reconfigure without requiring a new writer."
appender,Related Packages Package Description org.apache.logging.log4j.core.appender Log4j 2 Appenders. org.apache.logging.log4j.core.appender.db.jdbc The JDBC Appender supports writing log events to a relational database using standard JDBC connections. org.apache.logging.log4j.core.appender.mom Message oriented middleware appenders. org.apache.logging.log4j.core.appender.nosql The NoSQL Appender supports writing log events to NoSQL databases. org.apache.logging.log4j.core.appender.rewrite Apache Flume Appender. org.apache.logging.log4j.core.appender.rolling Rolling File Appender and support classes. org.apache.logging.log4j.core.appender.routing Apache Flume Appender.
appender,"All Classes and InterfacesClassesExceptions Class Description AbstractDatabaseAppender<T extends AbstractDatabaseManager> An abstract Appender for writing events to a database of some type, be it relational or NoSQL. AbstractDatabaseAppender.Builder<B extends AbstractDatabaseAppender.Builder<B>> AbstractDatabaseManager Manager that allows database appenders to have their configuration reloaded without losing events. AbstractDatabaseManager.AbstractFactoryData Implementations should extend this class for passing data between the getManager method and the manager factory class. ColumnMapping A configuration element for specifying a database column name mapping. ColumnMapping.Builder Builder for ColumnMapping. DbAppenderLoggingException Wraps a database exception like a JDBC SQLException."
appender,Related Packages Package Description org.apache.logging.log4j.core.appender.db The classes in this package and sub packages provide appenders for various types of databases and methods for accessing databases.
appender,"All Classes and InterfacesInterfacesClasses Class Description AbstractConnectionSource AbstractDriverManagerConnectionSource A ConnectionSource that uses a JDBC connection string, a user name, and a password to call DriverManager.getConnection(String, String, String). AbstractDriverManagerConnectionSource.Builder<B extends AbstractDriverManagerConnectionSource.Builder<B>> Builds DriverManagerConnectionSource instances. ColumnConfig A configuration element used to configure which event properties are logged to which columns in the database table. ColumnConfig.Builder ConnectionSource Configuration element for JdbcAppender. DataSourceConnectionSource A JdbcAppender connection source that uses a DataSource to connect to the database. DriverManagerConnectionSource A ConnectionSource that uses a JDBC connection string, a user name, and a password to call DriverManager.getConnection(String, String, String). DriverManagerConnectionSource.Builder<B extends DriverManagerConnectionSource.Builder<B>> Builds DriverManagerConnectionSource instances. FactoryMethodConnectionSource A JdbcAppender connection source that uses a public static factory method to obtain a Connection or DataSource. JdbcAppender This Appender writes logging events to a relational database using standard JDBC mechanisms. JdbcAppender.Builder<B extends JdbcAppender.Builder<B>> JdbcDatabaseManager An AbstractDatabaseManager implementation for relational databases accessed via JDBC."
appender,Related Packages Package Description org.apache.logging.log4j.core.appender Log4j 2 Appenders. org.apache.logging.log4j.core.appender.mom.jeromq Classes and interfaces for ZeroMQ/JeroMQ support. org.apache.logging.log4j.core.appender.mom.kafka Classes and interfaces for Kafka appender support. org.apache.logging.log4j.core.appender.db The classes in this package and sub packages provide appenders for various types of databases and methods for accessing databases. org.apache.logging.log4j.core.appender.nosql The NoSQL Appender supports writing log events to NoSQL databases. org.apache.logging.log4j.core.appender.rewrite Apache Flume Appender. org.apache.logging.log4j.core.appender.rolling Rolling File Appender and support classes. org.apache.logging.log4j.core.appender.routing Apache Flume Appender.
appender,Classes Class Description JmsAppender Generic JMS Appender plugin for both queues and topics. JmsAppender.Builder<B extends JmsAppender.Builder<B>> JmsManager Consider this class private; it is only public for access by integration tests. JmsManager.JmsManagerConfiguration
appender,Related Packages Package Description org.apache.logging.log4j.core.appender.mom Message oriented middleware appenders. org.apache.logging.log4j.core.appender.mom.kafka Classes and interfaces for Kafka appender support.
appender,Classes Class Description JeroMqAppender Sends log events to one or more ZeroMQ (JeroMQ) endpoints. JeroMqManager Manager for publishing messages via JeroMq.
appender,Related Packages Package Description org.apache.logging.log4j.core.appender.mom Message oriented middleware appenders. org.apache.logging.log4j.core.appender.mom.jeromq Classes and interfaces for ZeroMQ/JeroMQ support.
appender,All Classes and InterfacesInterfacesClasses Class Description DefaultKafkaProducerFactory Creates Apache Kafka Producer instances. KafkaAppender Sends log events to an Apache Kafka topic. KafkaAppender.Builder<B extends KafkaAppender.Builder<B>> Builds KafkaAppender instances. KafkaManager KafkaProducerFactory Creates Apache Kafka Producer instances.
appender,Related Packages Package Description org.apache.logging.log4j.core.appender Log4j 2 Appenders. org.apache.logging.log4j.core.appender.db The classes in this package and sub packages provide appenders for various types of databases and methods for accessing databases. org.apache.logging.log4j.core.appender.mom Message oriented middleware appenders. org.apache.logging.log4j.core.appender.rewrite Apache Flume Appender. org.apache.logging.log4j.core.appender.rolling Rolling File Appender and support classes. org.apache.logging.log4j.core.appender.routing Apache Flume Appender.
appender,"All Classes and InterfacesInterfacesClasses Class Description AbstractNoSqlConnection<W,T extends NoSqlObject<W>> Facilitates implementations of NoSqlConnection. DefaultNoSqlObject Default implementation of NoSqlObject. NoSqlAppender This Appender writes logging events to a NoSQL database using a configured NoSQL provider. NoSqlAppender.Builder<B extends NoSqlAppender.Builder<B>> Builds ConsoleAppender instances. NoSqlConnection<W,T extends NoSqlObject<W>> Represents a connection to the NoSQL database. NoSqlDatabaseManager<W> An AbstractDatabaseManager implementation for all NoSQL databases. NoSqlObject<W> Represents a simple POJO object inserted into a NoSQL object. NoSqlProvider<C extends NoSqlConnection<?,? extends NoSqlObject<?>>> Implementations of this class are plugins for configuring the NoSqlAppender with the proper provider (MongoDB, etc.)."
appender,Related Packages Package Description org.apache.logging.log4j.core.appender Log4j 2 Appenders. org.apache.logging.log4j.core.appender.db The classes in this package and sub packages provide appenders for various types of databases and methods for accessing databases. org.apache.logging.log4j.core.appender.mom Message oriented middleware appenders. org.apache.logging.log4j.core.appender.nosql The NoSQL Appender supports writing log events to NoSQL databases. org.apache.logging.log4j.core.appender.rolling Rolling File Appender and support classes. org.apache.logging.log4j.core.appender.routing Apache Flume Appender.
appender,All Classes and InterfacesInterfacesClassesEnums Class Description LoggerNameLevelRewritePolicy Rewrites log event levels for a given logger name. MapRewritePolicy This policy modifies events by replacing or possibly adding keys and values to the MapMessage. MapRewritePolicy.Mode An enumeration to identify whether keys not in the MapMessage should be added or whether only existing keys should be updated. PropertiesRewritePolicy This policy modifies events by replacing or possibly adding keys and values to the MapMessage. RewriteAppender This Appender allows the logging event to be manipulated before it is processed by other Appenders. RewritePolicy Interface to be implemented by components that support modifications to the LogEvent.
appender,Related Packages Package Description org.apache.logging.log4j.core.appender Log4j 2 Appenders. org.apache.logging.log4j.core.appender.rolling.action Support classes for the Rolling File Appender. org.apache.logging.log4j.core.appender.db The classes in this package and sub packages provide appenders for various types of databases and methods for accessing databases. org.apache.logging.log4j.core.appender.mom Message oriented middleware appenders. org.apache.logging.log4j.core.appender.nosql The NoSQL Appender supports writing log events to NoSQL databases. org.apache.logging.log4j.core.appender.rewrite Apache Flume Appender. org.apache.logging.log4j.core.appender.routing Apache Flume Appender.
appender,"All Classes and InterfacesInterfacesClassesEnums Class Description AbstractRolloverStrategy AbstractTriggeringPolicy Abstract convenience class for triggering policies that extend AbstractLifeCycle and implement TriggeringPolicy. CompositeTriggeringPolicy Triggering policy that wraps other triggering policies. CronTriggeringPolicy Rolls a file over based on a cron schedule. DefaultRolloverStrategy When rolling over, DefaultRolloverStrategy renames files according to an algorithm as described below. DefaultRolloverStrategy.Builder Builds DefaultRolloverStrategy instances. DirectFileRolloverStrategy Created by rgoers on 1/12/17. DirectWriteRolloverStrategy When rolling over, DirectWriteRolloverStrategy writes directly to the file as resolved by the file pattern. DirectWriteRolloverStrategy.Builder Builds DirectWriteRolloverStrategy instances. FileExtension Enumerates over supported file extensions for compression. FileSize FileSize utility class. NoOpTriggeringPolicy OnStartupTriggeringPolicy Triggers a rollover on every restart, but only if the file size is greater than zero. PatternProcessor Parses the rollover pattern. RollingFileManager The Rolling File Manager. RollingRandomAccessFileManager Extends RollingFileManager but instead of using a buffered output stream, this class uses a ByteBuffer and a RandomAccessFile to do the I/O. RolloverDescription Description of actions needed to complete rollover. RolloverDescriptionImpl Description of actions needed to complete rollover. RolloverFrequency Enumeration of rollover frequency values. RolloverListener Implementations of this interface that are registered with the RollingFileManager will be notified before and after a rollover occurs. RolloverStrategy A RollingPolicy specifies the actions taken on a logging file rollover. SizeBasedTriggeringPolicy TimeBasedTriggeringPolicy Rolls a file over based on time. TimeBasedTriggeringPolicy.Builder TriggeringPolicy A TriggeringPolicy controls the conditions under which rollover occurs."
appender,Related Packages Package Description org.apache.logging.log4j.core.appender.rolling Rolling File Appender and support classes.
appender,"All Classes and InterfacesInterfacesClasses Class Description AbstractAction Abstract base class for implementations of Action. AbstractPathAction Abstract action for processing files that are accepted by the specified PathFilters. Action The Action interface should be implemented by any class that performs file system actions for RollingFileAppenders after the close of the active log file. CommonsCompressAction Compresses a file using bzip2 compression. CompositeAction A group of Actions to be executed in sequence. DeleteAction Rollover or scheduled action for deleting old log files that are accepted by the specified PathFilters. DeletingVisitor FileVisitor that deletes files that are accepted by all PathFilters. Duration Deprecated. since 2.24.0 use Duration instead. FileRenameAction File rename action. GzCompressAction Compresses a file using GZ compression. IfAccumulatedFileCount PathCondition that accepts paths after some count threshold is exceeded during the file tree walk. IfAccumulatedFileSize PathCondition that accepts paths after the accumulated file size threshold is exceeded during the file tree walk. IfAll Composite PathCondition that only accepts objects that are accepted by all component conditions. IfAny Composite PathCondition that accepts objects that are accepted by any component conditions. IfFileName PathCondition that accepts files for deletion if their relative path matches either a glob pattern or a regular expression. IfLastModified PathCondition that accepts paths that are older than the specified duration. IfLastModified.Builder IfNot Wrapper PathCondition that accepts objects that are rejected by the wrapped component filter. PathCondition Filter that accepts or rejects a candidate Path for deletion. PathSortByModificationTime PathSorter that sorts path by their LastModified attribute. PathSorter Defines the interface of classes that can sort Paths. PathWithAttributes Tuple of a Path and BasicFileAttributes, used for sorting. PosixViewAttributeAction File POSIX attribute view action. PosixViewAttributeAction.Builder Builder for the POSIX view attribute action. ScriptCondition A condition of the DeleteAction where a user-provided script selects the files to delete from a provided list. SortingVisitor FileVisitor that sorts files. ZipCompressAction Compresses a file using Zip compression."
appender,Related Packages Package Description org.apache.logging.log4j.core.appender Log4j 2 Appenders. org.apache.logging.log4j.core.appender.db The classes in this package and sub packages provide appenders for various types of databases and methods for accessing databases. org.apache.logging.log4j.core.appender.mom Message oriented middleware appenders. org.apache.logging.log4j.core.appender.nosql The NoSQL Appender supports writing log events to NoSQL databases. org.apache.logging.log4j.core.appender.rewrite Apache Flume Appender. org.apache.logging.log4j.core.appender.rolling Rolling File Appender and support classes.
appender,"All Classes and InterfacesInterfacesClasses Class Description IdlePurgePolicy Policy is purging appenders that were not in use specified time in minutes PurgePolicy Policy for purging routed appenders Route A Route to an appender. Routes Contains the individual Route elements. Routes.Builder RoutingAppender This Appender ""routes"" between various Appenders, some of which can be references to Appenders defined earlier in the configuration while others can be dynamically created within this Appender as required. RoutingAppender.Builder<B extends RoutingAppender.Builder<B>>"
async,"All Classes and InterfacesInterfacesClassesEnums Class Description ArrayBlockingQueueFactory<E> Factory for creating instances of ArrayBlockingQueue. AsyncLogger AsyncLogger is a logger designed for high throughput and low latency logging. AsyncLoggerConfig Asynchronous Logger object that is created via configuration and can be combined with synchronous loggers. AsyncLoggerConfig.Builder<B extends AsyncLoggerConfig.Builder<B>> AsyncLoggerConfig.RootLogger An asynchronous root Logger. AsyncLoggerConfig.RootLogger.Builder<B extends AsyncLoggerConfig.RootLogger.Builder<B>> AsyncLoggerConfigDefaultExceptionHandler Default disruptor exception handler for errors that occur in the AsyncLogger background thread. AsyncLoggerConfigDelegate Encapsulates the mechanism used to log asynchronously. AsyncLoggerConfigDisruptor Helper class decoupling the AsyncLoggerConfig class from the LMAX Disruptor library. AsyncLoggerConfigDisruptor.Log4jEventWrapper RingBuffer events contain all information necessary to perform the work in a separate thread. AsyncLoggerContext LoggerContext that creates AsyncLogger objects. AsyncLoggerContextSelector ContextSelector that manages AsyncLoggerContext instances. AsyncLoggerDefaultExceptionHandler Default disruptor exception handler for errors that occur in the AsyncLogger background thread. AsyncQueueFullMessageUtil Consider this class private. AsyncQueueFullPolicy Policy for deciding whether to discard the event, enqueue it or log the event on the current thread when the queue is full. AsyncQueueFullPolicyFactory Creates AsyncQueueFullPolicy instances based on user-specified system properties. AsyncWaitStrategyFactory This interface allows users to configure a custom Disruptor WaitStrategy used for Async Loggers and Async LoggerConfigs. AsyncWaitStrategyFactoryConfig This class allows users to configure the factory used to create an instance of the LMAX disruptor WaitStrategy used by Async Loggers in the log4j configuration. AsyncWaitStrategyFactoryConfig.Builder<B extends AsyncWaitStrategyFactoryConfig.Builder<B>> Builds AsyncWaitStrategyFactoryConfig instances. BasicAsyncLoggerContextSelector Returns either this Thread's context or the default AsyncLoggerContext. BlockingQueueFactory<E> Factory for creating instances of BlockingQueue. DefaultAsyncQueueFullPolicy Default router: enqueue the event for asynchronous logging in the background thread, unless the current thread is the background thread and the queue is full (enqueueing would cause a deadlock). DiscardingAsyncQueueFullPolicy Discarding router extends the DefaultAsyncQueueFullPolicy by first verifying if the queue is fuller than the specified threshold ratio; if this is the case, log events more specific than the specified threshold level are dropped. DisruptorBlockingQueueFactory<E> Factory for creating instances of DisruptorBlockingQueue. EventRoute Enumeration over the different destinations where a log event can be sent. InternalAsyncUtil Helper class providing some async logging-related functionality. JCToolsBlockingQueueFactory<E> Factory for creating instances of BlockingQueues backed by JCTools MpscArrayQueue. JCToolsBlockingQueueFactory.WaitStrategy LinkedTransferQueueFactory<E> Factory for creating instances of LinkedTransferQueue. RingBufferLogEvent When the Disruptor is started, the RingBuffer is populated with event objects. RingBufferLogEventHandler Deprecated. Only used internally, will be removed in the next major version. RingBufferLogEventTranslator This class is responsible for writing elements that make up a log event into the ringbuffer RingBufferLogEvent. ThreadNameCachingStrategy Strategy for deciding whether thread name should be cached or not."
config,Related Packages Package Description org.apache.logging.log4j.core Implementation of Log4j 2. org.apache.logging.log4j.core.config.arbiters org.apache.logging.log4j.core.config.composite Support for composite configurations. org.apache.logging.log4j.core.config.json Classes and interfaces supporting configuration of Log4j 2 with JSON. org.apache.logging.log4j.core.config.plugins Annotations for Log4j 2 plugins. org.apache.logging.log4j.core.config.properties Configuration using Properties files. org.apache.logging.log4j.core.config.status Configuration classes for the StatusLogger API. org.apache.logging.log4j.core.config.xml Classes and interfaces supporting configuration of Log4j 2 with XML. org.apache.logging.log4j.core.config.yaml Classes and interfaces supporting configuration of Log4j 2 with YAML.
config,"All Classes and InterfacesInterfacesClassesEnumsExceptionsAnnotation Types Class Description AbstractConfiguration The base Configuration. AppenderControl Wraps an Appender with details an appender implementation shouldn't need to know about. AppenderControlArraySet Data structure with similar semantics to CopyOnWriteArraySet, but giving direct access to the underlying array. AppenderRef An Appender reference. AppendersPlugin An Appender container. AwaitCompletionReliabilityStrategy ReliabilityStrategy that counts the number of threads that have started to log an event but have not completed yet, and waits for these threads to finish before allowing the appenders to be stopped. AwaitUnconditionallyReliabilityStrategy Reliability strategy that sleeps unconditionally for some time before allowing a Configuration to be stopped. Configuration Interface that must be implemented to create a configuration. ConfigurationAware Indicates that a class requests the current Configuration to be injected. ConfigurationException This exception is thrown when an error occurs reading from, parsing, using, or initializing the Log4j 2 configuration. ConfigurationFactory Factory class for parsed Configuration objects from a configuration file. ConfigurationFileWatcher Watcher for configuration files. ConfigurationListener Interface used to allow components to be notified when the configuration changes. ConfigurationScheduler ConfigurationSource Represents the source for the logging configuration. Configurator Initializes and configure the Logging system. CronScheduledFuture<V> CustomLevelConfig Descriptor of a custom Level object that is created via configuration. CustomLevels Container for CustomLevelConfig objects. DefaultAdvertiser The default advertiser does not do anything. DefaultConfiguration The default configuration writes all output to the Console using the default logging level. DefaultReliabilityStrategy Reliability strategy that assumes reconfigurations will never take place. HttpWatcher LocationAwareReliabilityStrategy Interface to ensure delivery of log events to the appropriate Appenders while including location information. LockingReliabilityStrategy ReliabilityStrategy that uses read/write locks to prevent the LoggerConfig from stopping while it is in use. LoggerConfig Logger object that is created via configuration. LoggerConfig.Builder<B extends LoggerConfig.Builder<B>> Builds LoggerConfig instances. LoggerConfig.LevelAndRefs LoggerConfig.LoggerConfigPredicate LoggerConfig.RootLogger The root Logger. LoggerConfig.RootLogger.Builder<B extends LoggerConfig.RootLogger.Builder<B>> Builds LoggerConfig instances. LoggerContextAware Indicates that a class requests the current LoggerContext to be injected. Loggers LoggersPlugin Container of Logger objects. Node A Configuration node. NullConfiguration This configuration defaults to no logging. Order Identifies the relative ordering of a ConfigurationFactory plugin. OrderComparator Comparator for classes annotated with Order. PropertiesPlugin Handles properties defined in the configuration. Property Represents a key/value pair in the configuration. Reconfigurable Implemented by Configurations that can be reconfigured at runtime. ReliabilityStrategy Interface for objects that know how to ensure delivery of log events to the appropriate appenders, even during and after the configuration has been modified while the system is actively used. ReliabilityStrategyFactory Factory for ReliabilityStrategies. Scheduled Annotation that identifies a Class as requiring a Scheduled thread. ScriptsPlugin A container of Scripts."
config,Related Packages Package Description org.apache.logging.log4j.core.config Configuration of Log4j 2.
config,All Classes and InterfacesInterfacesClasses Class Description Arbiter Interface used to check for portions of the configuration that may be optionally included. ClassArbiter Conditional that determines if the specified class is present. ClassArbiter.Builder DefaultArbiter Default Condition for a Select Condition. DefaultArbiter.Builder EnvironmentArbiter Condition that determines if the specified environment variable is set. EnvironmentArbiter.Builder ScriptArbiter Condition that evaluates a script. ScriptArbiter.Builder SelectArbiter Class Description goes here. SelectArbiter.Builder SystemPropertyArbiter Condition that determines if the specified property is set. SystemPropertyArbiter.Builder
config,All Classes and InterfacesInterfacesClasses Class Description AppenderComponentBuilder Builder for constructing Appender Components. AppenderRefComponentBuilder Assembler for constructing AppenderRef Components. Component Container for building Configurations. ComponentBuilder<T extends ComponentBuilder<T>> Builds arbitrary components and is the base type for the provided components. CompositeFilterComponentBuilder Wraps multiple Filter Component builders. ConfigurationBuilder<T extends Configuration> Interface for building logging configurations. ConfigurationBuilderFactory Provides methods to create ConfigurationBuilders. CustomLevelComponentBuilder Assembler for constructing CustomLevel Components. FilterableComponentBuilder<T extends ComponentBuilder<T>> Component builder that can add Filters. FilterComponentBuilder Assembler for constructing Filter Components. KeyValuePairComponentBuilder Assembler for constructing KeyValuePair Components. LayoutComponentBuilder Assembler for constructing Layout Components. LoggableComponentBuilder<T extends ComponentBuilder<T>> Common component builder for Logger and RootLogger elements. LoggerComponentBuilder Assembler for constructing Logger Components. PropertyComponentBuilder Assembler for constructing Property Components. RootLoggerComponentBuilder Assembler for constructing the root Logger Components. ScriptComponentBuilder Assembler for constructing Layout Components. ScriptFileComponentBuilder Assembler for constructing ScriptFile Components.
config,Classes Class Description BuiltConfiguration This is the general version of the Configuration created by the Builder. DefaultConfigurationBuilder<T extends BuiltConfiguration>
config,Related Packages Package Description org.apache.logging.log4j.core.config Configuration of Log4j 2.
config,All Classes and InterfacesInterfacesClasses Class Description CompositeConfiguration A Composite Configuration. DefaultMergeStrategy The default merge strategy for composite configurations. MergeStrategy Merges two configurations together
config,Related Packages Package Description org.apache.logging.log4j.core.config Configuration of Log4j 2.
config,Classes Class Description JsonConfiguration Creates a Node hierarchy from a JSON file. JsonConfigurationFactory
config,Related Packages Package Description org.apache.logging.log4j.core.config Configuration of Log4j 2. org.apache.logging.log4j.core.config.plugins.convert TypeConverter plugins for converter strings into various types. org.apache.logging.log4j.core.config.plugins.processor Java annotation processor for pre-scanning Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.util Utility and manager classes for Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.validation Constraint validators for plugin factory methods. org.apache.logging.log4j.core.config.plugins.visitors Visitor classes for extracting values from a Configuration or Node corresponding to a plugin annotation.
config,"Annotation Types Class Description Plugin Annotation that identifies a Class as a Plugin. PluginAliases Identifies a list of aliases for a Plugin, PluginAttribute, or PluginBuilderAttribute. PluginAttribute Identifies a Plugin Attribute and its default value. PluginBuilderAttribute Marks a field as a Plugin Attribute. PluginBuilderFactory Marks a method as a factory for custom Plugin builders. PluginConfiguration Identifies a parameter or field as a Configuration. PluginElement Identifies a parameter as a Plugin and corresponds with an XML element (or equivalent) in configuration files. PluginFactory Identifies a Method as the factory to create the plugin. PluginLoggerContext Identifies a parameter or field as a LoggerContext. PluginNode Identifies a Plugin configuration Node. PluginValue Identifies a parameter as a value. PluginVisitorStrategy Meta-annotation to denote the class name to use that implements PluginVisitor for the annotated annotation."
config,Related Packages Package Description org.apache.logging.log4j.core.config.plugins Annotations for Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.processor Java annotation processor for pre-scanning Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.util Utility and manager classes for Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.validation Constraint validators for plugin factory methods. org.apache.logging.log4j.core.config.plugins.visitors Visitor classes for extracting values from a Configuration or Node corresponding to a plugin annotation.
config,"All Classes and InterfacesInterfacesClasses Class Description Base64Converter DateTypeConverter Utility methods for Date classes. EnumConverter<E extends Enum<E>> Converts a String into a Enum. HexConverter Converts Strings to hex. TypeConverter<T> Interface for doing automatic String conversion to a specific type. TypeConverterRegistry Registry for TypeConverter plugins. TypeConverters Collection of basic TypeConverter implementations. TypeConverters.BigDecimalConverter Parses a String into a BigDecimal. TypeConverters.BigIntegerConverter Parses a String into a BigInteger. TypeConverters.BooleanConverter Converts a String into a Boolean. TypeConverters.ByteArrayConverter Converts a String into a byte[]. TypeConverters.ByteConverter Converts a String into a Byte. TypeConverters.CharacterConverter Converts a String into a Character. TypeConverters.CharArrayConverter Converts a String into a char[]. TypeConverters.CharsetConverter Converts a String into a Charset. TypeConverters.ClassConverter Converts a String into a Class. TypeConverters.CronExpressionConverter TypeConverters.DoubleConverter Converts a String into a Double. TypeConverters.DurationConverter Deprecated. since 2.24.0. TypeConverters.FileConverter Converts a String into a File. TypeConverters.FloatConverter Converts a String into a Float. TypeConverters.InetAddressConverter Converts a String into an InetAddress. TypeConverters.IntegerConverter Converts a String into a Integer. TypeConverters.LevelConverter Converts a String into a Log4j Level. TypeConverters.LongConverter Converts a String into a Long. TypeConverters.PathConverter Converts a String into a Path. TypeConverters.PatternConverter Converts a String into a Pattern. TypeConverters.SecurityProviderConverter Converts a String into a Provider. TypeConverters.ShortConverter Converts a String into a Short. TypeConverters.StringConverter Returns the given String, no conversion takes place. TypeConverters.UriConverter Converts a String into a URI. TypeConverters.UrlConverter Converts a String into a URL. TypeConverters.UuidConverter Converts a String into a UUID."
config,Related Packages Package Description org.apache.logging.log4j.core.config.plugins Annotations for Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.convert TypeConverter plugins for converter strings into various types. org.apache.logging.log4j.core.config.plugins.util Utility and manager classes for Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.validation Constraint validators for plugin factory methods. org.apache.logging.log4j.core.config.plugins.visitors Visitor classes for extracting values from a Configuration or Node corresponding to a plugin annotation.
config,Classes Class Description PluginCache PluginEntry Memento object for storing a plugin entry to a cache file. PluginProcessor Annotation processor for pre-scanning Log4j 2 plugins.
config,Related Packages Package Description org.apache.logging.log4j.core.config.plugins Annotations for Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.convert TypeConverter plugins for converter strings into various types. org.apache.logging.log4j.core.config.plugins.processor Java annotation processor for pre-scanning Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.validation Constraint validators for plugin factory methods. org.apache.logging.log4j.core.config.plugins.visitors Visitor classes for extracting values from a Configuration or Node corresponding to a plugin annotation.
config,All Classes and InterfacesInterfacesClasses Class Description PluginBuilder Builder class to instantiate and configure a Plugin object using a PluginFactory method or PluginBuilderFactory builder class. PluginManager Loads and manages all the plugins. PluginRegistry Registry singleton for PluginType maps partitioned by source type and then by category names. PluginRegistry.PluginTest A Test that checks to see if each class is annotated with the 'Plugin' annotation. PluginType<T> Plugin Descriptor. PluginUtil Plugin utilities. ResolverUtil ResolverUtil is used to locate classes that are available in the/a class path and meet arbitrary conditions. ResolverUtil.Test A simple interface that specifies how to test classes to determine if they are to be included in the results produced by the ResolverUtil.
config,Related Packages Package Description org.apache.logging.log4j.core.config.plugins Annotations for Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.validation.constraints Validation annotations. org.apache.logging.log4j.core.config.plugins.validation.validators ConstraintValidator implementations for the constraint annotations. org.apache.logging.log4j.core.config.plugins.convert TypeConverter plugins for converter strings into various types. org.apache.logging.log4j.core.config.plugins.processor Java annotation processor for pre-scanning Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.util Utility and manager classes for Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.visitors Visitor classes for extracting values from a Configuration or Node corresponding to a plugin annotation.
config,All Classes and InterfacesInterfacesClassesAnnotation Types Class Description Constraint Meta annotation to mark an annotation as a validation constraint. ConstraintValidator<A extends Annotation> Interface that Constraint annotations must implement to perform validation logic. ConstraintValidators Utility class to locate an appropriate ConstraintValidator implementation for an annotation.
config,Related Packages Package Description org.apache.logging.log4j.core.config.plugins.validation Constraint validators for plugin factory methods. org.apache.logging.log4j.core.config.plugins.validation.validators ConstraintValidator implementations for the constraint annotations.
config,Annotation Types Class Description NotBlank Marks a plugin builder field or plugin factory parameter of type CharSequence that can not be blank. Required Marks a plugin builder field or plugin factory parameter as required. ValidHost Indicates that a plugin attribute must be a valid host. ValidPort Indicates that a plugin attribute must be a valid port number.
config,Related Packages Package Description org.apache.logging.log4j.core.config.plugins.validation Constraint validators for plugin factory methods. org.apache.logging.log4j.core.config.plugins.validation.constraints Validation annotations.
config,Classes Class Description NotBlankValidator Validator that checks if a CharSequence is not entirely composed of whitespace. RequiredValidator Validator that checks an object for emptiness. ValidHostValidator Validator that checks an object to verify it is a valid hostname or IP address. ValidPortValidator Validator that checks an object to verify it is a valid port number (an integer between 0 and 65535).
config,Related Packages Package Description org.apache.logging.log4j.core.config.plugins Annotations for Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.convert TypeConverter plugins for converter strings into various types. org.apache.logging.log4j.core.config.plugins.processor Java annotation processor for pre-scanning Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.util Utility and manager classes for Log4j 2 plugins. org.apache.logging.log4j.core.config.plugins.validation Constraint validators for plugin factory methods.
config,"All Classes and InterfacesInterfacesClasses Class Description AbstractPluginVisitor<A extends Annotation> Base class for PluginVisitor implementations. PluginAttributeVisitor PluginVisitor implementation for PluginAttribute. PluginBuilderAttributeVisitor PluginVisitor for PluginBuilderAttribute. PluginConfigurationVisitor PluginVisitor implementation for PluginConfiguration. PluginElementVisitor PluginVisitor implementation for PluginElement. PluginLoggerContextVisitor PluginVisitor implementation for PluginConfiguration. PluginNodeVisitor PluginVisitor implementation for PluginNode. PluginValueVisitor PluginVisitor implementation for PluginValue. PluginVisitor<A extends Annotation> Visitor strategy for parsing data from a Node, doing any relevant type conversion, and returning a parsed value for that variable. PluginVisitors Utility class to locate an appropriate PluginVisitor implementation for an annotation."
config,Related Packages Package Description org.apache.logging.log4j.core.config Configuration of Log4j 2.
config,Classes Class Description PropertiesConfiguration Configuration created from a properties file. PropertiesConfigurationBuilder Helper builder for parsing properties files into a PropertiesConfiguration. PropertiesConfigurationFactory Creates a PropertiesConfiguration from a properties file.
config,Related Packages Package Description org.apache.logging.log4j.core.config Configuration of Log4j 2.
config,All Classes and InterfacesClassesEnums Class Description StatusConfiguration Configuration for setting up the StatusLogger fallback listener. StatusConfiguration.Verbosity Deprecated. This class is not used anymore and only kept for binary backward compatibility.
config,Related Packages Package Description org.apache.logging.log4j.core.config Configuration of Log4j 2.
config,Classes Class Description XmlConfiguration Creates a Node hierarchy from an XML file. XmlConfigurationFactory Factory to construct an XmlConfiguration.
config,Related Packages Package Description org.apache.logging.log4j.core.config Configuration of Log4j 2.
config,Classes Class Description YamlConfiguration YamlConfigurationFactory
filter,Related Packages Package Description org.apache.logging.log4j.core Implementation of Log4j 2. org.apache.logging.log4j.core.filter.mutable
filter,"All Classes and InterfacesInterfacesClasses Class Description AbstractFilter Users should extend this class to implement filters. AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> AbstractFilterable Enhances a Class by allowing it to contain Filters. AbstractFilterable.Builder<B extends AbstractFilterable.Builder<B>> Subclasses can extend this abstract Builder. BurstFilter The BurstFilter is a logging filter that regulates logging traffic. BurstFilter.Builder CompositeFilter Composes and invokes one or more filters. DenyAllFilter This filter causes all logging events to be dropped. DenyAllFilter.Builder DynamicThresholdFilter Compares against a log level that is associated with a context value. Filterable Interface implemented by Classes that allow filtering to occur. LevelMatchFilter This filter returns the onMatch result if the logging level in the event matches the specified logging level exactly. LevelMatchFilter.Builder LevelRangeFilter This filter returns the AbstractFilter.onMatch result if the level of the LogEvent is in the range of the configured LevelRangeFilter.minLevel and LevelRangeFilter.maxLevel values, otherwise it returns the AbstractFilter.onMismatch result. MapFilter A Filter that operates on a Map. MarkerFilter This filter returns the onMatch result if the marker in the LogEvent is the same as or has the configured marker as a parent. MutableThreadContextMapFilter Filter based on a value in the Thread Context Map (MDC). MutableThreadContextMapFilter.Builder MutableThreadContextMapFilter.FilterConfigUpdateListener NoMarkerFilter This filter returns the onMatch result if there is no marker in the LogEvent. NoMarkerFilter.Builder RegexFilter A filter that matches the given regular expression pattern against messages. ScriptFilter Returns the onMatch result if the script returns True and returns the onMismatch value otherwise. StringMatchFilter This filter returns the onMatch result if the logging level in the event matches the specified logging level exactly. StringMatchFilter.Builder StructuredDataFilter Filter based on data in a StructuredDataMessage. ThreadContextMapFilter Filter based on a value in the Thread Context Map (MDC). ThresholdFilter This filter returns the onMatch result if the level in the LogEvent is the same or more specific than the configured level and the onMismatch value otherwise. TimeFilter Filters events that fall within a specified time period in each day."
filter,Related Packages Package Description org.apache.logging.log4j.core.filter Log4j 2 Filter support.
filter,Classes Class Description KeyValuePairConfig Class representing the configuration of KeyValue pairs.
impl,"All Classes and InterfacesInterfacesClasses Class Description ContextAnchor Anchor for the ThreadContext. ContextDataFactory Factory for creating the StringMap instances used to initialize LogEvents' context data. ContextDataInjectorFactory Factory for ContextDataInjectors. DefaultLogEventFactory Always creates new LogEvent instances. ExtendedClassInfo Class and package data used with a StackTraceElement in a ExtendedStackTraceElement. ExtendedStackTraceElement Wraps and extends the concept of the JRE's final class StackTraceElement by adding more location information. JdkMapAdapterStringMap Provides a read-only StringMap view of a Map<String, String>. LocationAware Classes that use location information should implement this interface. LocationAwareLogEventFactory Log4jContextFactory Factory to locate a ContextSelector and then load a LoggerContext. Log4jLogEvent Implementation of a LogEvent. Log4jLogEvent.Builder LogEvent Builder helper class. Log4jProvider Binding for the Log4j API. LogEventFactory MementoMessage Consider this class private. MementoMessage is intended to be used when we need to make an immutable copy of a Message without forgetting the original Message.getFormat() and Message.getParameters() values. MutableLogEvent Mutable implementation of the LogEvent interface. ReusableLogEventFactory Garbage-free LogEventFactory that reuses a single mutable log event. ThreadContextDataInjector ThreadContextDataInjector contains a number of strategies for copying key-value pairs from the various ThreadContext map implementations into a StringMap. ThreadContextDataInjector.ForCopyOnWriteThreadContextMap The ContextDataInjector used when the ThreadContextMap implementation is a copy-on-write StringMap-based data structure. ThreadContextDataInjector.ForDefaultThreadContextMap Default ContextDataInjector for the legacy Map<String, String>-based ThreadContext (which is also the ThreadContext implementation used for web applications). ThreadContextDataInjector.ForGarbageFreeThreadContextMap The ContextDataInjector used when the ThreadContextMap implementation is a garbage-free StringMap-based data structure. ThreadContextDataProvider ContextDataProvider for ThreadContext data. ThrowableFormatOptions Contains options which control how a Throwable pattern is formatted. ThrowableProxy Wraps a Throwable to add packaging information about each stack trace element."
jackson,Classes Class Description ContextDataAsEntryListDeserializer Consider this class private. ContextDataAsEntryListSerializer Consider this class private. ContextDataDeserializer Consider this class private. ContextDataSerializer Consider this class private. JsonConstants Keeps constants separate from any class that may depend on third party jars. ListOfMapEntryDeserializer Consider this class private. ListOfMapEntrySerializer Consider this class private. Log4jJsonObjectMapper A Jackson JSON ObjectMapper initialized for Log4j. Log4jStackTraceElementDeserializer Used by Jackson to deserialize a StackTraceElement. Log4jXmlObjectMapper A Jackson XML ObjectMapper initialized for Log4j. Log4jYamlObjectMapper A Jackson ObjectMapper initialized for Log4j. MapEntry Consider this class private. SimpleMessageDeserializer Consider this class private. StackTraceElementConstants Defines constants use for naming stack trace elements. XmlConstants Keeps constants separate from any class that may depend on third party jars.
jmx,All Classes and InterfacesInterfacesClasses Class Description AppenderAdmin Implementation of the AppenderAdminMBean interface. AppenderAdminMBean The MBean interface for monitoring and managing an Appender. AsyncAppenderAdmin Implementation of the AsyncAppenderAdminMBean interface. AsyncAppenderAdminMBean The MBean interface for monitoring and managing an AsyncAppender. ContextSelectorAdmin Implementation of the ContextSelectorAdminMBean interface. ContextSelectorAdminMBean The MBean interface for monitoring and managing the ContextSelector. LoggerConfigAdmin Implementation of the LoggerConfigAdminMBean interface. LoggerConfigAdminMBean The MBean interface for monitoring and managing a LoggerConfig. LoggerContextAdmin Implementation of the LoggerContextAdminMBean interface. LoggerContextAdminMBean The MBean interface for monitoring and managing a LoggerContext. RingBufferAdmin Instruments an LMAX Disruptor ring buffer. RingBufferAdminMBean The MBean interface for monitoring and managing an LMAX Disruptor ring buffer. Server Creates MBeans to instrument various classes in the log4j class hierarchy. StatusLoggerAdmin Implementation of the StatusLoggerAdminMBean interface. StatusLoggerAdminMBean The MBean interface for monitoring and managing the StatusLogger.
layout,"All Classes and InterfacesInterfacesClassesEnums Class Description AbstractCsvLayout A superclass for Comma-Separated Value (CSV) layouts. AbstractLayout<T extends Serializable> Abstract base class for Layouts. AbstractLayout.Builder<B extends AbstractLayout.Builder<B>> Subclasses can extend this abstract Builder. AbstractStringLayout Abstract base class for Layouts that result in a String. AbstractStringLayout.Builder<B extends AbstractStringLayout.Builder<B>> AbstractStringLayout.Serializer AbstractStringLayout.Serializer2 Variation of AbstractStringLayout.Serializer that avoids allocating temporary objects. ByteBufferDestination ByteBufferDestination is the destination that Encoders write binary data to. ByteBufferDestinationHelper Helper class for ByteBufferDestination implementors. CsvLogEventLayout A Comma-Separated Value (CSV) layout to log events. CsvParameterLayout A Comma-Separated Value (CSV) layout to log event parameters. Encoder<T> Objects implementing the Encoder interface know how to convert an object to some binary representation and write the result to a ByteBuffer, ideally without creating temporary objects. GelfLayout Lays out events in the Graylog Extended Log Format (GELF) 1.1. GelfLayout.Builder<B extends GelfLayout.Builder<B>> GelfLayout.CompressionType HtmlLayout Outputs events as rows in an HTML table on an HTML page. HtmlLayout.Builder HtmlLayout.FontSize Possible font sizes JsonLayout Note: The JsonLayout should be considered to be deprecated. JsonLayout.Builder<B extends JsonLayout.Builder<B>> LevelPatternSelector Selects the pattern to use based on the Level in the LogEvent. LevelPatternSelector.Builder Custom MarkerPatternSelector builder. LockingStringBuilderEncoder Encoder for StringBuilders that locks on the ByteBufferDestination. LoggerFields A LoggerFields container. MarkerPatternSelector Selects the pattern to use based on the Marker in the LogEvent. MarkerPatternSelector.Builder Custom MarkerPatternSelector builder. MessageLayout Formats a LogEvent in its Message form. PatternLayout A flexible layout configurable with pattern string. PatternLayout.Builder Custom PatternLayout builder. PatternLayout.SerializerBuilder PatternMatch PatternMatch configuration item. PatternMatch.Builder PatternSelector Allows different patterns to be used with the PatternLayout based on some selection criteria. Rfc5424Layout Formats a log event in accordance with RFC 5424. Rfc5424Layout.Rfc5424LayoutBuilder ScriptPatternSelector Selects the pattern to use based on the result of executing a Script. ScriptPatternSelector.Builder Custom ScriptPatternSelector builder. SerializedLayout Deprecated. Java Serialization has inherent security weaknesses, see https://www.owasp.org/index.php/Deserialization_of_untrusted_data . StringBuilderEncoder Encoder for StringBuilders that uses ThreadLocals to avoid locking as much as possible. SyslogLayout Formats a log event as a BSD Log record. SyslogLayout.Builder<B extends SyslogLayout.Builder<B>> Builds a SyslogLayout. TextEncoderHelper Helper class to encode text to binary data without allocating temporary objects. XmlLayout Appends a series of event elements as defined in the Log4j-events.xsd. XmlLayout.Builder<B extends XmlLayout.Builder<B>> YamlLayout Appends a series of YAML events as strings serialized as bytes. YamlLayout.Builder<B extends YamlLayout.Builder<B>>"
lookup,"All Classes and InterfacesInterfacesClasses Class Description AbstractConfigurationAwareLookup StrLookup that is ConfigurationAware. AbstractLookup A default lookup for others to extend. ConfigurationStrSubstitutor RuntimeStrSubstitutor is a StrSubstitutor which only supports recursive evaluation of lookups. ContextMapLookup Looks up keys from the context. DateLookup Formats the current date or the date in the LogEvent. EnvironmentLookup Looks up keys from environment variables. EventLookup Looks up values from the log event. Interpolator Proxies all the other StrLookups. JavaLookup Looks up keys related to Java: Java version, JRE version, VM version, and so on. JmxRuntimeInputArgumentsLookup Maps JVM input arguments (but not main arguments) using JMX to acquire JVM arguments. JndiLookup Looks up keys from JNDI resources. Log4jLookup Lookup properties of Log4j LookupResult LowerLookup Converts values to lower case. MainMapLookup A map-based lookup for main arguments. MapLookup A map-based lookup. MarkerLookup Looks-up markers. PropertiesLookup A lookup designed for Properties defined in the configuration. ResourceBundleLookup Looks up keys from resource bundles. RuntimeStrSubstitutor RuntimeStrSubstitutor is a StrSubstitutor which only supports evaluation of top-level lookups. StrLookup Lookup a String key to a String value. StrMatcher A matcher class that can be queried to determine if a character array portion matches. StrSubstitutor Substitutes variables within a string by values. StructuredDataLookup Looks up keys from StructuredDataMessage log messages. SystemPropertiesLookup Looks up keys from system properties. UpperLookup Converts values to upper case."
net,Java Message System appenders (both queue-based and topic-based)
net,Zeroconf support for finding logging systems
net,TCP and UDP socket servers for sending and receiving log events
net,JavaMail appenders for sending log events over SMTP
net,Syslog network log event support
net,Related Packages Package Description org.apache.logging.log4j.core Implementation of Log4j 2. org.apache.logging.log4j.core.net.ssl Log4j 2 SSL support
net,"All Classes and InterfacesInterfacesClassesEnums Class Description AbstractSocketManager Abstract base class for managing sockets. Advertiser DatagramOutputStream OutputStream for UDP connections. DatagramSocketManager Socket Manager for UDP connections. Facility The facility codes used by the Syslog system. JndiManager Manages a JNDI DirContext. MailManager Parent of all managers that send e-mails. MailManager.FactoryData MailManagerFactory MimeMessageBuilder Builder for MimeMessage instances. MulticastDnsAdvertiser Advertise an entity via ZeroConf/MulticastDNS and the JmDNS library. Priority The Priority used in the Syslog system. Protocol Enumerates the supported protocols. Rfc1349TrafficClass Enumerates the RFC 1349 TOS field. Severity Severity values used by the Syslog system. SmtpManager Manager for sending SMTP events. SmtpManager.SMTPManagerFactory Factory to create the SMTP Manager. SocketAddress Plugin to hold a hostname and port (socket address). SocketAddress.Builder SocketOptions Holds all socket options settable via Socket methods. SocketPerformancePreferences Holds all socket options settable via Socket.setPerformancePreferences(int, int, int). SslSocketManager TcpSocketManager Manager of TCP Socket connections. TcpSocketManager.HostResolver TcpSocketManager.TcpSocketManagerFactory<M extends TcpSocketManager,T extends org.apache.logging.log4j.core.net.TcpSocketManager.FactoryData> Factory to create a TcpSocketManager. UrlConnectionFactory Constructs an HTTPURLConnection."
net,Related Packages Package Description org.apache.logging.log4j.core.net Log4j 2 network support.
net,All Classes and InterfacesInterfacesClassesExceptions Class Description AbstractKeyStoreConfiguration Configuration of the KeyStore KeyStoreConfiguration Configuration of the KeyStore KeyStoreConfigurationException LaxHostnameVerifier An HostnameVerifier which accepts everything. PasswordProvider PasswordProvider implementations are able to produce a password from somewhere. SslConfiguration SSL Configuration SslConfigurationDefaults SslConfigurationException SslConfigurationFactory Creates an SSL configuration from Log4j properties. StoreConfiguration<T> StoreConfigurationException TrustStoreConfiguration Configuration of the TrustStore TrustStoreConfigurationException
osgi,Classes Class Description Activator OSGi BundleActivator. BundleContextSelector ContextSelector for OSGi bundles.
parser,All Classes and InterfacesInterfacesClassesExceptions Class Description JsonLogEventParser Parses the output from JsonLayout layout into instances of LogEvent. LogEventParser Parse the output from a layout into instances of LogEvent. ParseException Thrown when the input cannot be parsed. TextLogEventParser Parses the output from a text based layout into instances of LogEvent. XmlLogEventParser Parses the output from XmlLayout layout into instances of LogEvent. YamlLogEventParser Parses the output from YamlLayout layout into instances of LogEvent.
pattern,"All Classes and InterfacesInterfacesClassesEnumsAnnotation Types Class Description AbstractPatternConverter AbstractPatternConverter is an abstract class that provides the formatting functionality that derived classes need. AbstractStyleNameConverter Style pattern converter. AbstractStyleNameConverter.Black Black style pattern converter. AbstractStyleNameConverter.Blue Blue style pattern converter. AbstractStyleNameConverter.Cyan Cyan style pattern converter. AbstractStyleNameConverter.Green Green style pattern converter. AbstractStyleNameConverter.Magenta Magenta style pattern converter. AbstractStyleNameConverter.Red Red style pattern converter. AbstractStyleNameConverter.White White style pattern converter. AbstractStyleNameConverter.Yellow Yellow style pattern converter. AnsiEscape Converts text into ANSI escape sequences. ArrayPatternConverter PatternConverters implement this interface to accept an array of objects when formatting. ClassNamePatternConverter Formats the class name of the site of the logging request. ConverterKeys Identifies the keys that are associated with a PatternConverter. DatePatternConverter Converts and formats the event's date in a StringBuilder. EncodingPatternConverter Converter that encodes the output from a pattern using a specified format. EndOfBatchPatternConverter Formats the EndOfBatch. EqualsBaseReplacementConverter Equals pattern converter. EqualsIgnoreCaseReplacementConverter Equals ignore case pattern converter. EqualsReplacementConverter Equals pattern converter. ExtendedThrowablePatternConverter Outputs the Throwable portion of the LoggingEvent as a full stack trace unless this converter's option is 'short', where it just outputs the first line of the trace, or if the number of lines to print is explicitly specified. FileDatePatternConverter Formats a date by delegating to DatePatternConverter. FileLocationPatternConverter Returns the event's line location information in a StringBuilder. FormattingInfo Modifies the output of a pattern converter for a specified minimum and maximum width and alignment. FullLocationPatternConverter Format the event's line location information. HighlightConverter Highlight pattern converter. HtmlTextRenderer TODO Renders an input as HTML output. IntegerPatternConverter Formats an integer. JAnsiTextRenderer Renders an input as ANSI escaped output. LevelPatternConverter Returns the event's level in a StringBuilder. LineLocationPatternConverter Returns the event's line location information in a StringBuilder. LineSeparatorPatternConverter Formats a line separator. LiteralPatternConverter Formats a string literal. LogEventPatternConverter LoggingEventPatternConverter is a base class for pattern converters that can format information from instances of LoggingEvent. LoggerFqcnPatternConverter Formats the Logger FQCN. LoggerPatternConverter Formats a logger name. MapPatternConverter Able to handle the contents of the LogEvent's MapMessage and either output the entire contents of the properties in a similar format to the java.util.Hashtable.toString(), or to output the value of a specific key within the Map. MarkerPatternConverter Returns events' full marker string in a StringBuilder. MarkerSimpleNamePatternConverter Appends an event's maker name to a StringBuilder. MaxLengthConverter Max length pattern converter. MdcPatternConverter Able to handle the contents of the LogEvent's MDC and either output the entire contents of the properties in a similar format to the java.util.Hashtable.toString(), or to output the value of a specific key within the property bundle when this pattern converter has the option set. MessagePatternConverter Returns the event's rendered message in a StringBuilder. MethodLocationPatternConverter Returns the event's line location information in a StringBuilder. NameAbbreviator NameAbbreviator generates abbreviated logger and class names. NamePatternConverter Abstract base class for other pattern converters which can return only parts of their name. NanoTimePatternConverter Converts and formats the event's nanoTime in a StringBuilder. NdcPatternConverter Returns the event's NDC in a StringBuilder. NotANumber PatternConverter Interface that all PatternConverters must implement. PatternFormatter PatternParser Most of the work of the PatternLayout class is delegated to the PatternParser class. PlainTextRenderer Renders input unchanged. ProcessIdPatternConverter RegexReplacement Replace tokens in the LogEvent message. RegexReplacementConverter Replacement pattern converter. RelativeTimePatternConverter Returns the relative time in milliseconds since JVM Startup. RepeatPatternConverter Equals pattern converter. RootThrowablePatternConverter Outputs the Throwable portion of the LoggingEvent as a full stack trace unless this converter's option is 'short', where it just outputs the first line of the trace, or if the number of lines to print is explicitly specified. SequenceNumberPatternConverter Formats the event sequence number. StyleConverter Style pattern converter. TextRenderer Renders an input to an output. ThreadIdPatternConverter Formats the event thread ID. ThreadNamePatternConverter Formats the event thread name. ThreadPriorityPatternConverter Formats the event thread priority. ThrowablePatternConverter Outputs the Throwable portion of the LoggingEvent as a full stack trace unless this converter's option is 'short', where it just outputs the first line of the trace, or if the number of lines to print is explicitly specified. UuidPatternConverter Formats the event sequence number. VariablesNotEmptyReplacementConverter VariablesNotEmpty pattern converter."
script,Classes Class Description AbstractScript Container for the language and body of a script. Script Container for the language and body of a script. ScriptFile Container for the language and body of a script file along with the file location. ScriptManager Manages the scripts use by the Configuration. ScriptRef Contains a reference to a script defined elsewhere in the configuration.
selector,All Classes and InterfacesInterfacesClasses Class Description BasicContextSelector Returns either this Thread's context or the default LoggerContext. ClassLoaderContextSelector This ContextSelector chooses a LoggerContext based upon the ClassLoader of the caller. ContextSelector Interface used to locate a LoggerContext. CoreContextSelectors JndiContextSelector This class can be used to define a custom logger repository. NamedContextSelector ContextSelectors that have a name.
time,"All Classes and InterfacesInterfacesClasses Class Description Instant Models a point in time, suitable for event timestamps. MutableInstant An instantaneous point on the time line, used for high-precision log event timestamps. PreciseClock Extension of the Clock interface that is able to provide more accurate time information than milliseconds since the epoch."
tools,"Classes Class Description BasicCommandLineArguments CustomLoggerGenerator Wrapper around Generate.CustomLogger. ExtendedLoggerGenerator Wrapper around Generate.ExtendedLogger. Generate Generates source code for custom or extended logger wrappers. Generate.CustomLogger Generates source code for custom logger wrappers that only provide convenience methods for the specified custom levels, not for the standard built-in levels. Generate.ExtendedLogger Generates source code for extended logger wrappers that provide convenience methods for the specified custom levels, and by extending org.apache.logging.log4j.spi.ExtendedLoggerWrapper, inherit the convenience methods for the built-in levels provided by the Logger interface."
util,Related Packages Package Description org.apache.logging.log4j.core Implementation of Log4j 2. org.apache.logging.log4j.core.util.datetime Log4j 2 date formatting classes.
util,"All Classes and InterfacesInterfacesClassesEnums Class Description AbstractWatcher Watcher for configuration files. AbstractWatcher.ReconfigurationRunnable Helper class for triggering a reconfiguration in a background thread. ArrayUtils Copied from Apache Commons Lang (including the @since tags.) Assert Utility class providing common validation logic. AuthorizationProvider Interface to be implemented to add an Authorization header to an HTTP request. BasicAuthorizationProvider Provides the Basic Authorization header to a request. Booleans Boolean helpers. Builder<T> A type of builder that can be used to configure and create a instances using a Java DSL instead of through a configuration file. CachedClock Implementation of the Clock interface that tracks the time in a private long field that is updated by a background thread once every millisecond. Cancellable Interface to cancel a Runnable callback. Clock Provides the time stamp used in log events. ClockFactory Factory for Clock objects. Closer Closes resources. CloseShieldOutputStream A delegating OutputStream that does not close its delegate. CloseShieldWriter CoarseCachedClock This Clock implementation is similar to CachedClock. Constants Log4j Constants. ContextDataProvider Source of context data to be added to each log event. CronExpression Provides a parser and evaluator for unix-like cron expressions. CyclicBuffer<T> A bounded buffer containing elements of type T. DefaultShutdownCallbackRegistry ShutdownRegistrationStrategy that simply uses Runtime.addShutdownHook(Thread). DummyNanoClock Implementation of the NanoClock interface that always returns a fixed value. ExecutorServices ExtensionLanguageMapping FileUtils File utilities. FileWatcher Watches for changes in a File and performs an action when the file is modified. Integers Helps deal with integers. IOUtils Copied from Apache Commons IO revision 1686747. JndiCloser Helper class for closing JNDI resources. JsonUtils This class is borrowed from Jackson. KeyValuePair Key/Value pair configuration item. KeyValuePair.Builder Loader Load resources (or images) from various sources. Log4jThread Prefixes thread names with ""Log4j2-"". Log4jThreadFactory Creates Log4jThreads. NameUtil NanoClock Provides the high-resolution time stamp used in log events. NetUtils Networking-related convenience methods. NullOutputStream Writes all data to the famous /dev/null. ObjectArrayIterator<E> An Iterator over an array of objects. OptionConverter A convenience class to convert property values to specific types. PasswordDecryptor Decrypt passwords. Patterns Pattern strings used throughout Log4j. ReflectionUtil Utility class for performing common reflective operations. SecretKeyProvider Factory class to provide a SecretKey instance. ShutdownCallbackRegistry Registry used for Runnable shutdown callback instances. Source Represents the source for the logging configuration as an immutable object. StringBuilderWriter Writer implementation that outputs to a StringBuilder. StringEncoder Encodes Strings to bytes. SystemClock Implementation of the Clock interface that returns the system time. SystemMillisClock Implementation of the Clock interface that returns the system time in millisecond granularity. SystemNanoClock Implementation of the NanoClock interface that returns the system nano time. Throwables Helps with Throwable objects. Transform Utility class for transforming strings. TypeUtil Utility class for working with Java Types and derivatives. UuidUtil Generates a unique ID. Watcher Watches for changes in a Source and performs an action when it is modified. WatcherFactory Creates Watchers of various types. WatchEventService WatchManager Manages FileWatchers. WrappedFileWatcher"
util,Related Packages Package Description org.apache.logging.log4j.core.util Log4j 2 helper classes.
util,"All Classes and InterfacesInterfacesClassesEnums Class Description DatePrinter DatePrinter is the ""missing"" interface for the format methods of DateFormat. FastDateFormat FastDateFormat is a fast and thread-safe version of SimpleDateFormat. FastDatePrinter FastDatePrinter is a fast and thread-safe version of SimpleDateFormat. FixedDateFormat Custom time formatter that trades flexibility for performance. FixedDateFormat.FixedFormat Enumeration over the supported date/time format patterns. FixedDateFormat.FixedTimeZoneFormat Fixed time zone formats. Format The basic methods for performing date formatting."
