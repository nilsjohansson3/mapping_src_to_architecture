Module,Text
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class AbstractAppender.Builder<B extends AbstractAppender.Builder<B>> Subclasses can extend this abstract Builder. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,"Constructor Summary Constructors Modifier Constructor Description protected AbstractAppender(Stringname, Filterfilter, Layout<? extends Serializable>layout) Deprecated. Use AbstractAppender(String, Filter, Layout, boolean, Property[]). protected AbstractAppender(Stringname, Filterfilter, Layout<? extends Serializable>layout, booleanignoreExceptions) Deprecated. Use AbstractAppender(String, Filter, Layout, boolean, Property[]) protected AbstractAppender(Stringname, Filterfilter, Layout<? extends Serializable>layout, booleanignoreExceptions, Property[]properties) Constructor."
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class AbstractFileAppender.Builder<B extends AbstractFileAppender.Builder<B>> Builds FileAppender instances. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Modifier Constructor Description protected AbstractFactoryData(Configurationconfiguration) Constructs the base factory data.
appender,"This class implements AutoCloseable mostly to allow unit tests to be written safely and succinctly. While managers do need to allocate resources (usually on construction) and then free these resources, a manager is longer lived than other auto-closeable objects like streams. None the less, making a manager AutoCloseable forces readers to be aware of the pattern: allocate resources on construction and call close() at some point."
appender,Nested Class Summary Nested Classes Modifier and Type Class Description protected static class AbstractManager.AbstractFactoryData Implementations should extend this class for passing data between the getManager method and the manager factory class.
appender,"Constructor Summary Constructors Modifier Constructor Description protected AbstractManager(LoggerContextloggerContext, Stringname)"
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class AbstractOutputStreamAppender.Builder<B extends AbstractOutputStreamAppender.Builder<B>> Subclasses can extend this abstract Builder. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,"Constructor Summary Constructors Modifier Constructor Description protected AbstractOutputStreamAppender(Stringname, Layout<? extends Serializable>layout, Filterfilter, booleanignoreExceptions, booleanimmediateFlush, Mmanager) Deprecated. Use AbstractOutputStreamAppender(String, Layout, Filter, boolean, boolean, Property[], OutputStreamManager) protected AbstractOutputStreamAppender(Stringname, Layout<? extends Serializable>layout, Filterfilter, booleanignoreExceptions, booleanimmediateFlush, Property[]properties, Mmanager) Instantiates a WriterAppender and set the output destination to a new OutputStreamWriter initialized with os as its OutputStream."
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractAppender AbstractAppender.Builder<B extends AbstractAppender.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,"Constructor Summary Constructors Modifier Constructor Description protected AbstractWriterAppender(Stringname, StringLayoutlayout, Filterfilter, booleanignoreExceptions, booleanimmediateFlush, Mmanager) Deprecated. Use AbstractWriterAppender(String, StringLayout, Filter, boolean, boolean, Property[], WriterManager). protected AbstractWriterAppender(Stringname, StringLayoutlayout, Filterfilter, booleanignoreExceptions, booleanimmediateFlush, Property[]properties, Mmanager) Instantiates."
appender,"Also note that appenders must provide a way to suppress exceptions when the user desires and abide by that instruction. See Appender.ignoreExceptions(), which is the standard way to do this."
appender,Serialized Form
appender,"Constructor Summary Constructors Constructor Description AppenderLoggingException(Stringmessage) Constructs an exception with a message. AppenderLoggingException(Stringformat, Object...args) Constructs an exception with a message. AppenderLoggingException(Stringmessage, Throwablecause) Constructs an exception with a message and underlying cause. AppenderLoggingException(Throwablecause) Constructs an exception with an underlying cause. AppenderLoggingException(Throwablecause, Stringformat, Object...args) Constructs an exception with a message."
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class AppenderSet.Builder
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class AsyncAppender.Builder<B extends AsyncAppender.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Constructor Description ConfigurationFactoryData(Configurationconfiguration)
appender,Constructor Summary Constructors Constructor Description Builder()
appender,"TODO Accessing System.out or System.err as a byte stream instead of a writer bypasses the JVM's knowledge of the proper encoding. (RG) Encoding is handled within the Layout. Typically, a Layout will generate a String and then call getBytes which may use a configured encoding or the system default. OTOH, a Writer cannot print byte streams."
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class ConsoleAppender.Builder<B extends ConsoleAppender.Builder<B>> Builds ConsoleAppender instances. static enum ConsoleAppender.Target Enumeration of console destinations. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractAppender AbstractAppender.Builder<B extends AbstractAppender.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,"Constructor Summary Constructors Constructor Description CountingNoOpAppender(Stringname, Layout<?>layout)"
appender,It avoids flooding the StatusLogger by allowing either the first 3 errors or errors once every 5 minutes.
appender,Constructor Summary Constructors Constructor Description DefaultErrorHandler(Appenderappender)
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractAppender AbstractAppender.Builder<B extends AbstractAppender.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class FileAppender.Builder<B extends FileAppender.Builder<B>> Builds FileAppender instances. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
appender,"Constructor Summary Constructors Modifier Constructor Description protected FileManager(StringfileName, OutputStreamos, booleanappend, booleanlocking, StringadvertiseURI, Layout<? extends Serializable>layout, booleanwriteHeader, ByteBufferbuffer) Deprecated. protected FileManager(StringfileName, OutputStreamos, booleanappend, booleanlocking, StringadvertiseURI, Layout<? extends Serializable>layout, intbufferSize, booleanwriteHeader) Deprecated. protected FileManager(LoggerContextloggerContext, StringfileName, OutputStreamos, booleanappend, booleanlocking, booleancreateOnDemand, StringadvertiseURI, Layout<? extends Serializable>layout, booleanwriteHeader, ByteBufferbuffer) Deprecated. protected FileManager(LoggerContextloggerContext, StringfileName, OutputStreamos, booleanappend, booleanlocking, booleancreateOnDemand, StringadvertiseURI, Layout<? extends Serializable>layout, StringfilePermissions, StringfileOwner, StringfileGroup, booleanwriteHeader, ByteBufferbuffer)"
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class HttpAppender.Builder<B extends HttpAppender.Builder<B>> Builds HttpAppender instances. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
appender,"Constructor Summary Constructors Modifier Constructor Description protected HttpManager(Configurationconfiguration, LoggerContextloggerContext, Stringname)"
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
appender,"Constructor Summary Constructors Constructor Description HttpURLConnectionManager(Configurationconfiguration, LoggerContextloggerContext, Stringname, URLurl, Stringmethod, intconnectTimeoutMillis, intreadTimeoutMillis, Property[]headers, SslConfigurationsslConfiguration, booleanverifyHostname)"
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class MemoryMappedFileAppender.Builder<B extends MemoryMappedFileAppender.Builder<B>> Builds RandomAccessFileAppender instances. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Things to Know about Memory Mapped File in Java
appender,JDK-6893654
appender,JDK-4724038
appender,Memory-Mapped MappedByteBuffer or Direct ByteBuffer for DB Implementation?
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
appender,"Constructor Summary Constructors Modifier Constructor Description protected MemoryMappedFileManager(RandomAccessFilefile, StringfileName, OutputStreamos, booleanimmediateFlush, longposition, intregionLength, StringadvertiseURI, Layout<? extends Serializable>layout, booleanwriteHeader)"
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractAppender AbstractAppender.Builder<B extends AbstractAppender.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Character encoding is handled within the Layout.
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class OutputStreamAppender.Builder<B extends OutputStreamAppender.Builder<B>> Builds OutputStreamAppender instances. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
appender,"Constructor Summary Constructors Modifier Constructor Description protected OutputStreamManager(OutputStreamos, StringstreamName, Layout<?>layout, booleanwriteHeader) protected OutputStreamManager(OutputStreamos, StringstreamName, Layout<?>layout, booleanwriteHeader, intbufferSize) protected OutputStreamManager(OutputStreamos, StringstreamName, Layout<?>layout, booleanwriteHeader, ByteBufferbyteBuffer) Deprecated. protected OutputStreamManager(LoggerContextloggerContext, OutputStreamos, StringstreamName, booleancreateOnDemand, Layout<? extends Serializable>layout, booleanwriteHeader, ByteBufferbyteBuffer)"
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class RandomAccessFileAppender.Builder<B extends RandomAccessFileAppender.Builder<B>> Builds RandomAccessFileAppender instances. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
appender,"Constructor Summary Constructors Modifier Constructor Description protected RandomAccessFileManager(LoggerContextloggerContext, RandomAccessFilefile, StringfileName, OutputStreamos, intbufferSize, StringadvertiseURI, Layout<? extends Serializable>layout, booleanwriteHeader)"
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class RollingFileAppender.Builder<B extends RollingFileAppender.Builder<B>> Builds FileAppender instances. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class RollingRandomAccessFileAppender.Builder<B extends RollingRandomAccessFileAppender.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static final class ScriptAppenderSelector.Builder Builds an appender. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Constructor Description Builder()
appender,"The number of logging events delivered in this e-mail depend on the value of BufferSize option. The SmtpAppender keeps only the last BufferSize logging events in its cyclic buffer. This keeps memory requirements at a reasonable level while still delivering useful application context. By default, an email message will formatted as HTML. This can be modified by setting a layout for the appender. By default, an email message will be sent when an ERROR or higher severity message is appended. This can be modified by setting a filter for the appender."
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class SmtpAppender.Builder Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,"Removed deprecated ""delayMillis"", use ""reconnectionDelayMillis""."
appender,"Removed deprecated ""reconnectionDelay"", use ""reconnectionDelayMillis""."
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class SocketAppender.AbstractBuilder<B extends SocketAppender.AbstractBuilder<B>> Subclasses can extend this abstract Builder. static class SocketAppender.Builder Builds a SocketAppender. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,"Constructor Summary Constructors Modifier Constructor Description protected SocketAppender(Stringname, Layout<? extends Serializable>layout, Filterfilter, AbstractSocketManagermanager, booleanignoreExceptions, booleanimmediateFlush, Advertiseradvertiser) Deprecated. SocketAppender(String, Layout, Filter, AbstractSocketManager, boolean, boolean, Advertiser, Property[]). protected SocketAppender(Stringname, Layout<? extends Serializable>layout, Filterfilter, AbstractSocketManagermanager, booleanignoreExceptions, booleanimmediateFlush, Advertiseradvertiser, Property[]properties)"
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class SyslogAppender.Builder<B extends SyslogAppender.Builder<B>> Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.SocketAppender SocketAppender.AbstractBuilder<B extends SocketAppender.AbstractBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,"Constructor Summary Constructors Modifier Constructor Description protected SyslogAppender(Stringname, Layout<? extends Serializable>layout, Filterfilter, booleanignoreExceptions, booleanimmediateFlush, AbstractSocketManagermanager, Advertiseradvertiser) Deprecated. Use SyslogAppender(String, Layout, Filter, boolean, boolean, AbstractSocketManager, Advertiser, Property[]). protected SyslogAppender(Stringname, Layout<? extends Serializable>layout, Filterfilter, booleanignoreExceptions, booleanimmediateFlush, AbstractSocketManagermanager, Advertiseradvertiser, Property[]properties)"
appender,RFC 5425
appender,Constructor Summary Constructors Constructor Description TlsSyslogFrame(Stringmessage)
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class WriterAppender.Builder<B extends WriterAppender.Builder<B>> Builds WriterAppender instances. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
appender,"Constructor Summary Constructors Constructor Description WriterManager(Writerwriter, StringstreamName, StringLayoutlayout, booleanwriteHeader)"
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class AbstractDatabaseAppender.Builder<B extends AbstractDatabaseAppender.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,"Constructor Summary Constructors Modifier Constructor Description protected AbstractDatabaseAppender(Stringname, Filterfilter, booleanignoreExceptions, Tmanager) Deprecated. Use AbstractDatabaseAppender(String, Filter, Layout, boolean, Property[], AbstractDatabaseManager). protected AbstractDatabaseAppender(Stringname, Filterfilter, Layout<? extends Serializable>layout, booleanignoreExceptions, Property[]properties, Tmanager) Instantiates the base appender. protected AbstractDatabaseAppender(Stringname, Filterfilter, Layout<? extends Serializable>layout, booleanignoreExceptions, Tmanager) Deprecated. Use AbstractDatabaseAppender(String, Filter, Layout, boolean, Property[], AbstractDatabaseManager)"
appender,"Constructor Summary Constructors Modifier Constructor Description protected AbstractFactoryData(intbufferSize, Layout<? extends Serializable>layout) Deprecated. Use AbstractFactoryData(Configuration, int, Layout). protected AbstractFactoryData(Configurationconfiguration, intbufferSize, Layout<? extends Serializable>layout) Constructs the base factory data."
appender,Nested Class Summary Nested Classes Modifier and Type Class Description protected static class AbstractDatabaseManager.AbstractFactoryData Implementations should extend this class for passing data between the getManager method and the manager factory class.
appender,"Constructor Summary Constructors Modifier Constructor Description protected AbstractDatabaseManager(Stringname, intbufferSize) Deprecated. Use AbstractDatabaseManager(String, int, Layout, Configuration). protected AbstractDatabaseManager(Stringname, intbufferSize, Layout<? extends Serializable>layout) Deprecated. Use AbstractDatabaseManager(String, int, Layout, Configuration). protected AbstractDatabaseManager(Stringname, intbufferSize, Layout<? extends Serializable>layout, Configurationconfiguration) Constructs the base manager."
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class ColumnMapping.Builder Builder for ColumnMapping.
appender,Serialized Form
appender,"Constructor Summary Constructors Constructor Description DbAppenderLoggingException(Stringformat, Object...args) Constructs an exception with a message. DbAppenderLoggingException(Stringmessage, Throwablecause) Constructs an exception with a message and underlying cause. DbAppenderLoggingException(Throwablecause, Stringformat, Object...args) Constructs an exception with a message."
appender,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Constructor Description AbstractConnectionSource()
appender,Constructor Summary Constructors Constructor Description Builder()
appender,This plugin does not provide any connection pooling unless it is available through the connection string and driver itself. This handy to get you off the ground without having to deal with JNDI.
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class AbstractDriverManagerConnectionSource.Builder<B extends AbstractDriverManagerConnectionSource.Builder<B>> Builds DriverManagerConnectionSource instances. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,"Constructor Summary Constructors Constructor Description AbstractDriverManagerConnectionSource(StringdriverClassName, StringconnectionString, StringactualConnectionString, char[]userName, char[]password, Property[]properties)"
appender,Constructor Summary Constructors Constructor Description Builder()
appender,ColumnMapping
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class ColumnConfig.Builder
appender,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Constructor Description Builder()
appender,This plugin does not provide any connection pooling unless it is available through the connection string and driver itself. This handy to get you off the ground without having to deal with JNDI.
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class DriverManagerConnectionSource.Builder<B extends DriverManagerConnectionSource.Builder<B>> Builds DriverManagerConnectionSource instances. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,"Constructor Summary Constructors Constructor Description DriverManagerConnectionSource(StringdriverClassName, StringconnectionString, StringactualConnectionString, char[]userName, char[]password, Property[]properties)"
appender,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Constructor Description Builder()
appender,ColumnConfig
appender,ColumnMapping
appender,ConnectionSource
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class JdbcAppender.Builder<B extends JdbcAppender.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.db.AbstractDatabaseManager AbstractDatabaseManager.AbstractFactoryData
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class JmsAppender.Builder<B extends JmsAppender.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,"Constructor Summary Constructors Modifier Constructor Description protected JmsAppender(Stringname, Filterfilter, Layout<? extends Serializable>layout, booleanignoreExceptions, JmsManagermanager) Deprecated. Use JmsAppender(String, Filter, Layout, boolean, Property[], JmsManager). protected JmsAppender(Stringname, Filterfilter, Layout<? extends Serializable>layout, booleanignoreExceptions, Property[]properties, JmsManagermanager) Constructs a new instance."
appender,"JMS connection and session manager. Can be used to access MessageProducer, MessageConsumer, and Message objects involving a configured ConnectionFactory and Destination."
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class JmsManager.JmsManagerConfiguration Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
appender,Requires the JeroMQ jar (LGPL as of 0.3.5)
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractAppender AbstractAppender.Builder<B extends AbstractAppender.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
appender,Constructor Summary Constructors Constructor Description DefaultKafkaProducerFactory()
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class KafkaAppender.Builder<B extends KafkaAppender.Builder<B>> Builds KafkaAppender instances. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
appender,"Constructor Summary Constructors Constructor Description KafkaManager(LoggerContextloggerContext, Stringname, Stringtopic, booleansyncSend, Property[]properties, Stringkey)"
appender,Constructor Summary Constructors Constructor Description AbstractNoSqlConnection()
appender,Constructor Summary Constructors Constructor Description DefaultNoSqlObject() Constructs a new instance.
appender,Constructor Summary Constructors Constructor Description Builder()
appender,"For examples on how to write your own NoSQL provider, see the simple source code for the MongoDB and CouchDB providers."
appender,NoSqlObject
appender,NoSqlConnection
appender,NoSqlProvider
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class NoSqlAppender.Builder<B extends NoSqlAppender.Builder<B>> Builds ConsoleAppender instances. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.db.AbstractDatabaseManager AbstractDatabaseManager.AbstractFactoryData
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static enum MapRewritePolicy.Mode An enumeration to identify whether keys not in the MapMessage should be added or whether only existing keys should be updated.
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractAppender AbstractAppender.Builder<B extends AbstractAppender.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Modifier Constructor Description protected AbstractRolloverStrategy(StrSubstitutorstrSubstitutor)
appender,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Constructor Description AbstractTriggeringPolicy()
appender,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Constructor Description Builder()
appender,The DefaultRolloverStrategy is a combination of a time-based policy and a fixed-window policy. When the file name pattern contains a date format then the rollover time interval will be used to calculate the time to use in the file pattern. When the file pattern contains an integer replacement token one of the counting techniques will be used.
appender,"When the ascending attribute is set to true (the default) then the counter will be incremented and the current log file will be renamed to include the counter value. If the counter hits the maximum value then the oldest file, which will have the smallest counter, will be deleted, all other files will be renamed to have their counter decremented and then the current file will be renamed to have the maximum counter value. Note that with this counting strategy specifying a large maximum value may entirely avoid renaming files."
appender,"When the ascending attribute is false, then the ""normal"" fixed-window strategy will be used."
appender,"Let max and min represent the values of respectively the MaxIndex and MinIndex options. Let ""foo.log"" be the value of the ActiveFile option and ""foo.%i.log"" the value of FileNamePattern. Then, when rolling over, the file foo.max.log will be deleted, the file foo.max-1.log will be renamed as foo.max.log, the file foo.max-2.log renamed as foo.max-1.log, and so on, the file foo.min+1.log renamed as foo.min+2.log. Lastly, the active file foo.log will be renamed as foo.min.log and a new active file name foo.log will be created."
appender,"Given that this rollover algorithm requires as many file renaming operations as the window size, large window sizes are discouraged."
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class DefaultRolloverStrategy.Builder Builds DefaultRolloverStrategy instances.
appender,"Constructor Summary Constructors Modifier Constructor Description protected DefaultRolloverStrategy(intminIndex, intmaxIndex, booleanuseMax, intcompressionLevel, StrSubstitutorstrSubstitutor, Action[]customActions, booleanstopCustomActionsOnError) Deprecated. Since 2.9 Added tempCompressedFilePatternString parameter protected DefaultRolloverStrategy(intminIndex, intmaxIndex, booleanuseMax, intcompressionLevel, StrSubstitutorstrSubstitutor, Action[]customActions, booleanstopCustomActionsOnError, StringtempCompressedFilePatternString) Constructs a new instance."
appender,Constructor Summary Constructors Constructor Description Builder()
appender,"The DirectWriteRolloverStrategy uses similar logic as DefaultRolloverStrategy to determine the file name based on the file pattern, however the DirectWriteRolloverStrategy writes directly to a file and does not rename it during rollover, except if it is compressed, in which case it will add the appropriate file extension."
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class DirectWriteRolloverStrategy.Builder Builds DirectWriteRolloverStrategy instances.
appender,"Constructor Summary Constructors Modifier Constructor Description protected DirectWriteRolloverStrategy(intmaxFiles, intcompressionLevel, StrSubstitutorstrSubstitutor, Action[]customActions, booleanstopCustomActionsOnError) Deprecated. Since 2.9 Added tempCompressedFilePatternString parameter protected DirectWriteRolloverStrategy(intmaxFiles, intcompressionLevel, StrSubstitutorstrSubstitutor, Action[]customActions, booleanstopCustomActionsOnError, StringtempCompressedFilePatternString) Constructs a new instance."
appender,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Constructor Description NoOpTriggeringPolicy()
appender,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,"Constructor Summary Constructors Constructor Description PatternProcessor(Stringpattern) Constructor. PatternProcessor(Stringpattern, PatternProcessorcopy) Copy constructor with another pattern as source."
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
appender,"Constructor Summary Constructors Modifier Constructor Description protected RollingFileManager(StringfileName, Stringpattern, OutputStreamos, booleanappend, longsize, longinitialTime, TriggeringPolicytriggeringPolicy, RolloverStrategyrolloverStrategy, StringadvertiseURI, Layout<? extends Serializable>layout, booleanwriteHeader, ByteBufferbuffer) Deprecated. protected RollingFileManager(StringfileName, Stringpattern, OutputStreamos, booleanappend, longsize, longinitialTime, TriggeringPolicytriggeringPolicy, RolloverStrategyrolloverStrategy, StringadvertiseURI, Layout<? extends Serializable>layout, intbufferSize, booleanwriteHeader) Deprecated. protected RollingFileManager(LoggerContextloggerContext, StringfileName, Stringpattern, OutputStreamos, booleanappend, booleancreateOnDemand, longsize, longinitialTime, TriggeringPolicytriggeringPolicy, RolloverStrategyrolloverStrategy, StringadvertiseURI, Layout<? extends Serializable>layout, booleanwriteHeader, ByteBufferbuffer) Deprecated. protected RollingFileManager(LoggerContextloggerContext, StringfileName, Stringpattern, OutputStreamos, booleanappend, booleancreateOnDemand, longsize, longinitialTime, TriggeringPolicytriggeringPolicy, RolloverStrategyrolloverStrategy, StringadvertiseURI, Layout<? extends Serializable>layout, StringfilePermissions, StringfileOwner, StringfileGroup, booleanwriteHeader, ByteBufferbuffer)"
appender,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
appender,"Constructor Summary Constructors Constructor Description RollingRandomAccessFileManager(LoggerContextloggerContext, RandomAccessFileraf, StringfileName, Stringpattern, OutputStreamos, booleanappend, booleanimmediateFlush, intbufferSize, longsize, longtime, TriggeringPolicypolicy, RolloverStrategystrategy, StringadvertiseURI, Layout<? extends Serializable>layout, booleanwriteHeader) Deprecated. RollingRandomAccessFileManager(LoggerContextloggerContext, RandomAccessFileraf, StringfileName, Stringpattern, OutputStreamos, booleanappend, booleanimmediateFlush, intbufferSize, longsize, longinitialTime, TriggeringPolicypolicy, RolloverStrategystrategy, StringadvertiseURI, Layout<? extends Serializable>layout, StringfilePermissions, StringfileOwner, StringfileGroup, booleanwriteHeader)"
appender,"Constructor Summary Constructors Constructor Description RolloverDescriptionImpl(StringactiveFileName, booleanappend, Actionsynchronous, Actionasynchronous) Create new instance."
appender,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Modifier Constructor Description protected SizeBasedTriggeringPolicy() Constructs a new instance. protected SizeBasedTriggeringPolicy(longmaxFileSize) Constructs a new instance.
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class TimeBasedTriggeringPolicy.Builder Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,Constructor Summary Constructors Modifier Constructor Description protected AbstractAction() Constructor.
appender,"Constructor Summary Constructors Modifier Constructor Description protected AbstractPathAction(StringbasePath, booleanfollowSymbolicLinks, intmaxDepth, PathCondition[]pathFilters, StrSubstitutorsubst) Creates a new AbstractPathAction that starts scanning for files to process from the specified base path."
appender,"Constructor Summary Constructors Constructor Description CommonsCompressAction(Stringname, Filesource, Filedestination, booleandeleteSource) Creates new instance of Bzip2CompressAction."
appender,"Constructor Summary Constructors Constructor Description CompositeAction(List<Action>actions, booleanstopOnError) Construct a new composite action."
appender,"Constructor Summary Constructors Constructor Description DeletingVisitor(PathbasePath, List<? extends PathCondition>pathConditions, booleantestMode) Constructs a new DeletingVisitor."
appender,"Similarly to the java.time.Duration class, this class does not support year or month sections in the format. This implementation does not support fractions or negative values."
appender,parse(CharSequence)
appender,Serialized Form
appender,"Constructor Summary Constructors Constructor Description FileRenameAction(Filesrc, Filedst, booleanrenameEmptyFiles) Creates an FileRenameAction."
appender,"Constructor Summary Constructors Constructor Description GzCompressAction(Filesource, Filedestination, booleandeleteSource) Deprecated. Prefer GzCompressAction(File, File, boolean, int). GzCompressAction(Filesource, Filedestination, booleandeleteSource, intcompressionLevel) Create new instance of GzCompressAction."
appender,The regular expression is a pattern as defined by the Pattern class. A glob is a simplified pattern expression described in FileSystem.getPathMatcher(String).
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static final class IfLastModified.Builder
appender,Serialized Form
appender,Constructor Summary Constructors Constructor Description PathSortByModificationTime(booleanrecentFirst) Constructs a new SortByModificationTime sorter.
appender,"Constructor Summary Constructors Constructor Description PathWithAttributes(Pathpath, BasicFileAttributesattributes)"
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class PosixViewAttributeAction.Builder Builder for the POSIX view attribute action.
appender,"createCondition(AbstractScript, Configuration)"
appender,"Constructor Summary Constructors Constructor Description ScriptCondition(AbstractScriptscript, Configurationconfiguration) Constructs a new ScriptCondition."
appender,Constructor Summary Constructors Constructor Description SortingVisitor(PathSortersorter) Constructs a new SortingVisitor.
appender,"Constructor Summary Constructors Constructor Description ZipCompressAction(Filesource, Filedestination, booleandeleteSource, intlevel) Creates new instance of GzCompressAction."
appender,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
appender,"Constructor Summary Constructors Constructor Description IdlePurgePolicy(longtimeToLive, longcheckInterval, ConfigurationSchedulerscheduler)"
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class Routes.Builder
appender,Constructor Summary Constructors Constructor Description Builder()
appender,Nested Class Summary Nested Classes Modifier and Type Class Description static class RoutingAppender.Builder<B extends RoutingAppender.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
async,Constructor Summary Constructors Constructor Description ArrayBlockingQueueFactory()
async,"To use AsyncLogger, specify the System property -DLog4jContextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector before you obtain a Logger, and all Loggers returned by LogManager.getLogger will be AsyncLoggers. Note that for performance reasons, this logger does not include source location by default. You need to specify includeLocation=""true"" in the configuration or any %class, %location or %line conversion patterns in your log4j.xml configuration will produce either a ""?"" character or no output at all. For best performance, use AsyncLogger with the RandomAccessFileAppender or RollingRandomAccessFileAppender, with immediateFlush=false. These appenders have built-in support for the batching mechanism used by the Disruptor library, and they will flush to disk at the end of each batch. This means that even with immediateFlush=false, there will never be any items left in the buffer; all log events will all be written to disk in a very efficient manner."
async,"Note that for performance reasons, this logger does not include source location by default. You need to specify includeLocation=""true"" in the configuration or any %class, %location or %line conversion patterns in your log4j.xml configuration will produce either a ""?"" character or no output at all. For best performance, use AsyncLogger with the RandomAccessFileAppender or RollingRandomAccessFileAppender, with immediateFlush=false. These appenders have built-in support for the batching mechanism used by the Disruptor library, and they will flush to disk at the end of each batch. This means that even with immediateFlush=false, there will never be any items left in the buffer; all log events will all be written to disk in a very efficient manner."
async,"For best performance, use AsyncLogger with the RandomAccessFileAppender or RollingRandomAccessFileAppender, with immediateFlush=false. These appenders have built-in support for the batching mechanism used by the Disruptor library, and they will flush to disk at the end of each batch. This means that even with immediateFlush=false, there will never be any items left in the buffer; all log events will all be written to disk in a very efficient manner."
async,Serialized Form
async,"Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.Logger Logger.LoggerProxy, Logger.PrivateConfig"
async,"Constructor Summary Constructors Constructor Description AsyncLogger(LoggerContextcontext, Stringname, MessageFactorymessageFactory, org.apache.logging.log4j.core.async.AsyncLoggerDisruptorloggerDisruptor) Constructs an AsyncLogger with the specified context, name and message factory."
async,Constructor Summary Constructors Constructor Description Builder()
async,"AsyncLoggerConfig is a logger designed for high throughput and low latency logging. It does not perform any I/O in the calling (application) thread, but instead hands off the work to another thread as soon as possible. The actual logging is performed in the background thread. It uses LMAX Disruptor for inter-thread communication. To use AsyncLoggerConfig, specify <asyncLogger> or <asyncRoot> in configuration. Note that for performance reasons, this logger does not include source location by default. You need to specify includeLocation=""true"" in the configuration or any %class, %location or %line conversion patterns in your log4j.xml configuration will produce either a ""?"" character or no output at all. For best performance, use AsyncLoggerConfig with the RandomAccessFileAppender or RollingRandomAccessFileAppender, with immediateFlush=false. These appenders have built-in support for the batching mechanism used by the Disruptor library, and they will flush to disk at the end of each batch. This means that even with immediateFlush=false, there will never be any items left in the buffer; all log events will all be written to disk in a very efficient manner."
async,"To use AsyncLoggerConfig, specify <asyncLogger> or <asyncRoot> in configuration. Note that for performance reasons, this logger does not include source location by default. You need to specify includeLocation=""true"" in the configuration or any %class, %location or %line conversion patterns in your log4j.xml configuration will produce either a ""?"" character or no output at all. For best performance, use AsyncLoggerConfig with the RandomAccessFileAppender or RollingRandomAccessFileAppender, with immediateFlush=false. These appenders have built-in support for the batching mechanism used by the Disruptor library, and they will flush to disk at the end of each batch. This means that even with immediateFlush=false, there will never be any items left in the buffer; all log events will all be written to disk in a very efficient manner."
async,"Note that for performance reasons, this logger does not include source location by default. You need to specify includeLocation=""true"" in the configuration or any %class, %location or %line conversion patterns in your log4j.xml configuration will produce either a ""?"" character or no output at all. For best performance, use AsyncLoggerConfig with the RandomAccessFileAppender or RollingRandomAccessFileAppender, with immediateFlush=false. These appenders have built-in support for the batching mechanism used by the Disruptor library, and they will flush to disk at the end of each batch. This means that even with immediateFlush=false, there will never be any items left in the buffer; all log events will all be written to disk in a very efficient manner."
async,"For best performance, use AsyncLoggerConfig with the RandomAccessFileAppender or RollingRandomAccessFileAppender, with immediateFlush=false. These appenders have built-in support for the batching mechanism used by the Disruptor library, and they will flush to disk at the end of each batch. This means that even with immediateFlush=false, there will never be any items left in the buffer; all log events will all be written to disk in a very efficient manner."
async,"Nested Class Summary Nested Classes Modifier and Type Class Description static class AsyncLoggerConfig.Builder<B extends AsyncLoggerConfig.Builder<B>> static class AsyncLoggerConfig.RootLogger An asynchronous root Logger. Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.config.LoggerConfig LoggerConfig.LevelAndRefs, LoggerConfig.LoggerConfigPredicate Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State"
async,"Constructor Summary Constructors Modifier Constructor Description protected AsyncLoggerConfig(Stringname, List<AppenderRef>appenders, Filterfilter, Levellevel, booleanadditive, Property[]properties, Configurationconfig, booleanincludeLocation)"
async,Constructor Summary Constructors Constructor Description Builder()
async,"Nested Class Summary Nested Classes Modifier and Type Class Description static class AsyncLoggerConfig.RootLogger.Builder<B extends AsyncLoggerConfig.RootLogger.Builder<B>> Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.config.LoggerConfig LoggerConfig.LevelAndRefs, LoggerConfig.LoggerConfigPredicate, LoggerConfig.RootLogger Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State"
async,Constructor Summary Constructors Constructor Description RootLogger()
async,Constructor Summary Constructors Constructor Description AsyncLoggerConfigDefaultExceptionHandler()
async,"AsyncLoggerConfig is a plugin, and will be loaded even if users do not configure any <asyncLogger> or <asyncRoot> elements in the configuration. If AsyncLoggerConfig has inner classes that extend or implement classes from the Disruptor library, a NoClassDefFoundError is thrown if the Disruptor jar is not in the classpath when the PluginManager loads the AsyncLoggerConfig plugin from the pre-defined plugins definition file. This class serves to make the dependency on the Disruptor optional, so that these classes are only loaded when the AsyncLoggerConfig is actually used."
async,"This class serves to make the dependency on the Disruptor optional, so that these classes are only loaded when the AsyncLoggerConfig is actually used."
async,Nested Class Summary Nested Classes Modifier and Type Class Description static class AsyncLoggerConfigDisruptor.Log4jEventWrapper RingBuffer events contain all information necessary to perform the work in a separate thread. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
async,Constructor Summary Constructors Constructor Description AsyncLoggerConfigDisruptor(AsyncWaitStrategyFactoryasyncWaitStrategyFactory)
async,Constructor Summary Constructors Constructor Description Log4jEventWrapper() Log4jEventWrapper(MutableLogEventmutableLogEvent)
async,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
async,"Constructor Summary Constructors Constructor Description AsyncLoggerContext(Stringname) AsyncLoggerContext(Stringname, ObjectexternalContext) AsyncLoggerContext(Stringname, ObjectexternalContext, StringconfigLocn) AsyncLoggerContext(Stringname, ObjectexternalContext, URIconfigLocn)"
async,"As of version 2.5, this class extends ClassLoaderContextSelector for better web app support."
async,Constructor Summary Constructors Constructor Description AsyncLoggerContextSelector()
async,Constructor Summary Constructors Constructor Description AsyncLoggerDefaultExceptionHandler()
async,Logs a warning to the StatusLogger when events are logged out of order to avoid deadlocks.
async,"Property ""log4j2.AsyncQueueFullPolicy"" controls the routing behaviour. If this property is not specified or has value ""Default"", this factory creates DefaultAsyncQueueFullPolicy objects."
async,"If this property has value ""Discard"", this factory creates DiscardingAsyncQueueFullPolicy objects. By default, this router discards events of level INFO, DEBUG and TRACE if the queue is full. This can be adjusted with property ""log4j2.DiscardThreshold"" (name of the level at which to start discarding)."
async,"For any other value, this factory interprets the value as the fully qualified name of a class implementing the AsyncQueueFullPolicy interface. The class must have a default constructor."
async,Constructor Summary Constructors Constructor Description AsyncQueueFullPolicyFactory()
async,Constructor Summary Constructors Constructor Description Builder()
async,Nested Class Summary Nested Classes Modifier and Type Class Description static class AsyncWaitStrategyFactoryConfig.Builder<B extends AsyncWaitStrategyFactoryConfig.Builder<B>> Builds AsyncWaitStrategyFactoryConfig instances.
async,Constructor Summary Constructors Constructor Description AsyncWaitStrategyFactoryConfig(StringfactoryClassName)
async,Constructor Summary Constructors Constructor Description BasicAsyncLoggerContextSelector()
async,Constructor Summary Constructors Constructor Description DefaultAsyncQueueFullPolicy()
async,Constructor Summary Constructors Constructor Description DiscardingAsyncQueueFullPolicy(LevelthresholdLevel) Constructs a router that will discard events equal or less specific than the specified threshold level when the queue is full.
async,Consider this class private.
async,Constructor Summary Constructors Constructor Description InternalAsyncUtil()
async,Nested Class Summary Nested Classes Modifier and Type Class Description static enum JCToolsBlockingQueueFactory.WaitStrategy
async,Constructor Summary Constructors Constructor Description LinkedTransferQueueFactory()
async,Serialized Form
async,Constructor Summary Constructors Constructor Description RingBufferLogEvent()
async,Warning: this class only works with Disruptor 3.x.
async,Constructor Summary Constructors Constructor Description RingBufferLogEventHandler() Deprecated.
async,Constructor Summary Constructors Constructor Description RingBufferLogEventTranslator()
config,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilterable AbstractFilterable.Builder<B extends AbstractFilterable.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
config,"Constructor Summary Constructors Modifier Constructor Description protected AbstractConfiguration(LoggerContextloggerContext, ConfigurationSourceconfigurationSource) Constructor."
config,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilterable AbstractFilterable.Builder<B extends AbstractFilterable.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
config,"Constructor Summary Constructors Constructor Description AppenderControl(Appenderappender, Levellevel, Filterfilter) Constructor."
config,Constructor Summary Constructors Constructor Description AppenderControlArraySet()
config,Constructor Summary Constructors Constructor Description AwaitCompletionReliabilityStrategy(LoggerConfigloggerConfig)
config,Constructor Summary Constructors Constructor Description AwaitUnconditionallyReliabilityStrategy(LoggerConfigloggerConfig)
config,Serialized Form
config,"Constructor Summary Constructors Constructor Description ConfigurationException(Stringmessage) Constructs an exception with a message. ConfigurationException(Stringmessage, Throwablecause) Constructs an exception with a message and underlying cause. ConfigurationException(Throwablecause) Constructs an exception with a message and underlying cause."
config,Constructor Summary Constructors Constructor Description ConfigurationFactory()
config,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.util.AbstractWatcher AbstractWatcher.ReconfigurationRunnable
config,"Constructor Summary Constructors Constructor Description ConfigurationFileWatcher(Configurationconfiguration, Reconfigurablereconfigurable, List<ConfigurationListener>configurationListeners, longlastModifiedMillis)"
config,"Constructor Summary Constructors Constructor Description CronRunnable(Runnablerunnable, CronExpressioncronExpression)"
config,Nested Class Summary Nested Classes Modifier and Type Class Description class ConfigurationScheduler.CronRunnable Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
config,Constructor Summary Constructors Constructor Description ConfigurationScheduler() ConfigurationScheduler(Stringname)
config,"Constructor Summary Constructors Constructor Description ConfigurationSource(InputStreamstream) Constructs a new ConfigurationSource with the specified input stream. ConfigurationSource(InputStreamstream, Filefile) Constructs a new ConfigurationSource with the specified input stream that originated from the specified file. ConfigurationSource(InputStreamstream, URLurl) Constructs a new ConfigurationSource with the specified input stream that originated from the specified URL. ConfigurationSource(InputStreamstream, URLurl, longlastModified) Constructs a new ConfigurationSource with the specified input stream that originated from the specified URL. ConfigurationSource(InputStreamstream, Pathpath) Constructs a new ConfigurationSource with the specified input stream that originated from the specified path. ConfigurationSource(Sourcesource, byte[]data, longlastModified) Constructs a new ConfigurationSource with the specified source."
config,"Constructor Summary Constructors Constructor Description CronScheduledFuture(ScheduledFuture<V>future, DaterunDate)"
config,Constructor Summary Constructors Constructor Description DefaultAdvertiser()
config,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilterable AbstractFilterable.Builder<B extends AbstractFilterable.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
config,Constructor Summary Constructors Constructor Description DefaultConfiguration() Constructor to create the default configuration.
config,Constructor Summary Constructors Constructor Description DefaultReliabilityStrategy(LoggerConfigloggerConfig)
config,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.util.AbstractWatcher AbstractWatcher.ReconfigurationRunnable
config,"Constructor Summary Constructors Constructor Description HttpWatcher(Configurationconfiguration, Reconfigurablereconfigurable, List<ConfigurationListener>configurationListeners, longlastModifiedMillis)"
config,Constructor Summary Constructors Constructor Description LockingReliabilityStrategy(LoggerConfigloggerConfig)
config,Constructor Summary Constructors Constructor Description Builder()
config,Nested Class Summary Nested Classes Modifier and Type Class Description static class LoggerConfig.Builder<B extends LoggerConfig.Builder<B>> Builds LoggerConfig instances. protected static class LoggerConfig.LevelAndRefs protected static enum LoggerConfig.LoggerConfigPredicate static class LoggerConfig.RootLogger The root Logger. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
config,"Constructor Summary Constructors Modifier Constructor Description LoggerConfig() Default constructor. protected LoggerConfig(Stringname, List<AppenderRef>appenders, Filterfilter, Levellevel, booleanadditive, Property[]properties, Configurationconfig, booleanincludeLocation) LoggerConfig(Stringname, Levellevel, booleanadditive) Constructor that sets the name, level and additive values."
config,Constructor Summary Constructors Modifier Constructor Description protected LevelAndRefs()
config,Constructor Summary Constructors Constructor Description Builder()
config,"Nested Class Summary Nested Classes Modifier and Type Class Description static class LoggerConfig.RootLogger.Builder<B extends LoggerConfig.RootLogger.Builder<B>> Builds LoggerConfig instances. Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.config.LoggerConfig LoggerConfig.LevelAndRefs, LoggerConfig.LoggerConfigPredicate, LoggerConfig.RootLogger Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State"
config,Constructor Summary Constructors Constructor Description RootLogger()
config,"Constructor Summary Constructors Constructor Description Loggers(ConcurrentMap<String,LoggerConfig>map, LoggerConfigroot)"
config,"Constructor Summary Constructors Constructor Description Node() Node(Nodenode) Node(Nodeparent, Stringname, PluginType<?>type) Creates a new instance of Node and initializes it with a name and the corresponding XML element."
config,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilterable AbstractFilterable.Builder<B extends AbstractFilterable.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
config,Constructor Summary Constructors Constructor Description NullConfiguration()
config,Serialized Form
config,Constructor Summary Constructors Constructor Description OrderComparator()
config,Constructor Summary Constructors Constructor Description Builder()
config,Nested Class Summary Nested Classes Modifier and Type Class Description static class ClassArbiter.Builder
config,Constructor Summary Constructors Constructor Description Builder()
config,Nested Class Summary Nested Classes Modifier and Type Class Description static class DefaultArbiter.Builder
config,Constructor Summary Constructors Constructor Description DefaultArbiter()
config,Constructor Summary Constructors Constructor Description Builder()
config,Nested Class Summary Nested Classes Modifier and Type Class Description static class EnvironmentArbiter.Builder
config,Constructor Summary Constructors Constructor Description Builder()
config,Nested Class Summary Nested Classes Modifier and Type Class Description static class ScriptArbiter.Builder
config,Constructor Summary Constructors Constructor Description Builder()
config,Nested Class Summary Nested Classes Modifier and Type Class Description static class SelectArbiter.Builder
config,Constructor Summary Constructors Constructor Description SelectArbiter()
config,Constructor Summary Constructors Constructor Description Builder()
config,Nested Class Summary Nested Classes Modifier and Type Class Description static class SystemPropertyArbiter.Builder
config,"Constructor Summary Constructors Constructor Description Component() Component(StringpluginType) Component(StringpluginType, Stringname) Component(StringpluginType, Stringname, Stringvalue)"
config,Constructor Summary Constructors Constructor Description ConfigurationBuilderFactory()
config,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilterable AbstractFilterable.Builder<B extends AbstractFilterable.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
config,"Constructor Summary Constructors Constructor Description BuiltConfiguration(LoggerContextloggerContext, ConfigurationSourcesource, ComponentrootComponent)"
config,Constructor Summary Constructors Constructor Description DefaultConfigurationBuilder() DefaultConfigurationBuilder(Class<T>clazz)
config,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilterable AbstractFilterable.Builder<B extends AbstractFilterable.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
config,Constructor Summary Constructors Constructor Description CompositeConfiguration(List<? extends AbstractConfiguration>configurations) Construct the CompositeConfiguration.
config,"The default merge strategy performs the merge according to the following rules: Aggregates the global configuration attributes with those in later configurations replacing those in previous configurations with the exception that the highest status level and the lowest monitorInterval greater than 0 will be used. Properties from all configurations are aggregated. Duplicate properties replace those in previous configurations. Filters are aggregated under a CompositeFilter if more than one Filter is defined. Since Filters are not named duplicates may be present. Scripts and ScriptFile references are aggregated. Duplicate definitions replace those in previous configurations. Appenders are aggregated. Appenders with the same name are replaced by those in later configurations, including all of the Appender's subcomponents. Loggers are all aggregated. Logger attributes are individually merged with duplicates being replaced by those in later configurations. Appender references on a Logger are aggregated with duplicates being replaced by those in later configurations. Filters on a Logger are aggregated under a CompositeFilter if more than one Filter is defined. Since Filters are not named duplicates may be present. Filters under Appender references included or discarded depending on whether their parent Appender reference is kept or discarded."
config,Constructor Summary Constructors Constructor Description DefaultMergeStrategy()
config,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilterable AbstractFilterable.Builder<B extends AbstractFilterable.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
config,"Constructor Summary Constructors Constructor Description JsonConfiguration(LoggerContextloggerContext, ConfigurationSourceconfigSource)"
config,Constructor Summary Constructors Constructor Description JsonConfigurationFactory()
config,Constructor Summary Constructors Constructor Description Base64Converter()
config,Constructor Summary Constructors Constructor Description EnumConverter(Class<E>clazz)
config,Constructor Summary Constructors Constructor Description HexConverter()
config,Constructor Summary Constructors Constructor Description BigDecimalConverter()
config,Constructor Summary Constructors Constructor Description BigIntegerConverter()
config,Constructor Summary Constructors Constructor Description BooleanConverter()
config,0x0123456789ABCDEF
config,Base64:ABase64String
config,String using Charset.defaultCharset() [TODO Should this be UTF-8 instead?]
config,Constructor Summary Constructors Constructor Description ByteArrayConverter()
config,Constructor Summary Constructors Constructor Description ByteConverter()
config,Constructor Summary Constructors Constructor Description CharacterConverter()
config,Constructor Summary Constructors Constructor Description CharArrayConverter()
config,Constructor Summary Constructors Constructor Description CharsetConverter()
config,Constructor Summary Constructors Constructor Description ClassConverter()
config,Constructor Summary Constructors Constructor Description CronExpressionConverter()
config,Constructor Summary Constructors Constructor Description DoubleConverter()
config,Constructor Summary Constructors Constructor Description DurationConverter() Deprecated.
config,Constructor Summary Constructors Constructor Description FileConverter()
config,Constructor Summary Constructors Constructor Description FloatConverter()
config,Constructor Summary Constructors Constructor Description InetAddressConverter()
config,Constructor Summary Constructors Constructor Description IntegerConverter()
config,"Nested Class Summary Nested Classes Modifier and Type Class Description static class TypeConverters.BigDecimalConverter Parses a String into a BigDecimal. static class TypeConverters.BigIntegerConverter Parses a String into a BigInteger. static class TypeConverters.BooleanConverter Converts a String into a Boolean. static class TypeConverters.ByteArrayConverter Converts a String into a byte[]. static class TypeConverters.ByteConverter Converts a String into a Byte. static class TypeConverters.CharacterConverter Converts a String into a Character. static class TypeConverters.CharArrayConverter Converts a String into a char[]. static class TypeConverters.CharsetConverter Converts a String into a Charset. static class TypeConverters.ClassConverter Converts a String into a Class. static class TypeConverters.CronExpressionConverter static class TypeConverters.DoubleConverter Converts a String into a Double. static class TypeConverters.DurationConverter Deprecated. since 2.24.0. static class TypeConverters.FileConverter Converts a String into a File. static class TypeConverters.FloatConverter Converts a String into a Float. static class TypeConverters.InetAddressConverter Converts a String into an InetAddress. static class TypeConverters.IntegerConverter Converts a String into a Integer. static class TypeConverters.LevelConverter Converts a String into a Log4j Level. static class TypeConverters.LongConverter Converts a String into a Long. static class TypeConverters.PathConverter Converts a String into a Path. static class TypeConverters.PatternConverter Converts a String into a Pattern. static class TypeConverters.SecurityProviderConverter Converts a String into a Provider. static class TypeConverters.ShortConverter Converts a String into a Short. static class TypeConverters.StringConverter Returns the given String, no conversion takes place. static class TypeConverters.UriConverter Converts a String into a URI. static class TypeConverters.UrlConverter Converts a String into a URL. static class TypeConverters.UuidConverter Converts a String into a UUID."
config,Constructor Summary Constructors Constructor Description TypeConverters()
config,Constructor Summary Constructors Constructor Description LevelConverter()
config,Constructor Summary Constructors Constructor Description LongConverter()
config,Constructor Summary Constructors Constructor Description PathConverter()
config,Constructor Summary Constructors Constructor Description PatternConverter()
config,Constructor Summary Constructors Constructor Description SecurityProviderConverter()
config,Constructor Summary Constructors Constructor Description ShortConverter()
config,Constructor Summary Constructors Constructor Description StringConverter()
config,Constructor Summary Constructors Constructor Description UriConverter()
config,Constructor Summary Constructors Constructor Description UrlConverter()
config,Constructor Summary Constructors Constructor Description UuidConverter()
config,Constructor Summary Constructors Constructor Description PluginCache()
config,Serialized Form
config,Constructor Summary Constructors Constructor Description PluginEntry()
config,Constructor Summary Constructors Constructor Description PluginProcessor()
config,Constructor Summary Constructors Constructor Description PluginBuilder(PluginType<?>pluginType) Constructs a PluginBuilder for a given PluginType.
config,Constructor Summary Constructors Constructor Description PluginManager(Stringcategory) Constructs a PluginManager for the plugin category name given.
config,Nested Class Summary Nested Classes Modifier and Type Class Description static class PluginRegistry.PluginTest A Test that checks to see if each class is annotated with the 'Plugin' annotation.
config,Constructor Summary Constructors Constructor Description PluginTest()
config,Plugin
config,"Constructor Summary Constructors Constructor Description PluginType(PluginEntrypluginEntry, Class<T>pluginClass, StringelementName)"
config,PluginManager
config,"ResolverUtil is used to locate classes that are available in the/a class path and meet arbitrary conditions. The two most common conditions are that a class implements/extends another class, or that is it annotated with a specific annotation. However, through the use of the ResolverUtil.Test class it is possible to search using arbitrary conditions."
config,"A ClassLoader is used to locate all locations (directories and jar files) in the class path that contain classes within certain packages, and then to load those classes and check them. By default the ClassLoader returned by Thread.currentThread().getContextClassLoader() is used, but this can be overridden by calling setClassLoader(ClassLoader) prior to invoking any of the find() methods."
config,"General searches are initiated by calling the find(ResolverUtil.Test, String...) method and supplying a package name and a Test instance. This will cause the named package and all sub-packages to be scanned for classes that meet the test. There are also utility methods for the common use cases of scanning multiple packages for extensions of particular classes, or classes annotated with a specific annotation."
config,The standard usage pattern for the ResolverUtil class is as follows:
config,This class was copied and modified from Stripes.
config,Nested Class Summary Nested Classes Modifier and Type Class Description static interface ResolverUtil.Test A simple interface that specifies how to test classes to determine if they are to be included in the results produced by the ResolverUtil.
config,Constructor Summary Constructors Constructor Description ResolverUtil()
config,Constructor Summary Constructors Constructor Description NotBlankValidator()
config,The value null
config,An object of type CharSequence with length 0
config,An empty array
config,An empty Collection
config,An empty Map
config,Constructor Summary Constructors Constructor Description RequiredValidator()
config,Constructor Summary Constructors Constructor Description ValidHostValidator()
config,Constructor Summary Constructors Constructor Description ValidPortValidator()
config,Constructor Summary Constructors Modifier Constructor Description protected AbstractPluginVisitor(Class<A>clazz) This constructor must be overridden by implementation classes as a no-arg constructor.
config,Constructor Summary Constructors Constructor Description PluginAttributeVisitor()
config,PluginBuilder
config,Constructor Summary Constructors Constructor Description PluginBuilderAttributeVisitor()
config,Constructor Summary Constructors Constructor Description PluginConfigurationVisitor()
config,Constructor Summary Constructors Constructor Description PluginElementVisitor()
config,Constructor Summary Constructors Constructor Description PluginLoggerContextVisitor()
config,Constructor Summary Constructors Constructor Description PluginNodeVisitor()
config,Constructor Summary Constructors Constructor Description PluginValueVisitor()
config,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilterable AbstractFilterable.Builder<B extends AbstractFilterable.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
config,"Constructor Summary Constructors Constructor Description PropertiesConfiguration(LoggerContextloggerContext, ConfigurationSourcesource, Componentroot)"
config,Constructor Summary Constructors Constructor Description PropertiesConfigurationBuilder()
config,Constructor Summary Constructors Constructor Description PropertiesConfigurationFactory()
config,Nested Class Summary Nested Classes Modifier and Type Class Description static enum StatusConfiguration.Verbosity Deprecated. This class is not used anymore and only kept for binary backward compatibility.
config,Constructor Summary Constructors Constructor Description StatusConfiguration()
config,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilterable AbstractFilterable.Builder<B extends AbstractFilterable.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
config,"Constructor Summary Constructors Constructor Description XmlConfiguration(LoggerContextloggerContext, ConfigurationSourceconfigSource)"
config,Constructor Summary Constructors Constructor Description XmlConfigurationFactory()
config,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilterable AbstractFilterable.Builder<B extends AbstractFilterable.Builder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
config,"Constructor Summary Constructors Constructor Description YamlConfiguration(LoggerContextloggerContext, ConfigurationSourceconfigSource)"
config,Constructor Summary Constructors Constructor Description YamlConfigurationFactory()
filter,Constructor Summary Constructors Constructor Description AbstractFilterBuilder()
filter,Garbage-free note: the methods with unrolled varargs by default delegate to the filter method with vararg parameters. Subclasses that want to be garbage-free should override these methods to implement the appropriate filtering without creating a vararg array.
filter,Nested Class Summary Nested Classes Modifier and Type Class Description static class AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,"Constructor Summary Constructors Modifier Constructor Description protected AbstractFilter() The default constructor. protected AbstractFilter(Filter.ResultonMatch, Filter.ResultonMismatch) Constructor that allows the onMatch and onMismatch actions to be set."
filter,Constructor Summary Constructors Constructor Description Builder()
filter,Nested Class Summary Nested Classes Modifier and Type Class Description static class AbstractFilterable.Builder<B extends AbstractFilterable.Builder<B>> Subclasses can extend this abstract Builder. Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,"Constructor Summary Constructors Modifier Constructor Description protected AbstractFilterable() protected AbstractFilterable(Filterfilter) protected AbstractFilterable(Filterfilter, Property[]propertyArray)"
filter,Constructor Summary Constructors Constructor Description Builder()
filter,"Use this filter when you want to control the maximum burst of log statements that can be sent to an appender. The filter is configured in the log4j configuration file. For example, the following configuration limits the number of INFO level (as well as DEBUG and TRACE) log statements that can be sent to the console to a burst of 100 with an average rate of 16 per second. WARN, ERROR and FATAL messages would continue to be delivered."
filter,Nested Class Summary Nested Classes Modifier and Type Class Description static class BurstFilter.Builder Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Constructor Summary Constructors Constructor Description Builder()
filter,Nested Class Summary Nested Classes Modifier and Type Class Description static class DenyAllFilter.Builder Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Constructor Summary Constructors Constructor Description Builder()
filter,Nested Class Summary Nested Classes Modifier and Type Class Description static class LevelMatchFilter.Builder Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,"The levels get compared by their associated integral values; Level.OFF has an integral value of 0, Level.FATAL 100, Level.ERROR 200, and so on. For example, if the filter is configured with maxLevel set to Level.INFO, the filter will return AbstractFilter.onMismatch result for LogEvents of level with higher integral values; Level.DEBUG, Level.TRACE, etc."
filter,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,"Constructor Summary Constructors Modifier Constructor Description protected MapFilter(Map<String,List<String>>map, booleanoper, Filter.ResultonMatch, Filter.ResultonMismatch)"
filter,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Constructor Summary Constructors Constructor Description Builder()
filter,Nested Class Summary Nested Classes Modifier and Type Class Description static class MutableThreadContextMapFilter.Builder static interface MutableThreadContextMapFilter.FilterConfigUpdateListener Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Constructor Summary Constructors Constructor Description Builder()
filter,Nested Class Summary Nested Classes Modifier and Type Class Description static class NoMarkerFilter.Builder Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Constructor Summary Constructors Constructor Description Builder()
filter,Nested Class Summary Nested Classes Modifier and Type Class Description static class StringMatchFilter.Builder Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,"Constructor Summary Constructors Constructor Description ThreadContextMapFilter(Map<String,List<String>>pairs, booleanoper, Filter.ResultonMatch, Filter.ResultonMismatch)"
filter,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.filter.AbstractFilter AbstractFilter.AbstractFilterBuilder<B extends AbstractFilter.AbstractFilterBuilder<B>> Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.Filter Filter.Result Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
filter,Constructor Summary Constructors Constructor Description KeyValuePairConfig()
impl,"By default returns SortedArrayStringMap objects. Can be configured by setting system property ""log4j2.ContextData"" to the fully qualified class name of a class implementing the StringMap interface. The class must have a public default constructor, and if possible should also have a public constructor that takes a single int argument for the initial capacity."
impl,LogEvent.getContextData()
impl,ContextDataInjector
impl,SortedArrayStringMap
impl,Constructor Summary Constructors Constructor Description ContextDataFactory()
impl,ContextDataInjector
impl,ReadOnlyStringMap
impl,ThreadContextDataInjector
impl,LogEvent.getContextData()
impl,Constructor Summary Constructors Constructor Description ContextDataInjectorFactory()
impl,Constructor Summary Constructors Constructor Description DefaultLogEventFactory()
impl,Serialized Form
impl,"Constructor Summary Constructors Constructor Description ExtendedClassInfo(booleanexact, Stringlocation, Stringversion) Constructs a new instance."
impl,Complements a StackTraceElement with:
impl,exact: whether the class was obtained via sun.reflect.Reflection#getCallerClass(int)
impl,location: a classpath element or a jar
impl,version
impl,Serialized Form
impl,"Constructor Summary Constructors Constructor Description ExtendedStackTraceElement(StackTraceElementstackTraceElement, ExtendedClassInfoextraClassInfo) ExtendedStackTraceElement(StringdeclaringClass, StringmethodName, StringfileName, intlineNumber, booleanexact, Stringlocation, Stringversion) Called from Jackson for XML and JSON IO."
impl,Serialized Form
impl,"Constructor Summary Constructors Constructor Description JdkMapAdapterStringMap() JdkMapAdapterStringMap(Map<String,String>map) Deprecated. for performance reasons since 2.23. JdkMapAdapterStringMap(Map<String,String>map, booleanfrozen) Constructs a new StringMap, based on a JDK map."
impl,"Constructor Summary Constructors Constructor Description Log4jContextFactory() Initializes the ContextSelector from system property Constants.LOG4J_CONTEXT_SELECTOR. Log4jContextFactory(ContextSelectorselector) Initializes this factory's ContextSelector with the specified selector. Log4jContextFactory(ContextSelectorselector, ShutdownCallbackRegistryshutdownCallbackRegistry) Constructs a Log4jContextFactory using the provided ContextSelector and ShutdownRegistrationStrategy. Log4jContextFactory(ShutdownCallbackRegistryshutdownCallbackRegistry) Constructs a Log4jContextFactory using the ContextSelector from Constants.LOG4J_CONTEXT_SELECTOR and the provided ShutdownRegistrationStrategy."
impl,Constructor Summary Constructors Constructor Description Builder() Builder(LogEventother)
impl,Serialized Form
impl,Nested Class Summary Nested Classes Modifier and Type Class Description static class Log4jLogEvent.Builder LogEvent Builder helper class.
impl,"Constructor Summary Constructors Constructor Description Log4jLogEvent() Log4jLogEvent(longtimestamp) Deprecated. use Log4jLogEvent.Builder instead. Log4jLogEvent(StringloggerName, Markermarker, StringloggerFQCN, StackTraceElementsource, Levellevel, Messagemessage, List<Property>properties, Throwablet) Constructor. Log4jLogEvent(StringloggerName, Markermarker, StringloggerFQCN, Levellevel, Messagemessage, Throwablet) Deprecated. use Log4jLogEvent.Builder instead. Log4jLogEvent(StringloggerName, Markermarker, StringloggerFQCN, Levellevel, Messagemessage, Throwablet, Map<String,String>mdc, ThreadContext.ContextStackndc, StringthreadName, StackTraceElementlocation, longtimestampMillis) Deprecated. use Log4jLogEvent.Builder instead. Log4jLogEvent(StringloggerName, Markermarker, StringloggerFQCN, Levellevel, Messagemessage, List<Property>properties, Throwablet) Constructor."
impl,Constructor Summary Constructors Constructor Description Log4jProvider()
impl,Serialized Form
impl,"Constructor Summary Constructors Constructor Description MementoMessage(StringformattedMessage, Stringformat, Object[]parameters)"
impl,Serialized Form
impl,"Constructor Summary Constructors Constructor Description MutableLogEvent() MutableLogEvent(StringBuildermsgText, Object[]replacementParameters)"
impl,Constructor Summary Constructors Constructor Description ReusableLogEventFactory()
impl,"If there are no configuration properties, this injector will return the thread context's internal data structure. Otherwise the configuration properties are combined with the thread context key-value pairs into the specified reusable StringMap."
impl,Constructor Summary Constructors Constructor Description ForCopyOnWriteThreadContextMap()
impl,This injector always puts key-value pairs into the specified reusable StringMap.
impl,Constructor Summary Constructors Constructor Description ForDefaultThreadContextMap()
impl,This injector always puts key-value pairs into the specified reusable StringMap.
impl,Constructor Summary Constructors Constructor Description ForGarbageFreeThreadContextMap()
impl,These are the default ContextDataInjector objects returned by the ContextDataInjectorFactory.
impl,ThreadContext
impl,Property
impl,ReadOnlyStringMap
impl,ContextDataInjector
impl,ContextDataInjectorFactory
impl,"Nested Class Summary Nested Classes Modifier and Type Class Description static class ThreadContextDataInjector.ForCopyOnWriteThreadContextMap The ContextDataInjector used when the ThreadContextMap implementation is a copy-on-write StringMap-based data structure. static class ThreadContextDataInjector.ForDefaultThreadContextMap Default ContextDataInjector for the legacy Map<String, String>-based ThreadContext (which is also the ThreadContext implementation used for web applications). static class ThreadContextDataInjector.ForGarbageFreeThreadContextMap The ContextDataInjector used when the ThreadContextMap implementation is a garbage-free StringMap-based data structure."
impl,Constructor Summary Constructors Constructor Description ThreadContextDataInjector()
impl,Constructor Summary Constructors Constructor Description ThreadContextDataProvider()
impl,"Constructor Summary Constructors Modifier Constructor Description protected ThrowableFormatOptions() Constructs the options for printing stack trace. protected ThrowableFormatOptions(intlines, Stringseparator, List<String>ignorePackages, TextRenderertextRenderer, Stringsuffix) Constructs the options for printing stack trace. protected ThrowableFormatOptions(List<String>packages) Constructs the options for printing stack trace."
impl,"A proxy is used to represent a throwable that may not exist in a different class loader or JVM. When an application deserializes a ThrowableProxy, the throwable may not be set, but the throwable's information is preserved in other fields of the proxy like the message and stack trace."
impl,TODO: Move this class to org.apache.logging.log4j.core because it is used from LogEvent.
impl,TODO: Deserialize: Try to rebuild Throwable if the target exception is in this class loader?
impl,Serialized Form
impl,Constructor Summary Constructors Constructor Description ThrowableProxy(Throwablethrowable) Constructs the wrapper for the Throwable that includes packaging data.
jackson,Consider this class private.
jackson,Serialized Form
jackson,Nested Class Summary Nested classes/interfaces inherited from classcom.fasterxml.jackson.databind.JsonDeserializer com.fasterxml.jackson.databind.JsonDeserializer.None
jackson,Consider this class private.
jackson,Serialized Form
jackson,Nested Class Summary Nested classes/interfaces inherited from classcom.fasterxml.jackson.databind.JsonSerializer com.fasterxml.jackson.databind.JsonSerializer.None
jackson,Constructor Summary Constructors Modifier Constructor Description protected ContextDataAsEntryListSerializer()
jackson,Consider this class private.
jackson,Serialized Form
jackson,Nested Class Summary Nested classes/interfaces inherited from classcom.fasterxml.jackson.databind.JsonDeserializer com.fasterxml.jackson.databind.JsonDeserializer.None
jackson,Consider this class private.
jackson,Serialized Form
jackson,Nested Class Summary Nested classes/interfaces inherited from classcom.fasterxml.jackson.databind.JsonSerializer com.fasterxml.jackson.databind.JsonSerializer.None
jackson,Constructor Summary Constructors Modifier Constructor Description protected ContextDataSerializer()
jackson,Consider this class private.
jackson,Serialized Form
jackson,Nested Class Summary Nested classes/interfaces inherited from classcom.fasterxml.jackson.databind.JsonDeserializer com.fasterxml.jackson.databind.JsonDeserializer.None
jackson,Consider this class private.
jackson,Serialized Form
jackson,Nested Class Summary Nested classes/interfaces inherited from classcom.fasterxml.jackson.databind.JsonSerializer com.fasterxml.jackson.databind.JsonSerializer.None
jackson,Constructor Summary Constructors Modifier Constructor Description protected ListOfMapEntrySerializer()
jackson,Consider this class private.
jackson,Serialized Form
jackson,"Nested Class Summary Nested classes/interfaces inherited from classcom.fasterxml.jackson.databind.ObjectMapper com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder, com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping"
jackson,"Constructor Summary Constructors Constructor Description Log4jJsonObjectMapper() Create a new instance using the Log4jJsonModule. Log4jJsonObjectMapper(booleanencodeThreadContextAsList, booleanincludeStacktrace, booleanstacktraceAsString, booleanobjectMessageAsJsonObject) Create a new instance using the Log4jJsonModule."
jackson,Consider this class private.
jackson,Serialized Form
jackson,Nested Class Summary Nested classes/interfaces inherited from classcom.fasterxml.jackson.databind.JsonDeserializer com.fasterxml.jackson.databind.JsonDeserializer.None
jackson,Constructor Summary Constructors Constructor Description Log4jStackTraceElementDeserializer() Constructs a new initialized instance.
jackson,Consider this class private.
jackson,Serialized Form
jackson,"Nested Class Summary Nested classes/interfaces inherited from classcom.fasterxml.jackson.dataformat.xml.XmlMapper com.fasterxml.jackson.dataformat.xml.XmlMapper.Builder Nested classes/interfaces inherited from classcom.fasterxml.jackson.databind.ObjectMapper com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder, com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping"
jackson,"Constructor Summary Constructors Constructor Description Log4jXmlObjectMapper() Create a new instance using the Log4jXmlModule. Log4jXmlObjectMapper(booleanincludeStacktrace, booleanstacktraceAsString) Create a new instance using the Log4jXmlModule."
jackson,Consider this class private.
jackson,Serialized Form
jackson,"Nested Class Summary Nested classes/interfaces inherited from classcom.fasterxml.jackson.dataformat.yaml.YAMLMapper com.fasterxml.jackson.dataformat.yaml.YAMLMapper.Builder Nested classes/interfaces inherited from classcom.fasterxml.jackson.databind.ObjectMapper com.fasterxml.jackson.databind.ObjectMapper.DefaultTypeResolverBuilder, com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping"
jackson,"Constructor Summary Constructors Constructor Description Log4jYamlObjectMapper() Create a new instance using the Log4jYamlModule. Log4jYamlObjectMapper(booleanencodeThreadContextAsList, booleanincludeStacktrace, booleanstacktraceAsString) Create a new instance using the Log4jYamlModule."
jackson,Consider this class private.
jackson,Used to represent map entries in a generic fashion because the default Jackson behavior uses the key as the element tag. Using the key as an element/property name would mean that you cannot have a generic JSON/XML schema for all log event.
jackson,"Constructor Summary Constructors Constructor Description MapEntry(Stringkey, Stringvalue)"
jackson,Consider this class private.
jackson,Serialized Form
jackson,Nested Class Summary Nested classes/interfaces inherited from classcom.fasterxml.jackson.databind.JsonDeserializer com.fasterxml.jackson.databind.JsonDeserializer.None
jackson,Constructor Summary Constructors Constructor Description StackTraceElementConstants()
jackson,Constructor Summary Constructors Constructor Description XmlConstants()
jmx,"Constructor Summary Constructors Constructor Description AppenderAdmin(StringcontextName, Appenderappender) Constructs a new AppenderAdmin with the specified contextName and appender."
jmx,"Constructor Summary Constructors Constructor Description AsyncAppenderAdmin(StringcontextName, AsyncAppenderappender) Constructs a new AsyncAppenderAdmin with the specified contextName and async appender."
jmx,"Constructor Summary Constructors Constructor Description ContextSelectorAdmin(StringcontextName, ContextSelectorselector) Constructs a new ContextSelectorAdmin."
jmx,"Constructor Summary Constructors Constructor Description LoggerConfigAdmin(LoggerContextloggerContext, LoggerConfigloggerConfig) Constructs a new LoggerConfigAdmin with the specified LoggerContext and logger config."
jmx,"Constructor Summary Constructors Constructor Description LoggerContextAdmin(LoggerContextloggerContext, Executorexecutor) Constructs a new LoggerContextAdmin with the Executor to be used for sending Notification s asynchronously to listeners."
jmx,"Constructor Summary Constructors Modifier Constructor Description protected RingBufferAdmin(com.lmax.disruptor.RingBuffer<?>ringBuffer, StringmbeanName)"
jmx,All instrumentation for Log4j 2 classes can be disabled by setting system property -Dlog4j2.disable.jmx=true.
jmx,"Constructor Summary Constructors Constructor Description StatusLoggerAdmin(StringcontextName, Executorexecutor) Constructs a new StatusLoggerAdmin with the Executor to be used for sending Notifications asynchronously to listeners."
layout,"Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.layout.AbstractStringLayout AbstractStringLayout.Builder<B extends AbstractStringLayout.Builder<B>>, AbstractStringLayout.Serializer, AbstractStringLayout.Serializer2"
layout,"Constructor Summary Constructors Modifier Constructor Description protected AbstractCsvLayout(Configurationconfig, Charsetcharset, org.apache.commons.csv.CSVFormatcsvFormat, Stringheader, Stringfooter)"
layout,Constructor Summary Constructors Constructor Description Builder()
layout,Nested Class Summary Nested Classes Modifier and Type Class Description static class AbstractLayout.Builder<B extends AbstractLayout.Builder<B>> Subclasses can extend this abstract Builder.
layout,"Constructor Summary Constructors Constructor Description AbstractLayout(byte[]header, byte[]footer) Deprecated. Use AbstractLayout(Configuration, byte[], byte[]) AbstractLayout(Configurationconfiguration, byte[]header, byte[]footer) Constructs a layout with an optional header and footer."
layout,Constructor Summary Constructors Constructor Description Builder()
layout,"Since 2.4.1, this class has custom logic to convert ISO-8859-1 or US-ASCII Strings to byte[] arrays to improve performance: all characters are simply cast to bytes."
layout,Nested Class Summary Nested Classes Modifier and Type Class Description static class AbstractStringLayout.Builder<B extends AbstractStringLayout.Builder<B>> static interface AbstractStringLayout.Serializer static interface AbstractStringLayout.Serializer2 Variation of AbstractStringLayout.Serializer that avoids allocating temporary objects.
layout,"Constructor Summary Constructors Modifier Constructor Description protected AbstractStringLayout(Charsetcharset) protected AbstractStringLayout(CharsetaCharset, byte[]header, byte[]footer) Builds a new layout. protected AbstractStringLayout(Configurationconfig, CharsetaCharset, AbstractStringLayout.SerializerheaderSerializer, AbstractStringLayout.SerializerfooterSerializer) Builds a new layout."
layout,"Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.layout.AbstractStringLayout AbstractStringLayout.Builder<B extends AbstractStringLayout.Builder<B>>, AbstractStringLayout.Serializer, AbstractStringLayout.Serializer2"
layout,"Constructor Summary Constructors Modifier Constructor Description protected CsvLogEventLayout(Configurationconfig, Charsetcharset, org.apache.commons.csv.CSVFormatcsvFormat, Stringheader, Stringfooter)"
layout,Best used with:
layout,"logger.debug(new ObjectArrayMessage(1, 2, ""Bob""));"
layout,"Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.layout.AbstractStringLayout AbstractStringLayout.Builder<B extends AbstractStringLayout.Builder<B>>, AbstractStringLayout.Serializer, AbstractStringLayout.Serializer2"
layout,"Constructor Summary Constructors Constructor Description CsvParameterLayout(Configurationconfig, Charsetcharset, org.apache.commons.csv.CSVFormatcsvFormat, Stringheader, Stringfooter)"
layout,Constructor Summary Constructors Constructor Description Builder()
layout,This layout compresses JSON to GZIP or ZLIB (the compressionType) if log event data is larger than 1024 bytes (the compressionThreshold). This layout does not implement chunking.
layout,GELF specification
layout,"Nested Class Summary Nested Classes Modifier and Type Class Description static class GelfLayout.Builder<B extends GelfLayout.Builder<B>> static enum GelfLayout.CompressionType Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.layout.AbstractStringLayout AbstractStringLayout.Serializer, AbstractStringLayout.Serializer2"
layout,"Constructor Summary Constructors Constructor Description GelfLayout(Stringhost, KeyValuePair[]additionalFields, GelfLayout.CompressionTypecompressionType, intcompressionThreshold, booleanincludeStacktrace) Deprecated. Use newBuilder() instead"
layout,"Appenders using this layout should have their encoding set to UTF-8 or UTF-16, otherwise events containing non ASCII characters could result in corrupted log files."
layout,"Nested Class Summary Nested Classes Modifier and Type Class Description static class HtmlLayout.Builder static enum HtmlLayout.FontSize Possible font sizes Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.layout.AbstractStringLayout AbstractStringLayout.Serializer, AbstractStringLayout.Serializer2"
layout,Constructor Summary Constructors Constructor Description Builder()
layout,Constructor Summary Constructors Constructor Description Builder()
layout,Nested Class Summary Nested Classes Modifier and Type Class Description static class LevelPatternSelector.Builder Custom MarkerPatternSelector builder.
layout,"Constructor Summary Constructors Constructor Description LevelPatternSelector(PatternMatch[]properties, StringdefaultPattern, booleanalwaysWriteExceptions, booleannoConsoleNoAnsi, Configurationconfig) Deprecated. Use newBuilder() instead."
layout,"Constructor Summary Constructors Constructor Description LockingStringBuilderEncoder(Charsetcharset) LockingStringBuilderEncoder(Charsetcharset, intcharBufferSize)"
layout,Constructor Summary Constructors Constructor Description Builder()
layout,Nested Class Summary Nested Classes Modifier and Type Class Description static class MarkerPatternSelector.Builder Custom MarkerPatternSelector builder.
layout,"Constructor Summary Constructors Constructor Description MarkerPatternSelector(PatternMatch[]properties, StringdefaultPattern, booleanalwaysWriteExceptions, booleannoConsoleNoAnsi, Configurationconfig) Deprecated. Use newBuilder() instead."
layout,Useful in combination with a JMS Appender to map a Log4j MapMessage or StringMapMessage to a JMS MapMessage.
layout,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.layout.AbstractLayout AbstractLayout.Builder<B extends AbstractLayout.Builder<B>>
layout,"Constructor Summary Constructors Constructor Description MessageLayout() MessageLayout(Configurationconfiguration, byte[]header, byte[]footer)"
layout,The goal of this class is to format a LogEvent and return the results. The format of the result depends on the conversion pattern.
layout,The conversion pattern is closely related to the conversion pattern of the printf function in C. A conversion pattern is composed of literal text and format control expressions called conversion specifiers.
layout,See the Log4j Manual for details on the supported pattern converters.
layout,"Nested Class Summary Nested Classes Modifier and Type Class Description static class PatternLayout.Builder Custom PatternLayout builder. static class PatternLayout.SerializerBuilder Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.layout.AbstractStringLayout AbstractStringLayout.Serializer, AbstractStringLayout.Serializer2"
layout,Constructor Summary Constructors Constructor Description SerializerBuilder()
layout,Serialized Form
layout,Constructor Summary Constructors Constructor Description Builder()
layout,Nested Class Summary Nested Classes Modifier and Type Class Description static class PatternMatch.Builder
layout,"Constructor Summary Constructors Constructor Description PatternMatch(Stringkey, Stringpattern) Constructs a key/value pair."
layout,RFC 5424
layout,"Nested Class Summary Nested Classes Modifier and Type Class Description static class Rfc5424Layout.Rfc5424LayoutBuilder Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.layout.AbstractStringLayout AbstractStringLayout.Builder<B extends AbstractStringLayout.Builder<B>>, AbstractStringLayout.Serializer, AbstractStringLayout.Serializer2"
layout,Constructor Summary Constructors Constructor Description Rfc5424LayoutBuilder()
layout,Nested Class Summary Nested Classes Modifier and Type Class Description static class ScriptPatternSelector.Builder Custom ScriptPatternSelector builder.
layout,"Constructor Summary Constructors Constructor Description ScriptPatternSelector(AbstractScriptscript, PatternMatch[]properties, StringdefaultPattern, booleanalwaysWriteExceptions, booleandisableAnsi, booleannoConsoleNoAnsi, Configurationconfig) Deprecated. Use newBuilder() instead."
layout,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.layout.AbstractLayout AbstractLayout.Builder<B extends AbstractLayout.Builder<B>>
layout,"Constructor Summary Constructors Constructor Description StringBuilderEncoder(Charsetcharset) StringBuilderEncoder(Charsetcharset, intcharBufferSize, intbyteBufferSize)"
layout,The main arguments are
layout,facility: The Facility is used to try to classify the message.
layout,includeNewLine: If true a newline will be appended to the result.
layout,escapeNL: Pattern to use for replacing newlines.
layout,charset: The character set.
layout,Constructor Summary Constructors Constructor Description Builder()
layout,"Nested Class Summary Nested Classes Modifier and Type Class Description static class SyslogLayout.Builder<B extends SyslogLayout.Builder<B>> Builds a SyslogLayout. Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.layout.AbstractStringLayout AbstractStringLayout.Serializer, AbstractStringLayout.Serializer2"
layout,"Constructor Summary Constructors Modifier Constructor Description protected SyslogLayout(Facilityfacility, booleanincludeNL, StringescapeNL, Charsetcharset)"
layout,Constructor Summary Constructors Constructor Description Builder()
layout,Constructor Summary Constructors Constructor Description Builder()
lookup,Constructor Summary Constructors Constructor Description AbstractConfigurationAwareLookup()
lookup,Constructor Summary Constructors Constructor Description AbstractLookup()
lookup,"Constructor Summary Constructors Constructor Description ConfigurationStrSubstitutor() ConfigurationStrSubstitutor(Map<String,String>valueMap) ConfigurationStrSubstitutor(Propertiesproperties) ConfigurationStrSubstitutor(StrLookuplookup) ConfigurationStrSubstitutor(StrSubstitutorother)"
lookup,Constructor Summary Constructors Constructor Description ContextMapLookup()
lookup,Constructor Summary Constructors Constructor Description DateLookup()
lookup,Constructor Summary Constructors Constructor Description EnvironmentLookup()
lookup,Constructor Summary Constructors Constructor Description EventLookup()
lookup,"Constructor Summary Constructors Constructor Description Interpolator() Create the default Interpolator. Interpolator(Map<String,String>properties) Creates the default Interpolator with the provided properties. Interpolator(StrLookupdefaultLookup) Interpolator(StrLookupdefaultLookup, List<String>pluginPackages) Constructs an Interpolator using a given StrLookup and a list of packages to find Lookup plugins in."
lookup,Constructor Summary Constructors Constructor Description JavaLookup()
lookup,RuntimeMXBean.getInputArguments()
lookup,"Constructor Summary Constructors Constructor Description JmxRuntimeInputArgumentsLookup() Constructor when used directly as a plugin. JmxRuntimeInputArgumentsLookup(Map<String,String>map)"
lookup,Constructor Summary Constructors Constructor Description JndiLookup() Constructs a new instance or throw IllegalStateException if this feature is disabled.
lookup,Constructor Summary Constructors Constructor Description Log4jLookup()
lookup,Constructor Summary Constructors Constructor Description LowerLookup()
lookup,"Constructor Summary Constructors Constructor Description MainMapLookup() Constructor when used directly as a plugin. MainMapLookup(Map<String,String>map)"
lookup,"Constructor Summary Constructors Constructor Description MapLookup() Constructor when used directly as a plugin. MapLookup(Map<String,String>map) Creates a new instance backed by a Map."
lookup,Constructor Summary Constructors Constructor Description MarkerLookup()
lookup,"Constructor Summary Constructors Constructor Description PropertiesLookup(Map<String,String>properties) Constructs a new instance for the given map. PropertiesLookup(Property[]configProperties, Map<String,String>contextProperties)"
lookup,Constructor Summary Constructors Constructor Description ResourceBundleLookup()
lookup,"Constructor Summary Constructors Constructor Description RuntimeStrSubstitutor() RuntimeStrSubstitutor(Map<String,String>valueMap) RuntimeStrSubstitutor(Propertiesproperties) RuntimeStrSubstitutor(StrLookuplookup) RuntimeStrSubstitutor(StrSubstitutorother)"
lookup,"This class comes complete with various factory methods. If these do not suffice, you can subclass and implement your own matcher."
lookup,Constructor Summary Constructors Modifier Constructor Description protected StrMatcher() Constructor.
lookup,This class takes a piece of text and substitutes all the variables within it. The default definition of a variable is ${variableName}. The prefix and suffix can be changed via constructors and set methods.
lookup,"Variable values are typically resolved from a map, but could also be resolved from system properties, or by supplying a custom variable resolver."
lookup,The simplest example is to use this class to replace Java System properties. For example:
lookup,"Typical usage of this class follows the following pattern: First an instance is created and initialized with the map that contains the values for the available variables. If a prefix and/or suffix for variables should be used other than the default ones, the appropriate settings can be performed. After that the replace() method can be called passing in the source text for interpolation. In the returned text all variable references (as long as their values are known) will be resolved. The following example demonstrates this:"
lookup,yielding:
lookup,"Also, this class allows to set a default value for unresolved variables. The default value for a variable can be appended to the variable name after the variable default value delimiter. The default value of the variable default value delimiter is ':-', as in bash and other *nix shells, as those are arguably where the default ${} delimiter set originated. The variable default value delimiter can be manually set by calling setValueDelimiterMatcher(StrMatcher), setValueDelimiter(char) or setValueDelimiter(String). The following shows an example with variable default value settings:"
lookup,yielding:
lookup,"In addition to this usage pattern there are some static convenience methods that cover the most common use cases. These methods can be used without the need of manually creating an instance. However if multiple replace operations are to be performed, creating and reusing an instance of this class will be more efficient."
lookup,"Variable replacement works in a recursive way. Thus, if a variable value contains a variable then that variable will also be replaced. Cyclic replacements are detected and will cause an exception to be thrown."
lookup,Sometimes the interpolation's result must contain a variable prefix. As an example take the following source text:
lookup,Here only the variable's name referred to in the text should be replaced resulting in the text (assuming that the value of the name variable is x):
lookup,"To achieve this effect there are two possibilities: Either set a different prefix and suffix for variables which do not conflict with the result text you want to produce. The other possibility is to use the escape character, by default '$'. If this character is placed before a variable reference, this reference is ignored and won't be replaced. For example:"
lookup,"In some complex scenarios you might even want to perform substitution in the names of variables, for instance"
lookup,"StrSubstitutor supports this recursive substitution in variable names, but it has to be enabled explicitly by setting the enableSubstitutionInVariables property to true."
lookup,"Constructor Summary Constructors Constructor Description StrSubstitutor() Creates a new instance with defaults for variable prefix and suffix and the escaping character. StrSubstitutor(Map<String,String>valueMap) Creates a new instance and initializes it. StrSubstitutor(Map<String,String>valueMap, Stringprefix, Stringsuffix) Creates a new instance and initializes it. StrSubstitutor(Map<String,String>valueMap, Stringprefix, Stringsuffix, charescape) Creates a new instance and initializes it. StrSubstitutor(Map<String,String>valueMap, Stringprefix, Stringsuffix, charescape, StringvalueDelimiter) Creates a new instance and initializes it. StrSubstitutor(Propertiesproperties) Creates a new instance and initializes it. StrSubstitutor(StrLookupvariableResolver) Creates a new instance and initializes it. StrSubstitutor(StrLookupvariableResolver, Stringprefix, Stringsuffix, charescape) Creates a new instance and initializes it. StrSubstitutor(StrLookupvariableResolver, Stringprefix, Stringsuffix, charescape, StringvalueDelimiter) Creates a new instance and initializes it. StrSubstitutor(StrLookupvariableResolver, StrMatcherprefixMatcher, StrMatchersuffixMatcher, charescape) Creates a new instance and initializes it. StrSubstitutor(StrLookupvariableResolver, StrMatcherprefixMatcher, StrMatchersuffixMatcher, charescape, StrMatchervalueDelimiterMatcher) Creates a new instance and initializes it. StrSubstitutor(StrLookupvariableResolver, StrMatcherprefixMatcher, StrMatchersuffixMatcher, charescape, StrMatchervalueDelimiterMatcher, StrMatchervalueEscapeMatcher) Creates a new instance and initializes it."
lookup,Constructor Summary Constructors Constructor Description StructuredDataLookup()
lookup,Constructor Summary Constructors Constructor Description SystemPropertiesLookup()
lookup,Constructor Summary Constructors Constructor Description UpperLookup()
net,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
net,"Constructor Summary Constructors Constructor Description AbstractSocketManager(Stringname, OutputStreamos, InetAddressinetAddress, Stringhost, intport, Layout<? extends Serializable>layout, booleanwriteHeader, intbufferSize) Constructs a new instance."
net,"Constructor Summary Constructors Constructor Description DatagramOutputStream(Stringhost, intport, byte[]header, byte[]footer) The Constructor."
net,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
net,"Constructor Summary Constructors Modifier Constructor Description protected DatagramSocketManager(Stringname, OutputStreamos, InetAddressinetAddress, Stringhost, intport, Layout<? extends Serializable>layout, intbufferSize) The Constructor."
net,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
net,"Constructor Summary Constructors Constructor Description FactoryData(Stringto, Stringcc, Stringbcc, Stringfrom, StringreplyTo, Stringsubject, AbstractStringLayout.SerializersubjectSerializer, StringsmtpProtocol, StringsmtpHost, intsmtpPort, StringsmtpUsername, StringsmtpPassword, booleansmtpDebug, intbufferSize, SslConfigurationsslConfiguration, StringfilterName)"
net,Nested Class Summary Nested Classes Modifier and Type Class Description static class MailManager.FactoryData Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
net,"Constructor Summary Constructors Constructor Description MailManager(LoggerContextloggerContext, Stringname)"
net,Constructor Summary Constructors Constructor Description MimeMessageBuilder(javax.mail.Sessionsession)
net,Constructor Summary Constructors Constructor Description MulticastDnsAdvertiser()
net,"Constructor Summary Constructors Constructor Description Priority(Facilityfacility, Severityseverity) The Constructor."
net,Nested Class Summary Nested Classes Modifier and Type Class Description static class SmtpManager.SMTPManagerFactory Factory to create the SMTP Manager. Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.net.MailManager MailManager.FactoryData Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData
net,"Constructor Summary Constructors Modifier Constructor Description protected SmtpManager(Stringname, javax.mail.Sessionsession, javax.mail.internet.MimeMessagemessage, MailManager.FactoryDatadata)"
net,Constructor Summary Constructors Constructor Description SMTPManagerFactory()
net,Constructor Summary Constructors Constructor Description Builder()
net,Nested Class Summary Nested Classes Modifier and Type Class Description static class SocketAddress.Builder
net,Constructor Summary Constructors Constructor Description SocketOptions()
net,"The Socket.setPerformancePreferences(int, int, int) API may not be implemented by a JRE."
net,Constructor Summary Constructors Constructor Description SocketPerformancePreferences()
net,"Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.net.TcpSocketManager TcpSocketManager.HostResolver, TcpSocketManager.TcpSocketManagerFactory<M extends TcpSocketManager,T extends org.apache.logging.log4j.core.net.TcpSocketManager.FactoryData> Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData"
net,"Constructor Summary Constructors Constructor Description SslSocketManager(Stringname, OutputStreamos, Socketsock, SslConfigurationsslConfig, InetAddressinetAddress, Stringhost, intport, intconnectTimeoutMillis, intreconnectionDelayMillis, booleanimmediateFail, Layout<? extends Serializable>layout, intbufferSize) Deprecated. Use SslSocketManager(String, OutputStream, Socket, SslConfiguration, InetAddress, String, int, int, int, boolean, Layout, int, SocketOptions). SslSocketManager(Stringname, OutputStreamos, Socketsock, SslConfigurationsslConfig, InetAddressinetAddress, Stringhost, intport, intconnectTimeoutMillis, intreconnectionDelayMillis, booleanimmediateFail, Layout<? extends Serializable>layout, intbufferSize, SocketOptionssocketOptions)"
net,Constructor Summary Constructors Constructor Description HostResolver()
net,"Nested Class Summary Nested Classes Modifier and Type Class Description static class TcpSocketManager.HostResolver protected static class TcpSocketManager.TcpSocketManagerFactory<M extends TcpSocketManager,T extends org.apache.logging.log4j.core.net.TcpSocketManager.FactoryData> Factory to create a TcpSocketManager. Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.appender.AbstractManager AbstractManager.AbstractFactoryData"
net,"Constructor Summary Constructors Constructor Description TcpSocketManager(Stringname, OutputStreamos, Socketsocket, InetAddressinetAddress, Stringhost, intport, intconnectTimeoutMillis, intreconnectionDelayMillis, booleanimmediateFail, Layout<? extends Serializable>layout, intbufferSize) Deprecated. Use TcpSocketManager(String, OutputStream, Socket, InetAddress, String, int, int, int, boolean, Layout, int, SocketOptions). TcpSocketManager(Stringname, OutputStreamos, Socketsocket, InetAddressinetAddress, Stringhost, intport, intconnectTimeoutMillis, intreconnectionDelayMillis, booleanimmediateFail, Layout<? extends Serializable>layout, intbufferSize, SocketOptionssocketOptions) Constructs."
net,Constructor Summary Constructors Modifier Constructor Description protected TcpSocketManagerFactory()
net,Constructor Summary Constructors Constructor Description UrlConnectionFactory()
net,"Constructor Summary Constructors Constructor Description AbstractKeyStoreConfiguration(Stringlocation, char[]password, StringkeyStoreType) Deprecated. Use AbstractKeyStoreConfiguration(String, PasswordProvider, String) instead AbstractKeyStoreConfiguration(Stringlocation, Stringpassword, StringkeyStoreType) Deprecated. Use AbstractKeyStoreConfiguration(String, PasswordProvider, String) instead AbstractKeyStoreConfiguration(Stringlocation, PasswordProviderpasswordProvider, StringkeyStoreType)"
net,"Constructor Summary Constructors Constructor Description KeyStoreConfiguration(Stringlocation, char[]password, StringkeyStoreType, StringkeyManagerFactoryAlgorithm) Deprecated. use KeyStoreConfiguration(String, PasswordProvider, String, String) instead KeyStoreConfiguration(Stringlocation, Stringpassword, StringkeyStoreType, StringkeyManagerFactoryAlgorithm) Deprecated. Use KeyStoreConfiguration(String, PasswordProvider, String, String) instead KeyStoreConfiguration(Stringlocation, PasswordProviderpasswordProvider, StringkeyStoreType, StringkeyManagerFactoryAlgorithm)"
net,Serialized Form
net,Constructor Summary Constructors Constructor Description KeyStoreConfigurationException(Exceptione)
net,Constructor Summary Constructors Constructor Description SslConfigurationDefaults()
net,Serialized Form
net,Constructor Summary Constructors Constructor Description SslConfigurationException(Exceptione)
net,Constructor Summary Constructors Constructor Description SslConfigurationFactory()
net,"Constructor Summary Constructors Constructor Description StoreConfiguration(Stringlocation, char[]password) Deprecated. Use StoreConfiguration(String, PasswordProvider) StoreConfiguration(Stringlocation, Stringpassword) Deprecated. Use StoreConfiguration(String, PasswordProvider) StoreConfiguration(Stringlocation, PasswordProviderpasswordProvider)"
net,Serialized Form
net,"Constructor Summary Constructors Constructor Description StoreConfigurationException(Exceptione) StoreConfigurationException(Stringmessage) StoreConfigurationException(Stringmessage, Exceptione)"
net,"Constructor Summary Constructors Constructor Description TrustStoreConfiguration(Stringlocation, char[]password, StringkeyStoreType, StringtrustManagerFactoryAlgorithm) Deprecated. Use TrustStoreConfiguration(String, PasswordProvider, String, String) instead TrustStoreConfiguration(Stringlocation, Stringpassword, StringkeyStoreType, StringtrustManagerFactoryAlgorithm) Deprecated. Use TrustStoreConfiguration(String, PasswordProvider, String, String) instead TrustStoreConfiguration(Stringlocation, PasswordProviderpasswordProvider, StringkeyStoreType, StringtrustManagerFactoryAlgorithm)"
net,Serialized Form
net,Constructor Summary Constructors Constructor Description TrustStoreConfigurationException(Exceptione)
osgi,Constructor Summary Constructors Constructor Description Activator()
osgi,Constructor Summary Constructors Constructor Description BundleContextSelector()
parser,Constructor Summary Constructors Constructor Description JsonLogEventParser()
parser,Serialized Form
parser,"Constructor Summary Constructors Constructor Description ParseException(Stringmessage) ParseException(Stringmessage, Throwablecause) ParseException(Throwablecause)"
parser,Constructor Summary Constructors Constructor Description XmlLogEventParser()
parser,Constructor Summary Constructors Constructor Description YamlLogEventParser()
pattern,Conversion specifiers in a conversion patterns are parsed to individual PatternConverters. Each of which is responsible for converting an object in a converter specific manner.
pattern,"Constructor Summary Constructors Modifier Constructor Description protected AbstractPatternConverter(Stringname, Stringstyle) Create a new pattern converter."
pattern,"Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.pattern.AbstractStyleNameConverter AbstractStyleNameConverter.Black, AbstractStyleNameConverter.Blue, AbstractStyleNameConverter.Cyan, AbstractStyleNameConverter.Green, AbstractStyleNameConverter.Magenta, AbstractStyleNameConverter.Red, AbstractStyleNameConverter.White, AbstractStyleNameConverter.Yellow"
pattern,"Constructor Summary Constructors Constructor Description Black(List<PatternFormatter>formatters, Stringstyling) Constructs the converter."
pattern,"Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.pattern.AbstractStyleNameConverter AbstractStyleNameConverter.Black, AbstractStyleNameConverter.Blue, AbstractStyleNameConverter.Cyan, AbstractStyleNameConverter.Green, AbstractStyleNameConverter.Magenta, AbstractStyleNameConverter.Red, AbstractStyleNameConverter.White, AbstractStyleNameConverter.Yellow"
pattern,"Constructor Summary Constructors Constructor Description Blue(List<PatternFormatter>formatters, Stringstyling) Constructs the converter."
pattern,"Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.pattern.AbstractStyleNameConverter AbstractStyleNameConverter.Black, AbstractStyleNameConverter.Blue, AbstractStyleNameConverter.Cyan, AbstractStyleNameConverter.Green, AbstractStyleNameConverter.Magenta, AbstractStyleNameConverter.Red, AbstractStyleNameConverter.White, AbstractStyleNameConverter.Yellow"
pattern,"Constructor Summary Constructors Constructor Description Cyan(List<PatternFormatter>formatters, Stringstyling) Constructs the converter."
pattern,"Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.pattern.AbstractStyleNameConverter AbstractStyleNameConverter.Black, AbstractStyleNameConverter.Blue, AbstractStyleNameConverter.Cyan, AbstractStyleNameConverter.Green, AbstractStyleNameConverter.Magenta, AbstractStyleNameConverter.Red, AbstractStyleNameConverter.White, AbstractStyleNameConverter.Yellow"
pattern,"Constructor Summary Constructors Constructor Description Green(List<PatternFormatter>formatters, Stringstyling) Constructs the converter."
pattern,Nested Class Summary Nested Classes Modifier and Type Class Description static final class AbstractStyleNameConverter.Black Black style pattern converter. static final class AbstractStyleNameConverter.Blue Blue style pattern converter. static final class AbstractStyleNameConverter.Cyan Cyan style pattern converter. static final class AbstractStyleNameConverter.Green Green style pattern converter. static final class AbstractStyleNameConverter.Magenta Magenta style pattern converter. static final class AbstractStyleNameConverter.Red Red style pattern converter. static final class AbstractStyleNameConverter.White White style pattern converter. static final class AbstractStyleNameConverter.Yellow Yellow style pattern converter.
pattern,"Constructor Summary Constructors Modifier Constructor Description protected AbstractStyleNameConverter(Stringname, List<PatternFormatter>formatters, Stringstyling) Constructs the converter."
pattern,"Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.pattern.AbstractStyleNameConverter AbstractStyleNameConverter.Black, AbstractStyleNameConverter.Blue, AbstractStyleNameConverter.Cyan, AbstractStyleNameConverter.Green, AbstractStyleNameConverter.Magenta, AbstractStyleNameConverter.Red, AbstractStyleNameConverter.White, AbstractStyleNameConverter.Yellow"
pattern,"Constructor Summary Constructors Constructor Description Magenta(List<PatternFormatter>formatters, Stringstyling) Constructs the converter."
pattern,"Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.pattern.AbstractStyleNameConverter AbstractStyleNameConverter.Black, AbstractStyleNameConverter.Blue, AbstractStyleNameConverter.Cyan, AbstractStyleNameConverter.Green, AbstractStyleNameConverter.Magenta, AbstractStyleNameConverter.Red, AbstractStyleNameConverter.White, AbstractStyleNameConverter.Yellow"
pattern,"Constructor Summary Constructors Constructor Description Red(List<PatternFormatter>formatters, Stringstyling) Constructs the converter."
pattern,"Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.pattern.AbstractStyleNameConverter AbstractStyleNameConverter.Black, AbstractStyleNameConverter.Blue, AbstractStyleNameConverter.Cyan, AbstractStyleNameConverter.Green, AbstractStyleNameConverter.Magenta, AbstractStyleNameConverter.Red, AbstractStyleNameConverter.White, AbstractStyleNameConverter.Yellow"
pattern,"Constructor Summary Constructors Constructor Description White(List<PatternFormatter>formatters, Stringstyling) Constructs the converter."
pattern,"Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.pattern.AbstractStyleNameConverter AbstractStyleNameConverter.Black, AbstractStyleNameConverter.Blue, AbstractStyleNameConverter.Cyan, AbstractStyleNameConverter.Green, AbstractStyleNameConverter.Magenta, AbstractStyleNameConverter.Red, AbstractStyleNameConverter.White, AbstractStyleNameConverter.Yellow"
pattern,"Constructor Summary Constructors Constructor Description Yellow(List<PatternFormatter>formatters, Stringstyling) Constructs the converter."
pattern,"Constructor Summary Constructors Modifier Constructor Description protected EqualsBaseReplacementConverter(Stringname, Stringstyle, List<PatternFormatter>formatters, StringtestString, Stringsubstitution, PatternParserparser) Construct the converter."
pattern,The extended stack trace will also include the location of where the class was loaded from and the version of the jar if available.
pattern,"Constructor Summary Constructors Constructor Description FormattingInfo(booleanleftAlign, intminLength, intmaxLength, booleanleftTruncate) Creates new instance. FormattingInfo(booleanleftAlign, intminLength, intmaxLength, booleanleftTruncate, booleanzeroPad) Creates new instance."
pattern,For example:
pattern,You can define custom colors for each Level:
pattern,You can use a predefined style:
pattern,The available predefined styles are:
pattern,Default
pattern,Log4j - The same as Default
pattern,Logback
pattern,"You can use whitespace around the comma and equal sign. The names in values MUST come from the AnsiEscape enum, case is normalized to upper-case internally."
pattern,"To disable ANSI output unconditionally, specify an additional option disableAnsi=true, or to disable ANSI output if no console is detected, specify option noConsoleNoAnsi=true e.g.."
pattern,Constructor Summary Constructors Constructor Description HtmlTextRenderer(String[]formats)
pattern,AnsiRenderer
pattern,"Constructor Summary Constructors Constructor Description JAnsiTextRenderer(String[]formats, Map<String,org.fusesource.jansi.AnsiRenderer.Code[]>defaultStyleMap)"
pattern,"Constructor Summary Constructors Constructor Description LiteralPatternConverter(Configurationconfig, Stringliteral, booleanconvertBackslashes) Create a new instance."
pattern,"Constructor Summary Constructors Modifier Constructor Description protected LogEventPatternConverter(Stringname, Stringstyle) Constructs an instance of LoggingEventPatternConverter."
pattern,Constructor Summary Constructors Constructor Description NameAbbreviator()
pattern,"Constructor Summary Constructors Modifier Constructor Description protected NamePatternConverter(Stringname, Stringstyle, String[]options) Constructor."
pattern,"Constructor Summary Constructors Constructor Description PatternFormatter(LogEventPatternConverterconverter, FormattingInfofield)"
pattern,It is this class that parses conversion patterns and creates a chained list of PatternConverters.
pattern,"Constructor Summary Constructors Constructor Description PatternParser(StringconverterKey) Constructor. PatternParser(Configurationconfig, StringconverterKey, Class<?>expected) Constructor. PatternParser(Configurationconfig, StringconverterKey, Class<?>expectedClass, Class<?>filterClass) Constructor."
pattern,Constructor Summary Constructors Constructor Description PlainTextRenderer()
pattern,Constructor Summary Constructors Constructor Description RelativeTimePatternConverter() Private constructor.
pattern,The extended stack trace will also include the location of where the class was loaded from and the version of the jar if available.
pattern,"To disable ANSI output unconditionally, specify an additional option disableAnsi=true, or to disable ANSI output if no console is detected, specify option noConsoleNoAnsi=true."
pattern,"Constructor Summary Constructors Modifier Constructor Description protected ThrowablePatternConverter(Stringname, Stringstyle, String[]options) Deprecated. Use ThrowablePatternConverter(String name, String stule, String[] options, Configuration config) protected ThrowablePatternConverter(Stringname, Stringstyle, String[]options, Configurationconfig) Constructor."
script,"Constructor Summary Constructors Constructor Description AbstractScript(Stringname, Stringlanguage, StringscriptText)"
script,"Constructor Summary Constructors Constructor Description Script(Stringname, Stringlanguage, StringscriptText)"
script,"Constructor Summary Constructors Constructor Description ScriptFile(Stringname, PathfilePath, Stringlanguage, booleanisWatched, StringscriptText)"
script,"Constructor Summary Constructors Constructor Description ScriptManager(Configurationconfiguration, WatchManagerwatchManager, StringscriptLanguages)"
script,"Constructor Summary Constructors Constructor Description ScriptRef(Stringname, ScriptManagerscriptManager)"
selector,Constructor Summary Constructors Constructor Description BasicContextSelector()
selector,The main downside to this ContextSelector is that Configuration is more challenging.
selector,This ContextSelector should not be used with a Servlet Filter such as the Log4jServletFilter.
selector,Constructor Summary Constructors Constructor Description ClassLoaderContextSelector()
selector,Constructor Summary Constructors Constructor Description CoreContextSelectors()
selector,"For security reasons, JNDI must be enabled by setting system property log4j2.enableJndiContextSelector=true."
selector,Here is an example of an env-entry:
selector,"If multiple applications use the same logging context name, then they will share the same logging context."
selector,You can also specify the URL for this context's configuration resource. This repository selector (ContextJNDISelector) will use this resource to automatically configure the log4j repository.
selector,"It usually good practice for configuration resources of distinct applications to have distinct names. However, if this is not possible Naming"
selector,Constructor Summary Constructors Constructor Description JndiContextSelector()
time,Instances of this class are not thread-safe and should not be shared between threads.
time,Serialized Form
time,Constructor Summary Constructors Constructor Description MutableInstant()
tools,Constructor Summary Constructors Constructor Description BasicCommandLineArguments()
tools,Constructor Summary Constructors Constructor Description CustomLoggerGenerator()
tools,Constructor Summary Constructors Constructor Description ExtendedLoggerGenerator()
tools,Usage: To generate source code for an extended logger that adds custom log levels to the existing ones: java org.apache.logging.log4j.core.tools.Generate$ExtendedLogger <logger.class.name> <CUSTOMLEVEL>=<WEIGHT> [CUSTOMLEVEL2=WEIGHT2 [CUSTOMLEVEL3=WEIGHT3] ...] Example of creating an extended logger: java org.apache.logging.log4j.core.tools.Generate$ExtendedLogger com.mycomp.ExtLogger DIAG=350 NOTICE=450 VERBOSE=550 To generate source code for a custom logger that replaces the existing log levels with custom ones: java org.apache.logging.log4j.core.tools.Generate$CustomLogger <logger.class.name> <CUSTOMLEVEL>=<WEIGHT> [CUSTOMLEVEL2=WEIGHT2 [CUSTOMLEVEL3=WEIGHT3] ...] Example of creating a custom logger: java org.apache.logging.log4j.core.tools.Generate$CustomLogger com.mycomp.MyLogger DEFCON1=350 DEFCON2=450 DEFCON3=550
tools,To generate source code for an extended logger that adds custom log levels to the existing ones: java org.apache.logging.log4j.core.tools.Generate$ExtendedLogger <logger.class.name> <CUSTOMLEVEL>=<WEIGHT> [CUSTOMLEVEL2=WEIGHT2 [CUSTOMLEVEL3=WEIGHT3] ...] Example of creating an extended logger: java org.apache.logging.log4j.core.tools.Generate$ExtendedLogger com.mycomp.ExtLogger DIAG=350 NOTICE=450 VERBOSE=550 To generate source code for a custom logger that replaces the existing log levels with custom ones: java org.apache.logging.log4j.core.tools.Generate$CustomLogger <logger.class.name> <CUSTOMLEVEL>=<WEIGHT> [CUSTOMLEVEL2=WEIGHT2 [CUSTOMLEVEL3=WEIGHT3] ...] Example of creating a custom logger: java org.apache.logging.log4j.core.tools.Generate$CustomLogger com.mycomp.MyLogger DEFCON1=350 DEFCON2=450 DEFCON3=550
tools,Example of creating an extended logger: java org.apache.logging.log4j.core.tools.Generate$ExtendedLogger com.mycomp.ExtLogger DIAG=350 NOTICE=450 VERBOSE=550 To generate source code for a custom logger that replaces the existing log levels with custom ones: java org.apache.logging.log4j.core.tools.Generate$CustomLogger <logger.class.name> <CUSTOMLEVEL>=<WEIGHT> [CUSTOMLEVEL2=WEIGHT2 [CUSTOMLEVEL3=WEIGHT3] ...] Example of creating a custom logger: java org.apache.logging.log4j.core.tools.Generate$CustomLogger com.mycomp.MyLogger DEFCON1=350 DEFCON2=450 DEFCON3=550
tools,To generate source code for a custom logger that replaces the existing log levels with custom ones: java org.apache.logging.log4j.core.tools.Generate$CustomLogger <logger.class.name> <CUSTOMLEVEL>=<WEIGHT> [CUSTOMLEVEL2=WEIGHT2 [CUSTOMLEVEL3=WEIGHT3] ...] Example of creating a custom logger: java org.apache.logging.log4j.core.tools.Generate$CustomLogger com.mycomp.MyLogger DEFCON1=350 DEFCON2=450 DEFCON3=550
tools,Example of creating a custom logger: java org.apache.logging.log4j.core.tools.Generate$CustomLogger com.mycomp.MyLogger DEFCON1=350 DEFCON2=450 DEFCON3=550
tools,"Nested Class Summary Nested Classes Modifier and Type Class Description static final class Generate.CustomLogger Generates source code for custom logger wrappers that only provide convenience methods for the specified custom levels, not for the standard built-in levels. static final class Generate.ExtendedLogger Generates source code for extended logger wrappers that provide convenience methods for the specified custom levels, and by extending org.apache.logging.log4j.spi.ExtendedLoggerWrapper, inherit the convenience methods for the built-in levels provided by the Logger interface."
util,Nested Class Summary Nested Classes Modifier and Type Class Description static class AbstractWatcher.ReconfigurationRunnable Helper class for triggering a reconfiguration in a background thread.
util,"Constructor Summary Constructors Constructor Description AbstractWatcher(Configurationconfiguration, Reconfigurablereconfigurable, List<ConfigurationListener>configurationListeners)"
util,"Constructor Summary Constructors Constructor Description ReconfigurationRunnable(ConfigurationListenerconfigurationListener, Reconfigurablereconfigurable)"
util,Constructor Summary Constructors Constructor Description ArrayUtils()
util,Constructor Summary Constructors Constructor Description BasicAuthorizationProvider(PropertiesUtilprops)
util,Constructor Summary Constructors Constructor Description CloseShieldOutputStream(OutputStreamdelegate)
util,Constructor Summary Constructors Constructor Description CloseShieldWriter(Writerdelegate)
util,"Cron expressions are comprised of 6 required fields and one optional field separated by white space. The fields respectively are described as follows: Cron Expressions Allowed Fields and Values Field Name Allowed Values Allowed Special Characters Seconds 0-59 , - * / Minutes 0-59 , - * / Hours 0-23 , - * / Day-of-month 1-31 , - * ? / L W Month 0-11 or JAN-DEC , - * / Day-of-Week 1-7 or SUN-SAT , - * ? / L # Year (Optional) empty, 1970-2199 , - * / The '*' character is used to specify all values. For example, ""*"" in the minute field means ""every minute"". The '?' character is allowed for the day-of-month and day-of-week fields. It is used to specify 'no specific value'. This is useful when you need to specify something in one of the two fields, but not the other. The '-' character is used to specify ranges For example ""10-12"" in the hour field means ""the hours 10, 11 and 12"". The ',' character is used to specify additional values. For example ""MON,WED,FRI"" in the day-of-week field means ""the days Monday, Wednesday, and Friday"". The '/' character is used to specify increments. For example ""0/15"" in the seconds field means ""the seconds 0, 15, 30, and 45"". And ""5/15"" in the seconds field means ""the seconds 5, 20, 35, and 50"". Specifying '*' before the '/' is equivalent to specifying 0 is the value to start with. Essentially, for each field in the expression, there is a set of numbers that can be turned on or off. For seconds and minutes, the numbers range from 0 to 59. For hours 0 to 23, for days of the month 0 to 31, and for months 0 to 11 (JAN to DEC). The ""/"" character simply helps you turn on every ""nth"" value in the given set. Thus ""7/6"" in the month field only turns on month ""7"", it does NOT mean every 6th month, please note that subtlety. The 'L' character is allowed for the day-of-month and day-of-week fields. This character is short-hand for ""last"", but it has different meaning in each of the two fields. For example, the value ""L"" in the day-of-month field means ""the last day of the month"" - day 31 for January, day 28 for February on non-leap years. If used in the day-of-week field by itself, it simply means ""7"" or ""SAT"". But if used in the day-of-week field after another value, it means ""the last xxx day of the month"" - for example ""6L"" means ""the last friday of the month"". You can also specify an offset from the last day of the month, such as ""L-3"" which would mean the third-to-last day of the calendar month. When using the 'L' option, it is important not to specify lists, or ranges of values, as you'll get confusing/unexpected results. The 'W' character is allowed for the day-of-month field. This character is used to specify the weekday (Monday-Friday) nearest the given day. As an example, if you were to specify ""15W"" as the value for the day-of-month field, the meaning is: ""the nearest weekday to the 15th of the month"". So if the 15th is a Saturday, the trigger will fire on Friday the 14th. If the 15th is a Sunday, the trigger will fire on Monday the 16th. If the 15th is a Tuesday, then it will fire on Tuesday the 15th. However if you specify ""1W"" as the value for day-of-month, and the 1st is a Saturday, the trigger will fire on Monday the 3rd, as it will not 'jump' over the boundary of a month's days. The 'W' character can only be specified when the day-of-month is a single day, not a range or list of days. The 'L' and 'W' characters can also be combined for the day-of-month expression to yield 'LW', which translates to ""last weekday of the month"". The '#' character is allowed for the day-of-week field. This character is used to specify ""the nth"" XXX day of the month. For example, the value of ""6#3"" in the day-of-week field means the third Friday of the month (day 6 = Friday and ""#3"" = the 3rd one in the month). Other examples: ""2#1"" = the first Monday of the month and ""4#5"" = the fifth Wednesday of the month. Note that if you specify ""#5"" and there is not 5 of the given day-of-week in the month, then no firing will occur that month. If the '#' character is used, there can only be one expression in the day-of-week field (""3#1,6#3"" is not valid, since there are two expressions). The legal characters and the names of months and days of the week are not case sensitive. NOTES: Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields). Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,Field Name
util,Allowed Values
util,Allowed Special Characters
util,Seconds
util,"0-59 , - * /"
util,0-59
util,", - * /"
util,", - * /"
util,Minutes
util,"0-59 , - * /"
util,0-59
util,", - * /"
util,", - * /"
util,Hours
util,"0-23 , - * /"
util,0-23
util,", - * /"
util,", - * /"
util,Day-of-month
util,"1-31 , - * ? / L W"
util,1-31
util,", - * ? / L W"
util,", - * ? / L W"
util,Month
util,"0-11 or JAN-DEC , - * /"
util,0-11 or JAN-DEC
util,", - * /"
util,", - * /"
util,Day-of-Week
util,"1-7 or SUN-SAT , - * ? / L #"
util,1-7 or SUN-SAT
util,", - * ? / L #"
util,", - * ? / L #"
util,Year (Optional)
util,"empty, 1970-2199 , - * /"
util,"empty, 1970-2199"
util,", - * /"
util,", - * /"
util,"The '*' character is used to specify all values. For example, ""*"" in the minute field means ""every minute"". The '?' character is allowed for the day-of-month and day-of-week fields. It is used to specify 'no specific value'. This is useful when you need to specify something in one of the two fields, but not the other. The '-' character is used to specify ranges For example ""10-12"" in the hour field means ""the hours 10, 11 and 12"". The ',' character is used to specify additional values. For example ""MON,WED,FRI"" in the day-of-week field means ""the days Monday, Wednesday, and Friday"". The '/' character is used to specify increments. For example ""0/15"" in the seconds field means ""the seconds 0, 15, 30, and 45"". And ""5/15"" in the seconds field means ""the seconds 5, 20, 35, and 50"". Specifying '*' before the '/' is equivalent to specifying 0 is the value to start with. Essentially, for each field in the expression, there is a set of numbers that can be turned on or off. For seconds and minutes, the numbers range from 0 to 59. For hours 0 to 23, for days of the month 0 to 31, and for months 0 to 11 (JAN to DEC). The ""/"" character simply helps you turn on every ""nth"" value in the given set. Thus ""7/6"" in the month field only turns on month ""7"", it does NOT mean every 6th month, please note that subtlety. The 'L' character is allowed for the day-of-month and day-of-week fields. This character is short-hand for ""last"", but it has different meaning in each of the two fields. For example, the value ""L"" in the day-of-month field means ""the last day of the month"" - day 31 for January, day 28 for February on non-leap years. If used in the day-of-week field by itself, it simply means ""7"" or ""SAT"". But if used in the day-of-week field after another value, it means ""the last xxx day of the month"" - for example ""6L"" means ""the last friday of the month"". You can also specify an offset from the last day of the month, such as ""L-3"" which would mean the third-to-last day of the calendar month. When using the 'L' option, it is important not to specify lists, or ranges of values, as you'll get confusing/unexpected results. The 'W' character is allowed for the day-of-month field. This character is used to specify the weekday (Monday-Friday) nearest the given day. As an example, if you were to specify ""15W"" as the value for the day-of-month field, the meaning is: ""the nearest weekday to the 15th of the month"". So if the 15th is a Saturday, the trigger will fire on Friday the 14th. If the 15th is a Sunday, the trigger will fire on Monday the 16th. If the 15th is a Tuesday, then it will fire on Tuesday the 15th. However if you specify ""1W"" as the value for day-of-month, and the 1st is a Saturday, the trigger will fire on Monday the 3rd, as it will not 'jump' over the boundary of a month's days. The 'W' character can only be specified when the day-of-month is a single day, not a range or list of days. The 'L' and 'W' characters can also be combined for the day-of-month expression to yield 'LW', which translates to ""last weekday of the month"". The '#' character is allowed for the day-of-week field. This character is used to specify ""the nth"" XXX day of the month. For example, the value of ""6#3"" in the day-of-week field means the third Friday of the month (day 6 = Friday and ""#3"" = the 3rd one in the month). Other examples: ""2#1"" = the first Monday of the month and ""4#5"" = the fifth Wednesday of the month. Note that if you specify ""#5"" and there is not 5 of the given day-of-week in the month, then no firing will occur that month. If the '#' character is used, there can only be one expression in the day-of-week field (""3#1,6#3"" is not valid, since there are two expressions). The legal characters and the names of months and days of the week are not case sensitive. NOTES: Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields). Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,"The '?' character is allowed for the day-of-month and day-of-week fields. It is used to specify 'no specific value'. This is useful when you need to specify something in one of the two fields, but not the other. The '-' character is used to specify ranges For example ""10-12"" in the hour field means ""the hours 10, 11 and 12"". The ',' character is used to specify additional values. For example ""MON,WED,FRI"" in the day-of-week field means ""the days Monday, Wednesday, and Friday"". The '/' character is used to specify increments. For example ""0/15"" in the seconds field means ""the seconds 0, 15, 30, and 45"". And ""5/15"" in the seconds field means ""the seconds 5, 20, 35, and 50"". Specifying '*' before the '/' is equivalent to specifying 0 is the value to start with. Essentially, for each field in the expression, there is a set of numbers that can be turned on or off. For seconds and minutes, the numbers range from 0 to 59. For hours 0 to 23, for days of the month 0 to 31, and for months 0 to 11 (JAN to DEC). The ""/"" character simply helps you turn on every ""nth"" value in the given set. Thus ""7/6"" in the month field only turns on month ""7"", it does NOT mean every 6th month, please note that subtlety. The 'L' character is allowed for the day-of-month and day-of-week fields. This character is short-hand for ""last"", but it has different meaning in each of the two fields. For example, the value ""L"" in the day-of-month field means ""the last day of the month"" - day 31 for January, day 28 for February on non-leap years. If used in the day-of-week field by itself, it simply means ""7"" or ""SAT"". But if used in the day-of-week field after another value, it means ""the last xxx day of the month"" - for example ""6L"" means ""the last friday of the month"". You can also specify an offset from the last day of the month, such as ""L-3"" which would mean the third-to-last day of the calendar month. When using the 'L' option, it is important not to specify lists, or ranges of values, as you'll get confusing/unexpected results. The 'W' character is allowed for the day-of-month field. This character is used to specify the weekday (Monday-Friday) nearest the given day. As an example, if you were to specify ""15W"" as the value for the day-of-month field, the meaning is: ""the nearest weekday to the 15th of the month"". So if the 15th is a Saturday, the trigger will fire on Friday the 14th. If the 15th is a Sunday, the trigger will fire on Monday the 16th. If the 15th is a Tuesday, then it will fire on Tuesday the 15th. However if you specify ""1W"" as the value for day-of-month, and the 1st is a Saturday, the trigger will fire on Monday the 3rd, as it will not 'jump' over the boundary of a month's days. The 'W' character can only be specified when the day-of-month is a single day, not a range or list of days. The 'L' and 'W' characters can also be combined for the day-of-month expression to yield 'LW', which translates to ""last weekday of the month"". The '#' character is allowed for the day-of-week field. This character is used to specify ""the nth"" XXX day of the month. For example, the value of ""6#3"" in the day-of-week field means the third Friday of the month (day 6 = Friday and ""#3"" = the 3rd one in the month). Other examples: ""2#1"" = the first Monday of the month and ""4#5"" = the fifth Wednesday of the month. Note that if you specify ""#5"" and there is not 5 of the given day-of-week in the month, then no firing will occur that month. If the '#' character is used, there can only be one expression in the day-of-week field (""3#1,6#3"" is not valid, since there are two expressions). The legal characters and the names of months and days of the week are not case sensitive. NOTES: Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields). Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,"The '-' character is used to specify ranges For example ""10-12"" in the hour field means ""the hours 10, 11 and 12"". The ',' character is used to specify additional values. For example ""MON,WED,FRI"" in the day-of-week field means ""the days Monday, Wednesday, and Friday"". The '/' character is used to specify increments. For example ""0/15"" in the seconds field means ""the seconds 0, 15, 30, and 45"". And ""5/15"" in the seconds field means ""the seconds 5, 20, 35, and 50"". Specifying '*' before the '/' is equivalent to specifying 0 is the value to start with. Essentially, for each field in the expression, there is a set of numbers that can be turned on or off. For seconds and minutes, the numbers range from 0 to 59. For hours 0 to 23, for days of the month 0 to 31, and for months 0 to 11 (JAN to DEC). The ""/"" character simply helps you turn on every ""nth"" value in the given set. Thus ""7/6"" in the month field only turns on month ""7"", it does NOT mean every 6th month, please note that subtlety. The 'L' character is allowed for the day-of-month and day-of-week fields. This character is short-hand for ""last"", but it has different meaning in each of the two fields. For example, the value ""L"" in the day-of-month field means ""the last day of the month"" - day 31 for January, day 28 for February on non-leap years. If used in the day-of-week field by itself, it simply means ""7"" or ""SAT"". But if used in the day-of-week field after another value, it means ""the last xxx day of the month"" - for example ""6L"" means ""the last friday of the month"". You can also specify an offset from the last day of the month, such as ""L-3"" which would mean the third-to-last day of the calendar month. When using the 'L' option, it is important not to specify lists, or ranges of values, as you'll get confusing/unexpected results. The 'W' character is allowed for the day-of-month field. This character is used to specify the weekday (Monday-Friday) nearest the given day. As an example, if you were to specify ""15W"" as the value for the day-of-month field, the meaning is: ""the nearest weekday to the 15th of the month"". So if the 15th is a Saturday, the trigger will fire on Friday the 14th. If the 15th is a Sunday, the trigger will fire on Monday the 16th. If the 15th is a Tuesday, then it will fire on Tuesday the 15th. However if you specify ""1W"" as the value for day-of-month, and the 1st is a Saturday, the trigger will fire on Monday the 3rd, as it will not 'jump' over the boundary of a month's days. The 'W' character can only be specified when the day-of-month is a single day, not a range or list of days. The 'L' and 'W' characters can also be combined for the day-of-month expression to yield 'LW', which translates to ""last weekday of the month"". The '#' character is allowed for the day-of-week field. This character is used to specify ""the nth"" XXX day of the month. For example, the value of ""6#3"" in the day-of-week field means the third Friday of the month (day 6 = Friday and ""#3"" = the 3rd one in the month). Other examples: ""2#1"" = the first Monday of the month and ""4#5"" = the fifth Wednesday of the month. Note that if you specify ""#5"" and there is not 5 of the given day-of-week in the month, then no firing will occur that month. If the '#' character is used, there can only be one expression in the day-of-week field (""3#1,6#3"" is not valid, since there are two expressions). The legal characters and the names of months and days of the week are not case sensitive. NOTES: Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields). Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,"The ',' character is used to specify additional values. For example ""MON,WED,FRI"" in the day-of-week field means ""the days Monday, Wednesday, and Friday"". The '/' character is used to specify increments. For example ""0/15"" in the seconds field means ""the seconds 0, 15, 30, and 45"". And ""5/15"" in the seconds field means ""the seconds 5, 20, 35, and 50"". Specifying '*' before the '/' is equivalent to specifying 0 is the value to start with. Essentially, for each field in the expression, there is a set of numbers that can be turned on or off. For seconds and minutes, the numbers range from 0 to 59. For hours 0 to 23, for days of the month 0 to 31, and for months 0 to 11 (JAN to DEC). The ""/"" character simply helps you turn on every ""nth"" value in the given set. Thus ""7/6"" in the month field only turns on month ""7"", it does NOT mean every 6th month, please note that subtlety. The 'L' character is allowed for the day-of-month and day-of-week fields. This character is short-hand for ""last"", but it has different meaning in each of the two fields. For example, the value ""L"" in the day-of-month field means ""the last day of the month"" - day 31 for January, day 28 for February on non-leap years. If used in the day-of-week field by itself, it simply means ""7"" or ""SAT"". But if used in the day-of-week field after another value, it means ""the last xxx day of the month"" - for example ""6L"" means ""the last friday of the month"". You can also specify an offset from the last day of the month, such as ""L-3"" which would mean the third-to-last day of the calendar month. When using the 'L' option, it is important not to specify lists, or ranges of values, as you'll get confusing/unexpected results. The 'W' character is allowed for the day-of-month field. This character is used to specify the weekday (Monday-Friday) nearest the given day. As an example, if you were to specify ""15W"" as the value for the day-of-month field, the meaning is: ""the nearest weekday to the 15th of the month"". So if the 15th is a Saturday, the trigger will fire on Friday the 14th. If the 15th is a Sunday, the trigger will fire on Monday the 16th. If the 15th is a Tuesday, then it will fire on Tuesday the 15th. However if you specify ""1W"" as the value for day-of-month, and the 1st is a Saturday, the trigger will fire on Monday the 3rd, as it will not 'jump' over the boundary of a month's days. The 'W' character can only be specified when the day-of-month is a single day, not a range or list of days. The 'L' and 'W' characters can also be combined for the day-of-month expression to yield 'LW', which translates to ""last weekday of the month"". The '#' character is allowed for the day-of-week field. This character is used to specify ""the nth"" XXX day of the month. For example, the value of ""6#3"" in the day-of-week field means the third Friday of the month (day 6 = Friday and ""#3"" = the 3rd one in the month). Other examples: ""2#1"" = the first Monday of the month and ""4#5"" = the fifth Wednesday of the month. Note that if you specify ""#5"" and there is not 5 of the given day-of-week in the month, then no firing will occur that month. If the '#' character is used, there can only be one expression in the day-of-week field (""3#1,6#3"" is not valid, since there are two expressions). The legal characters and the names of months and days of the week are not case sensitive. NOTES: Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields). Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,"The '/' character is used to specify increments. For example ""0/15"" in the seconds field means ""the seconds 0, 15, 30, and 45"". And ""5/15"" in the seconds field means ""the seconds 5, 20, 35, and 50"". Specifying '*' before the '/' is equivalent to specifying 0 is the value to start with. Essentially, for each field in the expression, there is a set of numbers that can be turned on or off. For seconds and minutes, the numbers range from 0 to 59. For hours 0 to 23, for days of the month 0 to 31, and for months 0 to 11 (JAN to DEC). The ""/"" character simply helps you turn on every ""nth"" value in the given set. Thus ""7/6"" in the month field only turns on month ""7"", it does NOT mean every 6th month, please note that subtlety. The 'L' character is allowed for the day-of-month and day-of-week fields. This character is short-hand for ""last"", but it has different meaning in each of the two fields. For example, the value ""L"" in the day-of-month field means ""the last day of the month"" - day 31 for January, day 28 for February on non-leap years. If used in the day-of-week field by itself, it simply means ""7"" or ""SAT"". But if used in the day-of-week field after another value, it means ""the last xxx day of the month"" - for example ""6L"" means ""the last friday of the month"". You can also specify an offset from the last day of the month, such as ""L-3"" which would mean the third-to-last day of the calendar month. When using the 'L' option, it is important not to specify lists, or ranges of values, as you'll get confusing/unexpected results. The 'W' character is allowed for the day-of-month field. This character is used to specify the weekday (Monday-Friday) nearest the given day. As an example, if you were to specify ""15W"" as the value for the day-of-month field, the meaning is: ""the nearest weekday to the 15th of the month"". So if the 15th is a Saturday, the trigger will fire on Friday the 14th. If the 15th is a Sunday, the trigger will fire on Monday the 16th. If the 15th is a Tuesday, then it will fire on Tuesday the 15th. However if you specify ""1W"" as the value for day-of-month, and the 1st is a Saturday, the trigger will fire on Monday the 3rd, as it will not 'jump' over the boundary of a month's days. The 'W' character can only be specified when the day-of-month is a single day, not a range or list of days. The 'L' and 'W' characters can also be combined for the day-of-month expression to yield 'LW', which translates to ""last weekday of the month"". The '#' character is allowed for the day-of-week field. This character is used to specify ""the nth"" XXX day of the month. For example, the value of ""6#3"" in the day-of-week field means the third Friday of the month (day 6 = Friday and ""#3"" = the 3rd one in the month). Other examples: ""2#1"" = the first Monday of the month and ""4#5"" = the fifth Wednesday of the month. Note that if you specify ""#5"" and there is not 5 of the given day-of-week in the month, then no firing will occur that month. If the '#' character is used, there can only be one expression in the day-of-week field (""3#1,6#3"" is not valid, since there are two expressions). The legal characters and the names of months and days of the week are not case sensitive. NOTES: Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields). Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,"The 'L' character is allowed for the day-of-month and day-of-week fields. This character is short-hand for ""last"", but it has different meaning in each of the two fields. For example, the value ""L"" in the day-of-month field means ""the last day of the month"" - day 31 for January, day 28 for February on non-leap years. If used in the day-of-week field by itself, it simply means ""7"" or ""SAT"". But if used in the day-of-week field after another value, it means ""the last xxx day of the month"" - for example ""6L"" means ""the last friday of the month"". You can also specify an offset from the last day of the month, such as ""L-3"" which would mean the third-to-last day of the calendar month. When using the 'L' option, it is important not to specify lists, or ranges of values, as you'll get confusing/unexpected results. The 'W' character is allowed for the day-of-month field. This character is used to specify the weekday (Monday-Friday) nearest the given day. As an example, if you were to specify ""15W"" as the value for the day-of-month field, the meaning is: ""the nearest weekday to the 15th of the month"". So if the 15th is a Saturday, the trigger will fire on Friday the 14th. If the 15th is a Sunday, the trigger will fire on Monday the 16th. If the 15th is a Tuesday, then it will fire on Tuesday the 15th. However if you specify ""1W"" as the value for day-of-month, and the 1st is a Saturday, the trigger will fire on Monday the 3rd, as it will not 'jump' over the boundary of a month's days. The 'W' character can only be specified when the day-of-month is a single day, not a range or list of days. The 'L' and 'W' characters can also be combined for the day-of-month expression to yield 'LW', which translates to ""last weekday of the month"". The '#' character is allowed for the day-of-week field. This character is used to specify ""the nth"" XXX day of the month. For example, the value of ""6#3"" in the day-of-week field means the third Friday of the month (day 6 = Friday and ""#3"" = the 3rd one in the month). Other examples: ""2#1"" = the first Monday of the month and ""4#5"" = the fifth Wednesday of the month. Note that if you specify ""#5"" and there is not 5 of the given day-of-week in the month, then no firing will occur that month. If the '#' character is used, there can only be one expression in the day-of-week field (""3#1,6#3"" is not valid, since there are two expressions). The legal characters and the names of months and days of the week are not case sensitive. NOTES: Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields). Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,"The 'W' character is allowed for the day-of-month field. This character is used to specify the weekday (Monday-Friday) nearest the given day. As an example, if you were to specify ""15W"" as the value for the day-of-month field, the meaning is: ""the nearest weekday to the 15th of the month"". So if the 15th is a Saturday, the trigger will fire on Friday the 14th. If the 15th is a Sunday, the trigger will fire on Monday the 16th. If the 15th is a Tuesday, then it will fire on Tuesday the 15th. However if you specify ""1W"" as the value for day-of-month, and the 1st is a Saturday, the trigger will fire on Monday the 3rd, as it will not 'jump' over the boundary of a month's days. The 'W' character can only be specified when the day-of-month is a single day, not a range or list of days. The 'L' and 'W' characters can also be combined for the day-of-month expression to yield 'LW', which translates to ""last weekday of the month"". The '#' character is allowed for the day-of-week field. This character is used to specify ""the nth"" XXX day of the month. For example, the value of ""6#3"" in the day-of-week field means the third Friday of the month (day 6 = Friday and ""#3"" = the 3rd one in the month). Other examples: ""2#1"" = the first Monday of the month and ""4#5"" = the fifth Wednesday of the month. Note that if you specify ""#5"" and there is not 5 of the given day-of-week in the month, then no firing will occur that month. If the '#' character is used, there can only be one expression in the day-of-week field (""3#1,6#3"" is not valid, since there are two expressions). The legal characters and the names of months and days of the week are not case sensitive. NOTES: Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields). Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,"The 'L' and 'W' characters can also be combined for the day-of-month expression to yield 'LW', which translates to ""last weekday of the month"". The '#' character is allowed for the day-of-week field. This character is used to specify ""the nth"" XXX day of the month. For example, the value of ""6#3"" in the day-of-week field means the third Friday of the month (day 6 = Friday and ""#3"" = the 3rd one in the month). Other examples: ""2#1"" = the first Monday of the month and ""4#5"" = the fifth Wednesday of the month. Note that if you specify ""#5"" and there is not 5 of the given day-of-week in the month, then no firing will occur that month. If the '#' character is used, there can only be one expression in the day-of-week field (""3#1,6#3"" is not valid, since there are two expressions). The legal characters and the names of months and days of the week are not case sensitive. NOTES: Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields). Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,"The '#' character is allowed for the day-of-week field. This character is used to specify ""the nth"" XXX day of the month. For example, the value of ""6#3"" in the day-of-week field means the third Friday of the month (day 6 = Friday and ""#3"" = the 3rd one in the month). Other examples: ""2#1"" = the first Monday of the month and ""4#5"" = the fifth Wednesday of the month. Note that if you specify ""#5"" and there is not 5 of the given day-of-week in the month, then no firing will occur that month. If the '#' character is used, there can only be one expression in the day-of-week field (""3#1,6#3"" is not valid, since there are two expressions). The legal characters and the names of months and days of the week are not case sensitive. NOTES: Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields). Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,"The legal characters and the names of months and days of the week are not case sensitive. NOTES: Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields). Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,"The legal characters and the names of months and days of the week are not case sensitive. NOTES: Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields). Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,"NOTES: Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields). Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in one of these fields).
util,"Overflowing ranges is supported - that is, having a larger number on the left hand side than the right. You might do 22-2 to catch 10 o'clock at night until 2 o'clock in the morning, or you might have NOV-FEB. It is very important to note that overuse of overflowing ranges creates ranges that don't make sense and no effort has been made to determine which interpretation CronExpression chooses. An example would be ""0 0 14-6 ? * FRI-MON""."
util,Constructor Summary Constructors Constructor Description CronExpression(StringcronExpression) Constructs a new CronExpression based on the specified parameter.
util,"Constructor Summary Constructors Constructor Description CyclicBuffer(Class<T>clazz, intsize) Instantiates a new CyclicBuffer of at most maxSize events."
util,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
util,Constructor Summary Constructors Modifier Constructor Description DefaultShutdownCallbackRegistry() Constructs a DefaultShutdownRegistrationStrategy. protected DefaultShutdownCallbackRegistry(ThreadFactorythreadFactory) Constructs a DefaultShutdownRegistrationStrategy using the given ThreadFactory.
util,Constructor Summary Constructors Constructor Description DummyNanoClock() DummyNanoClock(longfixedNanoTime) Constructs a new DummyNanoClock with the specified value to return.
util,Constructor Summary Constructors Constructor Description ExecutorServices()
util,Constructor Summary Constructors Constructor Description IOUtils()
util,Constructor Summary Constructors Constructor Description JsonUtils()
util,Constructor Summary Constructors Constructor Description Builder()
util,Nested Class Summary Nested Classes Modifier and Type Class Description static class KeyValuePair.Builder
util,"Constructor Summary Constructors Constructor Description KeyValuePair(Stringkey, Stringvalue) Constructs a key/value pair."
util,"Nested Class Summary Nested classes/interfaces inherited from classjava.lang.Thread Thread.State, Thread.UncaughtExceptionHandler"
util,"Constructor Summary Constructors Constructor Description Log4jThread() Log4jThread(Runnabletarget) Log4jThread(Runnabletarget, Stringname) Log4jThread(Stringname) Log4jThread(ThreadGroupgroup, Runnabletarget) Log4jThread(ThreadGroupgroup, Runnabletarget, Stringname) Log4jThread(ThreadGroupgroup, Runnabletarget, Stringname, longstackSize) Log4jThread(ThreadGroupgroup, Stringname)"
util,"Constructor Summary Constructors Constructor Description Log4jThreadFactory(StringthreadFactoryName, booleandaemon, intpriority) Constructs an initialized thread factory."
util,This output stream has no destination (file/socket etc.) and all bytes written to it are ignored and lost.
util,"This iterator does not support remove(), as the object array cannot be structurally modified. The iterator implements a reset() method, allowing the reset of the iterator back to the start if required."
util,"The iterator implements a reset() method, allowing the reset of the iterator back to the start if required."
util,"Constructor Summary Constructors Constructor Description ObjectArrayIterator(E...array) Constructs an ObjectArrayIterator that will iterate over the values in the specified array. ObjectArrayIterator(E[]array, intstart) Constructs an ObjectArrayIterator that will iterate over the values in the specified array from a specific start index. ObjectArrayIterator(E[]array, intstart, intend) Construct an ObjectArrayIterator that will iterate over a range of values in the specified array."
util,Pattern
util,"Constructor Summary Constructors Constructor Description Source(Filefile) Constructs a new Source with the specified file. Source(URIuri) Constructs a new Source from the specified URI. Source(URIuri, longlastModified) Deprecated. Use Source(URI). Source(URLurl) Constructs a new Source from the specified URL. Source(Pathpath) Constructs a new Source from the specified Path. Source(ConfigurationSourcesource) Constructs a Source from a ConfigurationSource."
util,"NOTE: This implementation, as an alternative to java.io.StringWriter, provides an un-synchronized (i.e. for use in a single thread) implementation for better performance. For safe usage with multiple Threads then java.io.StringWriter should be used. History Copied from Apache Commons IO revision 1681000. Pick up Javadoc updates from revision 1722253."
util,Constructor Summary Constructors Constructor Description SystemClock()
util,Constructor Summary Constructors Constructor Description SystemMillisClock()
util,Constructor Summary Constructors Constructor Description SystemNanoClock()
util,Type
util,GenericArrayType
util,ParameterizedType
util,WildcardType
util,Class
util,FileWatcher
util,ConfigurationScheduler
util,Nested Class Summary Nested classes/interfaces inherited from interfaceorg.apache.logging.log4j.core.LifeCycle LifeCycle.State
util,Constructor Summary Constructors Constructor Description WatchManager(ConfigurationSchedulerscheduler)
util,Nested Class Summary Nested classes/interfaces inherited from classorg.apache.logging.log4j.core.util.AbstractWatcher AbstractWatcher.ReconfigurationRunnable
util,"Constructor Summary Constructors Constructor Description WrappedFileWatcher(FileWatcherwatcher) WrappedFileWatcher(FileWatcherwatcher, Configurationconfiguration, Reconfigurablereconfigurable, List<ConfigurationListener>configurationListeners, longlastModifiedMillis)"
util,FastDateFormat is a fast and thread-safe version of SimpleDateFormat.
util,"To obtain an instance of FastDateFormat, use one of the static factory methods: getInstance(String, TimeZone, Locale), getDateInstance(int, TimeZone, Locale), getTimeInstance(int, TimeZone, Locale), or getDateTimeInstance(int, int, TimeZone, Locale)"
util,"Since FastDateFormat is thread safe, you can use a static member instance:"
util,"This class can be used as a direct replacement to SimpleDateFormat in most formatting and parsing situations. This class is especially useful in multi-threaded server environments. SimpleDateFormat is not thread-safe in any JDK version, nor will it be as Sun have closed the bug/RFE."
util,All patterns are compatible with SimpleDateFormat (except time zones and some year patterns - see below).
util,"Since 3.2, FastDateFormat supports parsing as well as printing."
util,"Java 1.4 introduced a new pattern letter, 'Z', to represent time zones in RFC822 format (eg. +0800 or -1100). This pattern letter can be used here (on all JDK versions)."
util,"In addition, the pattern 'ZZ' has been made to represent ISO 8601 extended format time zones (eg. +08:00 or -11:00). This introduces a minor incompatibility with Java 1.4, but at a gain of useful functionality."
util,"Javadoc cites for the year pattern: For formatting, if the number of pattern letters is 2, the year is truncated to 2 digits; otherwise it is interpreted as a number. Starting with Java 1.7 a pattern of 'Y' or 'YYY' will be formatted as '2003', while it was '03' in former Java versions. FastDateFormat implements the behavior of Java 7."
util,Copied and modified from Apache Commons Lang.
util,"Constructor Summary Constructors Modifier Constructor Description protected FastDateFormat(Stringpattern, TimeZonetimeZone, Localelocale) Constructs a new FastDateFormat. protected FastDateFormat(Stringpattern, TimeZonetimeZone, Localelocale, DatecenturyStart) Constructs a new FastDateFormat."
util,FastDatePrinter is a fast and thread-safe version of SimpleDateFormat.
util,"To obtain a FastDatePrinter, use FastDateFormat.getInstance(String, TimeZone, Locale) or another variation of the factory methods of FastDateFormat."
util,"Since FastDatePrinter is thread safe, you can use a static member instance:"
util,"This class can be used as a direct replacement to SimpleDateFormat in most formatting situations. This class is especially useful in multi-threaded server environments. SimpleDateFormat is not thread-safe in any JDK version, nor will it be as Sun have closed the bug/RFE."
util,"Only formatting is supported by this class, but all patterns are compatible with SimpleDateFormat (except time zones and some year patterns - see below)."
util,"Java 1.4 introduced a new pattern letter, 'Z', to represent time zones in RFC822 format (eg. +0800 or -1100). This pattern letter can be used here (on all JDK versions)."
util,"In addition, the pattern 'ZZ' has been made to represent ISO 8601 extended format time zones (eg. +08:00 or -11:00). This introduces a minor incompatibility with Java 1.4, but at a gain of useful functionality."
util,"Starting with JDK7, ISO 8601 support was added using the pattern 'X'. To maintain compatibility, 'ZZ' will continue to be supported, but using one of the 'X' formats is recommended. Javadoc cites for the year pattern: For formatting, if the number of pattern letters is 2, the year is truncated to 2 digits; otherwise it is interpreted as a number. Starting with Java 1.7 a pattern of 'Y' or 'YYY' will be formatted as '2003', while it was '03' in former Java versions. FastDatePrinter implements the behavior of Java 7. Copied and modified from Apache Commons Lang."
util,"Javadoc cites for the year pattern: For formatting, if the number of pattern letters is 2, the year is truncated to 2 digits; otherwise it is interpreted as a number. Starting with Java 1.7 a pattern of 'Y' or 'YYY' will be formatted as '2003', while it was '03' in former Java versions. FastDatePrinter implements the behavior of Java 7."
util,Copied and modified from Apache Commons Lang.
util,Serialized Form
util,"Constructor Summary Constructors Modifier Constructor Description protected FastDatePrinter(Stringpattern, TimeZonetimeZone, Localelocale) Constructs a new FastDatePrinter."
util,Related benchmarks: /log4j-perf/src/main/java/org/apache/logging/log4j/perf/jmh/TimeFormatBenchmark.java and /log4j-perf/src/main/java/org/apache/logging/log4j/perf/jmh/ThreadsafeDateFormatBenchmark.java
util,Nested Class Summary Nested Classes Modifier and Type Class Description static enum FixedDateFormat.FixedFormat Enumeration over the supported date/time format patterns. static enum FixedDateFormat.FixedTimeZoneFormat Fixed time zone formats.
util,Constructor Summary Constructors Constructor Description Format()
